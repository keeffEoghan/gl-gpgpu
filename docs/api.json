{
	"id": 0,
	"name": "@epok.tech/gl-gpgpu",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 247,
			"name": "api",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Description of the "
					},
					{
						"kind": "code",
						"text": "`api`"
					},
					{
						"kind": "text",
						"text": " hooks for "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": ", to interact with "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " resources.\n\nNot implemented within the "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " library.\n\nBased on ["
					},
					{
						"kind": "code",
						"text": "`regl`"
					},
					{
						"kind": "text",
						"text": "](https://github.com/regl-project/regl/)'s API; but can be\nuse any "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " renderer, given hooks matching these implementations."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "[Fix "
							},
							{
								"kind": "code",
								"text": "`@callback`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@typedef`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/TypeStrong/typedoc/issues/1896):\n  nested "
							},
							{
								"kind": "code",
								"text": "`@param`"
							},
							{
								"kind": "text",
								"text": "; omits "
							},
							{
								"kind": "code",
								"text": "`@return`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@see`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@this`"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 248,
					"name": "getFramebuffer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " to create or update a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": "; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "framebuffer",
								"target": 264,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							},
							{
								"kind": "text",
								"text": "\n\n**This**\n\nUpdates any "
							},
							{
								"kind": "code",
								"text": "`this`"
							},
							{
								"kind": "text",
								"text": " value's "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " in-place (or similar handling);\notherwise if "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "ish, returns a new "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": ".\n\n**Returns**\n\nA "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " created or updated by any given "
							},
							{
								"kind": "code",
								"text": "`options`"
							},
							{
								"kind": "text",
								"text": ", or an\n"
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 17,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L17"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 249,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 17,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L17"
								}
							],
							"signatures": [
								{
									"id": 250,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 251,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to create or update a "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " depth attachment, or a flag for whether it\n    should be created.\n  - "
													},
													{
														"kind": "code",
														"text": "`stencil`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " stencil attachment, or a flag for whether it\n    should be created.\n  - "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": ": The width of the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ": The height of the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`color`"
													},
													{
														"kind": "text",
														"text": ": The "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " attachments to use."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 252,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 253,
															"name": "depth",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 36,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L36"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 254,
															"name": "stencil",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 37,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L37"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 255,
															"name": "width",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 38,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L38"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 256,
															"name": "height",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 39,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 257,
															"name": "color",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 40,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L40"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": 283,
																	"name": "texture",
																	"package": "@epok.tech/gl-gpgpu"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																253,
																254,
																255,
																256,
																257
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 35,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L35"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 264,
										"name": "framebuffer",
										"package": "@epok.tech/gl-gpgpu"
									}
								}
							]
						}
					}
				},
				{
					"id": 258,
					"name": "useFramebuffer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Bind a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " while calling a given "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": "; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "framebuffer",
								"target": 264,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "step.toStep",
								"target": 196
							},
							{
								"kind": "text",
								"text": "\n\n**This**\n\nUses any "
							},
							{
								"kind": "code",
								"text": "`this`"
							},
							{
								"kind": "text",
								"text": " value's "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " (or similar handling)."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 54,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L54"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 259,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 54,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L54"
								}
							],
							"signatures": [
								{
									"id": 260,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 261,
											"name": "hook",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "code",
														"text": "`function`"
													},
													{
														"kind": "text",
														"text": " to call while the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " is bound."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 262,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "api.js",
															"line": 66,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L66"
														}
													],
													"signatures": [
														{
															"id": 263,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 264,
					"name": "framebuffer",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": ", or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getFramebuffer",
								"target": 248,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							}
						]
					},
					"children": [
						{
							"id": 265,
							"name": "call",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update this "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " in-place."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 78,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L78"
								}
							],
							"type": {
								"type": "reference",
								"target": 248,
								"name": "getFramebuffer",
								"package": "@epok.tech/gl-gpgpu"
							}
						},
						{
							"id": 266,
							"name": "use",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind this "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " for the given "
									},
									{
										"kind": "code",
										"text": "`function`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 79,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L79"
								}
							],
							"type": {
								"type": "reference",
								"target": 258,
								"name": "useFramebuffer",
								"package": "@epok.tech/gl-gpgpu"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								265,
								266
							]
						}
					],
					"sources": [
						{
							"fileName": "api.js",
							"line": 70,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L70"
						}
					]
				},
				{
					"id": 267,
					"name": "getTexture",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " hook to create or update a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "api",
								"target": 341,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "texture",
								"target": 283,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\n\nA "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": ", or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 83,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L83"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 268,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 83,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L83"
								}
							],
							"signatures": [
								{
									"id": 269,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 270,
											"name": "type",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " data type value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 271,
											"name": "min",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " minification filter value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 272,
											"name": "mag",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " magnification filter value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 273,
											"name": "wrap",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " wrap mode value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 274,
											"name": "width",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The width of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 275,
											"name": "height",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The height of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 276,
											"name": "channels",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of channels of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 283,
										"name": "texture",
										"package": "@epok.tech/gl-gpgpu"
									}
								}
							]
						}
					}
				},
				{
					"id": 277,
					"name": "subimage",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Copy from a given source "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " to part of "
							},
							{
								"kind": "code",
								"text": "`this`"
							},
							{
								"kind": "text",
								"text": " output "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "; via\na "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "api",
								"target": 341,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "texture",
								"target": 283,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getTexture",
								"target": 267,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "step.toStep",
								"target": 196
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\n\nThe output "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`this`"
							},
							{
								"kind": "text",
								"text": "; the source "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " copied to part of it.\n\n**This**\n\nUses any "
							},
							{
								"kind": "code",
								"text": "`this`"
							},
							{
								"kind": "text",
								"text": " value's "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " as the output to copy into."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 108,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L108"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 278,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 108,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L108"
								}
							],
							"signatures": [
								{
									"id": 279,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 280,
											"name": "source",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " to copy to part of the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"target": 283,
												"name": "texture",
												"package": "@epok.tech/gl-gpgpu"
											}
										},
										{
											"id": 281,
											"name": "x",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Offset along the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "'s x-axis."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 282,
											"name": "y",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Offset along the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "'s y-axis."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 283,
										"name": "texture",
										"package": "@epok.tech/gl-gpgpu"
									}
								}
							]
						}
					}
				},
				{
					"id": 283,
					"name": "texture",
					"variant": "declaration",
					"kind": 256,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": ", or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getTexture",
								"target": 267,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							}
						]
					},
					"children": [
						{
							"id": 284,
							"name": "call",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update this "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " in-place."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 143,
									"character": 22,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L143"
								}
							],
							"type": {
								"type": "reference",
								"target": 267,
								"name": "getTexture",
								"package": "@epok.tech/gl-gpgpu"
							}
						},
						{
							"id": 285,
							"name": "subimage",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copy from a source "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " into part of "
									},
									{
										"kind": "code",
										"text": "`this`"
									},
									{
										"kind": "text",
										"text": "\n  destination "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 144,
									"character": 20,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L144"
								}
							],
							"type": {
								"type": "reference",
								"target": 277,
								"name": "subimage",
								"package": "@epok.tech/gl-gpgpu"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								284,
								285
							]
						}
					],
					"sources": [
						{
							"fileName": "api.js",
							"line": 135,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L135"
						}
					]
				},
				{
					"id": 286,
					"name": "getBuffer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " to set up a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " buffer; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "buffer",
								"target": 293,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "attributes.getAttributes"
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 149,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L149"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 287,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 149,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L149"
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 289,
											"name": "data",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Data to create a new\n  "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": "; or an existing "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": " to use as-is."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 290,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 157,
																	"character": 20,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L157"
																}
															],
															"indexSignatures": [
																{
																	"id": 291,
																	"name": "__index",
																	"variant": "signature",
																	"kind": 8192,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 157,
																			"character": 21,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L157"
																		}
																	],
																	"parameters": [
																		{
																			"id": 292,
																			"name": "k",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "string"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 293,
														"name": "buffer",
														"package": "@epok.tech/gl-gpgpu"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": 293,
										"name": "buffer",
										"package": "@epok.tech/gl-gpgpu"
									}
								}
							]
						}
					}
				},
				{
					"id": 293,
					"name": "buffer",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`buffer`"
							},
							{
								"kind": "text",
								"text": " for vertex "
							},
							{
								"kind": "code",
								"text": "`attribute`"
							},
							{
								"kind": "text",
								"text": "s, or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose;\nvia a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 164,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L164"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "object"
					}
				},
				{
					"id": 294,
					"name": "clear",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " to clear "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " output view or "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": "; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "framebuffer",
								"target": 264,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "step.toStep",
								"target": 196
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 170,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L170"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 295,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 170,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L170"
								}
							],
							"signatures": [
								{
									"id": 296,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 297,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to clear "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`color`"
													},
													{
														"kind": "text",
														"text": ": The values to clear any color buffers with.\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": The value to clear any depth buffer with.\n  - "
													},
													{
														"kind": "code",
														"text": "`stencil`"
													},
													{
														"kind": "text",
														"text": ": The value to clear any stencil buffer with.\n  - "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " to clear; if not given, clears any\n    "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " already bound, or the view if none are bound."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 298,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 299,
															"name": "color",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 179,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L179"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 300,
															"name": "depth",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 180,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L180"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 301,
															"name": "stencil",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 181,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L181"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 302,
															"name": "framebuffer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 182,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L182"
																}
															],
															"type": {
																"type": "reference",
																"target": 264,
																"name": "framebuffer",
																"package": "@epok.tech/gl-gpgpu"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																299,
																300,
																301,
																302
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 178,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L178"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 303,
					"name": "command",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " to create a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " render pass execution "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": ", to be called\nlater, given options, for a render pass; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`api`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "buffer",
								"target": 293,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "attributes"
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "framebuffer",
								"target": 264,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "step.toStep",
								"target": 196
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "uniforms.toUniforms",
								"target": 351
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "uniforms.getUniform",
								"target": 402
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\n\nA "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " to execute a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " render pass, given options."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 192,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L192"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 304,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 192,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L192"
								}
							],
							"signatures": [
								{
									"id": 305,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 310,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to create a "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " render pass "
													},
													{
														"kind": "code",
														"text": "`function`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`vert`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`GLSL`"
													},
													{
														"kind": "text",
														"text": " vertex shader "
													},
													{
														"kind": "code",
														"text": "`string`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`frag`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`GLSL`"
													},
													{
														"kind": "text",
														"text": " fragment shader "
													},
													{
														"kind": "code",
														"text": "`string`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`count`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`number`"
													},
													{
														"kind": "text",
														"text": " of elements to render.\n  - "
													},
													{
														"kind": "code",
														"text": "`attributes`"
													},
													{
														"kind": "text",
														"text": ": Map of any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`attribute`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": "s.\n    See "
													},
													{
														"kind": "code",
														"text": "`attributes`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`toStep`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`uniforms`"
													},
													{
														"kind": "text",
														"text": ": Map of any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`uniform`"
													},
													{
														"kind": "text",
														"text": " hooks.\n    See "
													},
													{
														"kind": "code",
														"text": "`uniforms`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`toUniforms`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`getUniform`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " depth settings (e.g: "
													},
													{
														"kind": "code",
														"text": "`options.depth.enable`"
													},
													{
														"kind": "text",
														"text": ").\n  - "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " to render into.\n    See "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 311,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 312,
															"name": "vert",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 210,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L210"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 313,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 210,
																			"character": 13,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L210"
																		}
																	],
																	"signatures": [
																		{
																			"id": 314,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 315,
																					"name": "context",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 316,
																					"name": "state",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 317,
															"name": "frag",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 211,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L211"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 318,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 211,
																			"character": 13,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L211"
																		}
																	],
																	"signatures": [
																		{
																			"id": 319,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 320,
																					"name": "context",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 321,
																					"name": "state",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 322,
															"name": "count",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 212,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L212"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 323,
															"name": "attributes",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 213,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L213"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 324,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 213,
																			"character": 19,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L213"
																		}
																	],
																	"indexSignatures": [
																		{
																			"id": 325,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "api.js",
																					"line": 213,
																					"character": 20,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L213"
																				}
																			],
																			"parameters": [
																				{
																					"id": 326,
																					"name": "k",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 293,
																				"name": "buffer",
																				"package": "@epok.tech/gl-gpgpu"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 327,
															"name": "uniforms",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 214,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L214"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 328,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 214,
																			"character": 17,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L214"
																		}
																	],
																	"indexSignatures": [
																		{
																			"id": 329,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "api.js",
																					"line": 214,
																					"character": 18,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L214"
																				}
																			],
																			"parameters": [
																				{
																					"id": 330,
																					"name": "k",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "",
																					"qualifiedName": "getUniform"
																				},
																				"name": "getUniform"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 331,
															"name": "depth",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 215,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L215"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 332,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 215,
																			"character": 14,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L215"
																		}
																	],
																	"indexSignatures": [
																		{
																			"id": 333,
																			"name": "__index",
																			"variant": "signature",
																			"kind": 8192,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "api.js",
																					"line": 215,
																					"character": 15,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L215"
																				}
																			],
																			"parameters": [
																				{
																					"id": 334,
																					"name": "k",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "string"
																					}
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "boolean"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 335,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "api.js",
																									"line": 215,
																									"character": 34,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L215"
																								}
																							]
																						}
																					}
																				]
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 336,
															"name": "framebuffer",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 216,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L216"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 337,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 216,
																			"character": 20,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L216"
																		}
																	],
																	"signatures": [
																		{
																			"id": 338,
																			"name": "__type",
																			"variant": "signature",
																			"kind": 4096,
																			"flags": {},
																			"parameters": [
																				{
																					"id": 339,
																					"name": "context",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 340,
																					"name": "state",
																					"variant": "param",
																					"kind": 32768,
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": 264,
																				"name": "framebuffer",
																				"package": "@epok.tech/gl-gpgpu"
																			}
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																312,
																317,
																322,
																323,
																327,
																331,
																336
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 209,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L209"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 306,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "api.js",
													"line": 229,
													"character": 13,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L229"
												}
											],
											"signatures": [
												{
													"id": 307,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"parameters": [
														{
															"id": 308,
															"name": "context",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 309,
															"name": "state",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 341,
					"name": "api",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An API "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " given to "
							},
							{
								"kind": "code",
								"text": "`gpgpu`"
							},
							{
								"kind": "text",
								"text": ", to interact with "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " resources.\n\nBased on ["
							},
							{
								"kind": "code",
								"text": "`regl`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/regl-project/regl/)'s API; but can be\nuse any "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " renderer, given hooks matching these implementations."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 240,
							"character": 8,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L240"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 342,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 343,
									"name": "framebuffer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 234,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L234"
										}
									],
									"type": {
										"type": "reference",
										"target": 248,
										"name": "getFramebuffer",
										"package": "@epok.tech/gl-gpgpu"
									}
								},
								{
									"id": 344,
									"name": "texture",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 235,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L235"
										}
									],
									"type": {
										"type": "reference",
										"target": 267,
										"name": "getTexture",
										"package": "@epok.tech/gl-gpgpu"
									}
								},
								{
									"id": 345,
									"name": "buffer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 236,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L236"
										}
									],
									"type": {
										"type": "reference",
										"target": 286,
										"name": "getBuffer",
										"package": "@epok.tech/gl-gpgpu"
									}
								},
								{
									"id": 346,
									"name": "clear",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 237,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L237"
										}
									],
									"type": {
										"type": "reference",
										"target": 294,
										"name": "clear",
										"package": "@epok.tech/gl-gpgpu"
									}
								},
								{
									"id": 347,
									"name": "command",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 238,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L238"
										}
									],
									"type": {
										"type": "reference",
										"target": 303,
										"name": "command",
										"package": "@epok.tech/gl-gpgpu"
									}
								},
								{
									"id": 348,
									"name": "call",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 239,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L239"
										}
									],
									"type": {
										"type": "reference",
										"target": 303,
										"name": "command",
										"package": "@epok.tech/gl-gpgpu"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										343,
										344,
										345,
										346,
										347,
										348
									]
								}
							],
							"sources": [
								{
									"fileName": "api.js",
									"line": 233,
									"character": 13,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L233"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"children": [
						264,
						283
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						248,
						258,
						267,
						277,
						286,
						293,
						294,
						303,
						341
					]
				}
			],
			"sources": [
				{
					"fileName": "api.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/api.js#L1"
				}
			]
		},
		{
			"id": 147,
			"name": "const",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default properties for "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " capabilities and resources."
					}
				]
			},
			"children": [
				{
					"id": 148,
					"name": "vertDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default vertex shader "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " code."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 12,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "vertGLSL"
				},
				{
					"id": 149,
					"name": "positionsDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default vertex positions "
							},
							{
								"kind": "code",
								"text": "`attribute`"
							},
							{
								"kind": "text",
								"text": "; 3 points of a large flat triangle."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "step.toStep",
										"target": 196
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 19,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "positions"
				},
				{
					"id": 150,
					"name": "countDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default vertex "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": "; 3 points of a large flat triangle."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "step.toStep",
										"target": 196
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 26,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "count"
				},
				{
					"id": 151,
					"name": "extensions",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions; none."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 31,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L31"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 152,
					"name": "extensionsFloat",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions to render to "
							},
							{
								"kind": "code",
								"text": "`float`"
							},
							{
								"kind": "text",
								"text": " buffers."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 34,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L34"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 153,
					"name": "extensionsHalfFloat",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions to render to "
							},
							{
								"kind": "code",
								"text": "`half float`"
							},
							{
								"kind": "text",
								"text": " buffers."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 38,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L38"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 154,
					"name": "optionalExtensions",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default optional "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions; update more data in one render pass."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 42,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L42"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 155,
					"name": "preDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prefix namespace to avoid naming clashes; recommended."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "index.vert.glsl"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 49,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L49"
						}
					],
					"type": {
						"type": "literal",
						"value": "gpgpu_"
					},
					"defaultValue": "'gpgpu_'"
				},
				{
					"id": 156,
					"name": "channelsMinDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default minimum allowable channels for "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments.\nThis avoids "
							},
							{
								"kind": "code",
								"text": "`RGB32F`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments, which errors on Firefox."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "[Firefox "
									},
									{
										"kind": "code",
										"text": "`RGB32F`"
									},
									{
										"kind": "text",
										"text": " bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1448632)"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 58,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L58"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					},
					"defaultValue": "4"
				},
				{
					"id": 157,
					"name": "channelsMaxDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default maximum allowable channels for "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments.\nThis avoids "
							},
							{
								"kind": "code",
								"text": "`RGB32F`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments, which errors on Firefox."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "[Firefox "
									},
									{
										"kind": "code",
										"text": "`RGB32F`"
									},
									{
										"kind": "text",
										"text": " bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1448632)"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 67,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L67"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					},
					"defaultValue": "4"
				},
				{
					"id": 158,
					"name": "buffersMaxDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default maximum "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s that may be bound as buffer outputs per-pass."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 75,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L75"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					},
					"defaultValue": "1"
				},
				{
					"id": 159,
					"name": "boundDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default how many steps are bound as outputs, unavailable as input; for\nplatforms forbidding read/write of same buffer."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 81,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L81"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					},
					"defaultValue": "1"
				},
				{
					"id": 160,
					"name": "scaleDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default length of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to this power."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 87,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L87"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					},
					"defaultValue": "9"
				},
				{
					"id": 161,
					"name": "widthDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default width of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to the default scale."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 96,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L96"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 162,
					"name": "heightDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default height of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to the default scale."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 105,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 163,
					"name": "stepsDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default number steps of state to track."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 108,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L108"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					},
					"defaultValue": "2"
				},
				{
					"id": 164,
					"name": "valuesDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default values to track; gives 1 set of "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 110,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L110"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 165,
					"name": "typeDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " data type."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 119,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L119"
						}
					],
					"type": {
						"type": "literal",
						"value": "float"
					},
					"defaultValue": "'float'"
				},
				{
					"id": 166,
					"name": "minDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " minification filter."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 126,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L126"
						}
					],
					"type": {
						"type": "literal",
						"value": "nearest"
					},
					"defaultValue": "'nearest'"
				},
				{
					"id": 167,
					"name": "magDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " magnification filter."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 133,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L133"
						}
					],
					"type": {
						"type": "literal",
						"value": "nearest"
					},
					"defaultValue": "'nearest'"
				},
				{
					"id": 168,
					"name": "wrapDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " wrap mode, avoid "
							},
							{
								"kind": "code",
								"text": "`WebGL1`"
							},
							{
								"kind": "text",
								"text": " needing power-of-2 "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 140,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L140"
						}
					],
					"type": {
						"type": "literal",
						"value": "clamp"
					},
					"defaultValue": "'clamp'"
				},
				{
					"id": 169,
					"name": "depthDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " depth attachment."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 147,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L147"
						}
					],
					"type": {
						"type": "literal",
						"value": false
					},
					"defaultValue": "false"
				},
				{
					"id": 170,
					"name": "stencilDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " stencil attachment."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 154,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L154"
						}
					],
					"type": {
						"type": "literal",
						"value": false
					},
					"defaultValue": "false"
				},
				{
					"id": 171,
					"name": "glslRx",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`RegExp`"
							},
							{
								"kind": "text",
								"text": " to find the "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " version "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": " in a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " parameter\n"
							},
							{
								"kind": "code",
								"text": "`SHADING_LANGUAGE_VERSION`"
							},
							{
								"kind": "text",
								"text": " formatted "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 160,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L160"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../../.yarn/berry/cache/typescript-patch-fe43cd9db9-10c0.zip/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "RegExp"
						},
						"name": "RegExp",
						"package": "typescript"
					},
					"defaultValue": "..."
				},
				{
					"id": 172,
					"name": "stepMaxDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set a maximum to guard against number overflow."
							}
						],
						"blockTags": [
							{
								"tag": "@todo",
								"content": [
									{
										"kind": "text",
										"text": "Should be "
									},
									{
										"kind": "code",
										"text": "`(2**15)-1`"
									},
									{
										"kind": "text",
										"text": " for "
									},
									{
										"kind": "code",
										"text": "`mediump`"
									},
									{
										"kind": "text",
										"text": ", but seems to fail above "
									},
									{
										"kind": "code",
										"text": "`2**13`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": "[SO](https://stackoverflow.com/a/67791670/716898)"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 168,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L168"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 173,
					"name": "clearPassDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default clear settings to clear each pass's "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "step.toStep",
										"target": 196
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.clear",
										"target": 294
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.framebuffer",
										"target": 264
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 181,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L181"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 174,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 175,
									"name": "color",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "const.js",
											"line": 177,
											"character": 11,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L177"
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									}
								},
								{
									"id": 176,
									"name": "depth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "const.js",
											"line": 177,
											"character": 27,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L177"
										}
									],
									"type": {
										"type": "literal",
										"value": 1
									}
								},
								{
									"id": 177,
									"name": "stencil",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "const.js",
											"line": 177,
											"character": 35,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L177"
										}
									],
									"type": {
										"type": "literal",
										"value": 0
									}
								},
								{
									"id": 178,
									"name": "framebuffer",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "const.js",
											"line": 177,
											"character": 45,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L177"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										175,
										176,
										177,
										178
									]
								}
							],
							"sources": [
								{
									"fileName": "const.js",
									"line": 177,
									"character": 10,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L177"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 179,
					"name": "copyFrameDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`getFramebuffer`"
							},
							{
								"kind": "text",
								"text": " options, to bind a given "
							},
							{
								"kind": "code",
								"text": "`color`"
							},
							{
								"kind": "text",
								"text": " to it."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "step.updateMerge",
										"target": 186
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.framebuffer",
										"target": 264
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.getFramebuffer",
										"target": 248
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 192,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L192"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 180,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 181,
									"name": "color",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "const.js",
											"line": 192,
											"character": 30,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L192"
										}
									],
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										181
									]
								}
							],
							"sources": [
								{
									"fileName": "const.js",
									"line": 192,
									"character": 28,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L192"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 182,
					"name": "copyImageDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture.subimage`"
							},
							{
								"kind": "text",
								"text": " options, to bind a given "
							},
							{
								"kind": "code",
								"text": "`color`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "step.updateMerge",
										"target": 186
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.texture",
										"target": 283
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "api.subimage",
										"target": 277
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 204,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L204"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 183,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 184,
									"name": "copy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "const.js",
											"line": 204,
											"character": 30,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L204"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										184
									]
								}
							],
							"sources": [
								{
									"fileName": "const.js",
									"line": 204,
									"character": 28,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L204"
								}
							]
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						148,
						149,
						150,
						151,
						152,
						153,
						154,
						155,
						156,
						157,
						158,
						159,
						160,
						161,
						162,
						163,
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171,
						172,
						173,
						179,
						182
					]
				}
			],
			"sources": [
				{
					"fileName": "const.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/const.js#L1"
				}
			]
		},
		{
			"id": 119,
			"name": "data",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " state and "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " data resources.\n\nHandles "
					},
					{
						"kind": "code",
						"text": "`framebuffer`"
					},
					{
						"kind": "text",
						"text": "s, "
					},
					{
						"kind": "code",
						"text": "`texture`"
					},
					{
						"kind": "text",
						"text": "s; and the main meta info."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Allow passes into or across "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s; separate shapes of data and\n  "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s."
							}
						]
					},
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "In-place updates of complex resources and meta info."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 120,
					"name": "toData",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "data.js",
							"line": 362,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L362"
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "toData",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set up the "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " resources and meta info for a state of a number data."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "```\n  const api = {\n    framebuffer: ({ depth, stencil, width, height, color }) => null,\n    texture: ({ type, min, mag, wrap, width, height, channels }) => null\n  };\n\n  // Example with `webgl_draw_buffers` extension support, for 4 buffers.\n  let maps = mapGroups({ values: [1, 2, 3], buffersMax: 4, packed: 0 });\n  let state = { steps: 2, side: 10, maps };\n\n  const s0 = toData(api, state, {}); // =>\n  {\n    ...state,\n    size: {\n      steps: 2, passes: 2, textures: 4,\n      width: 10, height: 10, shape: [10, 10], entries: 100\n    },\n    steps: [[s0.passes[0][0].framebuffer], [s0.passes[1][0].framebuffer]],\n    // This setup results in fewer passes, as more buffers can be bound.\n    passes: [\n      [\n        {\n          framebuffer: api.framebuffer(s0.passes[0][0]),\n          color: [s0.textures[0][0].texture, s0.textures[0][1].texture],\n          map: [0, 1], // maps.passes[0]\n          entry: 0, index: 0, step: 0,\n          depth: false, stencil: false, width: 10, height: 10\n        }\n      ],\n      [\n        {\n          framebuffer: api.framebuffer(s0.passes[1][0]),\n          color: [s0.textures[1][0].texture, s0.textures[1][1].texture],\n          map: [0, 1], // maps.passes[0]\n          entry: 1, index: 0, step: 1,\n          depth: false, stencil: false, width: 10, height: 10\n        }\n      ]\n    ],\n    textures: [\n      [\n        {\n          texture: api.texture(s0.textures[0][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 0, index: 0, step: 0, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s0.textures[0][1]),\n          map: [2], // maps.textures[1]\n          entry: 1, index: 1, step: 0, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ],\n      [\n        {\n          texture: api.texture(s0.textures[1][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 2, index: 0, step: 1, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s0.textures[1][1]),\n          map: [2], // maps.textures[1]\n          entry: 3, index: 1, step: 1, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ]\n    ]\n  };\n\n  // Example with no `webgl_draw_buffers` extension support, only 1 buffer.\n  maps = mapGroups({ values: [1, 2, 3], buffersMax: 1, packed: 0 });\n  state = { type: 'uint8', steps: 2, scale: 5, maps };\n\n  const s1 = toData(api, state, {}); // =>\n  {\n    ...state,\n    size: {\n      steps: 2, passes: 4, textures: 4,\n      width: 32, height: 32, shape: [32, 32], entries: 1024\n    },\n    steps: [\n      [s1.passes[0][0].framebuffer, s1.passes[0][1].framebuffer],\n      [s1.passes[1][0].framebuffer, s1.passes[1][1].framebuffer]\n    ],\n    // This setup results in more passes, as fewer buffers can be bound.\n    passes: [\n      [\n        {\n          framebuffer: api.framebuffer(s1.passes[0][0]),\n          color: [s1.textures[0][0].texture],\n          map: [0], // maps.passes[0]\n          entry: 0, index: 0, step: 0,\n          depth: false, stencil: false, width: 32, height: 32\n        },\n        {\n          framebuffer: api.framebuffer(s1.passes[0][1]),\n          color: [s1.textures[0][1].texture],\n          map: [1], // maps.passes[1]\n          entry: 1, index: 1, step: 0,\n          depth: false, stencil: false, width: 32, height: 32\n        }\n      ],\n      [\n        {\n          framebuffer: api.framebuffer(s1.passes[1][0]),\n          color: [s1.textures[1][0].texture],\n          map: [0], // maps.passes[0]\n          entry: 2, index: 0, step: 1,\n          depth: false, stencil: false, width: 32, height: 32\n        },\n        {\n          framebuffer: api.framebuffer(s1.passes[1][1]),\n          color: [s1.textures[1][1].texture],\n          map: [1], // maps.passes[1]\n          entry: 3, index: 1, step: 1,\n          depth: false, stencil: false, width: 32, height: 32\n        }\n      ]\n    ],\n    textures: [\n      [\n        {\n          texture: api.texture(s1.textures[0][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 0, index: 0, step: 0, pass: 0,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s1.textures[0][1]),\n          map: [2], // maps.textures[1]\n          entry: 1, index: 1, step: 0, pass: 1,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ],\n      [\n        {\n          texture: api.texture(s1.textures[1][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 2, index: 0, step: 1, pass: 0,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s1.textures[1][1]),\n          map: [2], // maps.textures[1]\n          entry: 3, index: 1, step: 1, pass: 1,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ]\n    ]\n  };\n```",
										"content": []
									},
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Example using "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "api.texture",
												"target": 283
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "api.framebuffer",
												"target": 264
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapSamples",
												"target": 67
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.useBuffers",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "step.toStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroSamples",
												"target": 438
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroTaps",
												"target": 442
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroPass",
												"target": 493
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "size.getWidth",
												"target": 2
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "size.getHeight",
												"target": 13
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "size.getScaled",
												"target": 33
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler array index must be a literal expression`"
											},
											{
												"kind": "text",
												"text": "](https://stackoverflow.com/a/60110986/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler2DArray`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_2d_array.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler3D`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_3d.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The state object, set up with the data resources and\n  meta information, for use with "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": " and drawing:"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.maps`"
											},
											{
												"kind": "text",
												"text": " Any given\n  "
											},
											{
												"kind": "code",
												"text": "`state.maps`"
											},
											{
												"kind": "text",
												"text": ". See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " The "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s per-step, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of objects of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s\n  and meta info. See "
											},
											{
												"kind": "code",
												"text": "`to.maps.textures`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " Passes per step, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of objects of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s,\n  referencing "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": ", and meta info. See "
											},
											{
												"kind": "code",
												"text": "`to.maps.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": "\n  Hierarchy of steps of state, as an "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": " of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s from\n  "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": ", with "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s from "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": ", and meta\n  information; set up here, or the given "
											},
											{
												"kind": "code",
												"text": "`state.steps`"
											},
											{
												"kind": "text",
												"text": " if it's an "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": ".\n  State data may be drawn into the "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s accordingly.\n  See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge]`"
											},
											{
												"kind": "text",
												"text": " If merging, a given or new merged\n  "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " and copier "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": ", with meta info. See "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": " and\n  "
											},
											{
												"kind": "code",
												"text": "`macroTaps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge.all]`"
											},
											{
												"kind": "text",
												"text": " Any\n  given "
											},
											{
												"kind": "code",
												"text": "`state.merge.all`"
											},
											{
												"kind": "text",
												"text": ", or newly-created merged "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " and meta info."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge.next]`"
											},
											{
												"kind": "text",
												"text": " Any\n  given "
											},
											{
												"kind": "code",
												"text": "`state.merge.next`"
											},
											{
												"kind": "text",
												"text": ", or newly-created "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " and meta info; for\n  copying each pass's data into the "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "d "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size`"
											},
											{
												"kind": "text",
												"text": " Size/type information of the created resources."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.type`"
											},
											{
												"kind": "text",
												"text": " Data type of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.depth`"
											},
											{
												"kind": "text",
												"text": " Whether "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s attach depth."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.stencil`"
											},
											{
												"kind": "text",
												"text": " Whether "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s attach stencil."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.channelsMin`"
											},
											{
												"kind": "text",
												"text": " Minimum channels in any "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.steps`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": " in the main flow."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.passes`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " in "
											},
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.framebuffers`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s created."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.textures`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " in "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.colors`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s created."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.width`"
											},
											{
												"kind": "text",
												"text": " Width of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.height`"
											},
											{
												"kind": "text",
												"text": " Height of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.shape`"
											},
											{
												"kind": "text",
												"text": " Shape of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and\n  "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s, as "
											},
											{
												"kind": "code",
												"text": "`[to.size.width, to.size.height]`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.entries`"
											},
											{
												"kind": "text",
												"text": " Number of entries in each "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.size.merge]`"
											},
											{
												"kind": "text",
												"text": "\n  Any size/type information about any created or given "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "d "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "data.js",
									"line": 362,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L362"
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "api",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 123,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 124,
													"name": "texture",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function creating "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 226,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L226"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 125,
													"name": "framebuffer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function creating "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": "s."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 227,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L227"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														124,
														125
													]
												}
											],
											"sources": [
												{
													"fileName": "data.js",
													"line": 226,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L226"
												}
											]
										}
									}
								},
								{
									"id": 126,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The state parameters."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 127,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 128,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data width, aliases follow in order\n  of precedence. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 230,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L230"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 129,
													"name": "w",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 232,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L232"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 130,
													"name": "x",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 233,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L233"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 131,
													"name": "ʼ0ʼ",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 234,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L234"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 132,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data height, aliases follow in order\n  of precedence. See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 236,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L236"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 133,
													"name": "h",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 238,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L238"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 134,
													"name": "y",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 239,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L239"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 135,
													"name": "ʼ1ʼ",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 240,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L240"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 136,
													"name": "shape",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 241,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L241"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 137,
													"name": "size",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 242,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L242"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 138,
													"name": "side",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size of width/height.\n  See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 243,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L243"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 139,
													"name": "scale",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size of width/height as a square\n  power-of-two size, 2 raised to this power. See "
															},
															{
																"kind": "code",
																"text": "`getScaled`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 245,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L245"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 140,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How many steps of state to\n  track, or the list of states if already set up."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 248,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L248"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												},
												{
													"id": 141,
													"name": "maps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How "
															},
															{
																"kind": "code",
																"text": "`state.maps.values`"
															},
															{
																"kind": "text",
																"text": " are grouped\n  per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass per-step. See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "data.js",
															"line": 250,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L250"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 142,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 143,
																			"name": "values",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "data.js",
																					"line": 252,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L252"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 144,
																			"name": "channelsMin",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "data.js",
																					"line": 255,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L255"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				143,
																				144
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "data.js",
																			"line": 252,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L252"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														128,
														129,
														130,
														131,
														132,
														133,
														134,
														135,
														136,
														137,
														138,
														139,
														140,
														141
													]
												}
											],
											"sources": [
												{
													"fileName": "data.js",
													"line": 230,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L230"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 145,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The state object to set up. Modifies the given\n  "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": " object by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "state"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 146,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "data.js",
							"line": 569,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L569"
						}
					],
					"target": 120
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						146
					]
				},
				{
					"title": "Functions",
					"children": [
						120
					]
				}
			],
			"sources": [
				{
					"fileName": "data.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/data.js#L1"
				}
			]
		},
		{
			"id": 49,
			"name": "index-forms/index-entries.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-entries.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 50,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-entries.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index-forms/index-entries.glsl.js",
							"line": 15,
							"character": 14,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-entries.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 51,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index-entries.glsl.js",
							"line": 17,
							"character": 1,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-entries.glsl.js#L17"
						}
					],
					"target": 50
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						51
					]
				},
				{
					"title": "Variables",
					"children": [
						50
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						50
					]
				},
				{
					"title": "Other",
					"children": [
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index-entries.glsl.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-entries.glsl.js#L1"
				}
			]
		},
		{
			"id": 39,
			"name": "index-forms/index-states.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-states.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 40,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-states.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index-forms/index-states.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-states.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 41,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index-states.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-states.glsl.js#L17"
						}
					],
					"target": 40
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						41
					]
				},
				{
					"title": "Variables",
					"children": [
						40
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						40
					]
				},
				{
					"title": "Other",
					"children": [
						41
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index-states.glsl.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index-states.glsl.js#L1"
				}
			]
		},
		{
			"id": 42,
			"name": "index-forms",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "How many vertexes for a given form to cover each entry's steps of state:\n- If 2 states or form are given, gives a setup of pairs for a line segment\n  between each entry's steps of state using "
					},
					{
						"kind": "code",
						"text": "`gl.LINES`"
					},
					{
						"kind": "text",
						"text": ".\n- If fewer than 2 states or form are given, gives a setup for a point at each\n  entry's steps of state using "
					},
					{
						"kind": "code",
						"text": "`gl.POINTS`"
					},
					{
						"kind": "text",
						"text": ".\n\nPossibly useful for other forms too.\n\nCorresponds to the indexing logic in the "
					},
					{
						"kind": "code",
						"text": "`indexForms`"
					},
					{
						"kind": "text",
						"text": " "
					},
					{
						"kind": "code",
						"text": "`GLSL`"
					},
					{
						"kind": "text",
						"text": " function."
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "index-forms/index-states.glsl!",
								"target": 39
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "index-forms/index-entries.glsl!",
								"target": 49
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "text",
								"text": "["
							},
							{
								"kind": "code",
								"text": "`gl.LINES`"
							},
							{
								"kind": "text",
								"text": "](https://webglfundamentals.org/webgl/lessons/webgl-points-lines-triangles.html)"
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					},
					{
						"tag": "@param",
						"name": "states",
						"content": [
							{
								"kind": "text",
								"text": "How many steps of state each entry has."
							}
						]
					},
					{
						"tag": "@param",
						"name": "form",
						"content": [
							{
								"kind": "text",
								"text": "How many steps of state each form covers."
							}
						]
					},
					{
						"tag": "@param",
						"name": "count",
						"content": [
							{
								"kind": "text",
								"text": "How many entries, if any; result to be multiplied\n  externally if not given."
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "The number of vertexes needed for the given "
							},
							{
								"kind": "code",
								"text": "`form`"
							},
							{
								"kind": "text",
								"text": " to cover\n  all steps of "
							},
							{
								"kind": "code",
								"text": "`states`"
							},
							{
								"kind": "text",
								"text": "; over all "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " if given, to be multiplied\n  externally if not given."
							}
						]
					},
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "[[include:src/index-forms/readme.md]]"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 43,
					"name": "indexForms",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index.js",
							"line": 30,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index.js#L30"
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "indexForms",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "index-forms/index.js",
									"line": 30,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index.js#L30"
								}
							],
							"parameters": [
								{
									"id": 45,
									"name": "states",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 46,
									"name": "form",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 47,
									"name": "count",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 48,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index.js",
							"line": 33,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index.js#L33"
						}
					],
					"target": 43
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						48
					]
				},
				{
					"title": "Functions",
					"children": [
						43
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index-forms/index.js#L1"
				}
			]
		},
		{
			"id": 92,
			"name": "(root)",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "**Main "
					},
					{
						"kind": "code",
						"text": "`index.js`"
					},
					{
						"kind": "text",
						"text": " - see ["
					},
					{
						"kind": "code",
						"text": "`readme`"
					},
					{
						"kind": "text",
						"text": "]("
					},
					{
						"kind": "relative-link",
						"text": ".."
					},
					{
						"kind": "text",
						"text": ")**\n\n[!["
					},
					{
						"kind": "code",
						"text": "`gl-gpgpu`"
					},
					{
						"kind": "text",
						"text": " particles demo](media://demo-particles-regl-frames.png)](..)\n\n[GPGPU](https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units)\nstate-stepping - declaratively maps optimal draw passes, shaders, "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": "\nresources, inputs, outputs - lets you focus on your logic, BYO-renderer.\n\nDecouples logic from rendering approach/engine.\nEach module and hook may be used as given, or piecemeal, or overridden."
					}
				]
			},
			"children": [
				{
					"id": 106,
					"name": "getGLSL",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Parse a "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " version into a "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "const.glslRx",
										"target": 171
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "index.js",
							"line": 39,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L39"
						}
					],
					"signatures": [
						{
							"id": 107,
							"name": "getGLSL",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " version "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", parsed from the given "
											},
											{
												"kind": "code",
												"text": "`version`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.js",
									"line": 39,
									"character": 23,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L39"
								}
							],
							"parameters": [
								{
									"id": 108,
									"name": "version",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " version "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": ", expected in a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": "\n  parameter "
											},
											{
												"kind": "code",
												"text": "`SHADING_LANGUAGE_VERSION`"
											},
											{
												"kind": "text",
												"text": " format to parse into a "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", from\n  any first found version number or the full given "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": " otherwise; or a\n  "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", to use as-is."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "gpgpu",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "index.js",
							"line": 79,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L79"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "gpgpu",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets up all the maps, data, inputs, and commands for a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " process.\n\nHooks up each main part in order into the complete process. Each part may\nalso be used individually for more custom behaviour; see their documentation."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapStep",
												"target": 83
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapSamples",
												"target": 67
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.useBuffers",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "uniforms.toUniforms",
												"target": 351
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "step.toStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroPass",
												"target": 493
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " data "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "; set up with data resources\n  for a "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " process. See "
											},
											{
												"kind": "code",
												"text": "`mapStep`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`toUniforms`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "index.js",
									"line": 79,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L79"
								}
							],
							"parameters": [
								{
									"id": 95,
									"name": "api",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 96,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 97,
													"name": "limits",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A map of "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " resource limits."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.js",
															"line": 59,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L59"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 98,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 99,
																			"name": "maxDrawbuffers",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "index.js",
																					"line": 60,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L60"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				99
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "index.js",
																			"line": 60,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L60"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														97
													]
												}
											],
											"sources": [
												{
													"fileName": "index.js",
													"line": 59,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L59"
												}
											]
										}
									}
								},
								{
									"id": 100,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State properties to set up; a new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " by\n  default. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`toUniforms`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`toStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 101,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 102,
													"name": "maps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass\n  per-step. Sets up new maps if not given or missing its mapped properties.\n  See "
															},
															{
																"kind": "code",
																"text": "`mapStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.js",
															"line": 64,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L64"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 103,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 104,
																			"name": "buffersMax",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "index.js",
																					"line": 67,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L67"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					},
																					{
																						"type": "literal",
																						"value": false
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				104
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "index.js",
																			"line": 67,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L67"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														102
													]
												}
											],
											"sources": [
												{
													"fileName": "index.js",
													"line": 64,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L64"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 105,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to set up. Modifies the given "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": "\n  object by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "state"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 109,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.js",
							"line": 105,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L105"
						}
					],
					"target": 93
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						109
					]
				},
				{
					"title": "Functions",
					"children": [
						106,
						93
					]
				}
			],
			"sources": [
				{
					"fileName": "index.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.js#L1"
				}
			]
		},
		{
			"id": 116,
			"name": "index.vert.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index.vert.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 117,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index.vert.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index.vert.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.vert.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 118,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "index.vert.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.vert.js#L17"
						}
					],
					"target": 117
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						118
					]
				},
				{
					"title": "Variables",
					"children": [
						117
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						117
					]
				},
				{
					"title": "Other",
					"children": [
						118
					]
				}
			],
			"sources": [
				{
					"fileName": "index.vert.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/index.vert.js#L1"
				}
			]
		},
		{
			"id": 110,
			"name": "lookup/index-uv.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-uv.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 111,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-uv.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "lookup/index-uv.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/index-uv.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 112,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "lookup/index-uv.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/index-uv.glsl.js#L17"
						}
					],
					"target": 111
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						112
					]
				},
				{
					"title": "Variables",
					"children": [
						111
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						111
					]
				},
				{
					"title": "Other",
					"children": [
						112
					]
				}
			],
			"sources": [
				{
					"fileName": "lookup/index-uv.glsl.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/index-uv.glsl.js#L1"
				}
			]
		},
		{
			"id": 113,
			"name": "lookup/offset-uv.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./offset-uv.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 114,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./offset-uv.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "lookup/offset-uv.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/offset-uv.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 115,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "lookup/offset-uv.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/offset-uv.glsl.js#L17"
						}
					],
					"target": 114
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						115
					]
				},
				{
					"title": "Variables",
					"children": [
						114
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						114
					]
				},
				{
					"title": "Other",
					"children": [
						115
					]
				}
			],
			"sources": [
				{
					"fileName": "lookup/offset-uv.glsl.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/lookup/offset-uv.glsl.js#L1"
				}
			]
		},
		{
			"id": 419,
			"name": "macros",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`GLSL`"
					},
					{
						"kind": "text",
						"text": " preprocessor macros for working with the "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " state and maps.\n\nEach set of different macros will result in new shader compilations - for\noptimal performance, the fewest macros possible should be created, one per\neach given set of inputs, ideally; caches here can be used for efficiency."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Redo examples, especially "
							},
							{
								"kind": "code",
								"text": "`macroTaps`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`macroPass`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Ensure the "
							},
							{
								"kind": "code",
								"text": "`output_N`"
							},
							{
								"kind": "text",
								"text": " in "
							},
							{
								"kind": "code",
								"text": "`macroOutput`"
							},
							{
								"kind": "text",
								"text": " can work with "
							},
							{
								"kind": "code",
								"text": "`WebGL2`"
							},
							{
								"kind": "text",
								"text": "; look at\n  using "
							},
							{
								"kind": "code",
								"text": "`layout(location=attach_N) out data_N`"
							},
							{
								"kind": "text",
								"text": ", not "
							},
							{
								"kind": "code",
								"text": "`gl_FragData[attach_N]`"
							},
							{
								"kind": "text",
								"text": ".\n  - [SO: Multiple output textures from the same program](https://stackoverflow.com/questions/51793336/multiple-output-textures-from-the-same-program)\n  - [SO: GL FragData must be constant zero](https://stackoverflow.com/questions/46740817/gl-fragdata-must-be-constant-zero)\n  - [SO: How are layout qualifiers better than getAttribLocation in WebGL2](https://stackoverflow.com/questions/50258822/how-are-layout-qualifiers-better-than-getattriblocation-in-webgl2)"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 446,
					"name": "lineFeed",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Escaped line-feed for easier reading."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 26,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": " \\\n"
					},
					"defaultValue": "' \\\\\\n'"
				},
				{
					"id": 447,
					"name": "rgba",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The channels denoted for texture input/output."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 30,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": "rgba"
					},
					"defaultValue": "'rgba'"
				},
				{
					"id": 448,
					"name": "cacheDef",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Simple shared cache for temporary or reusable objects."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 32,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L32"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 449,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 32,
									"character": 13,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L32"
								}
							]
						}
					},
					"defaultValue": "{}"
				},
				{
					"id": 450,
					"name": "hooks",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names for each part of the macro handling process available to hooks."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 37,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L37"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 451,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 452,
									"name": "macroPass",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The full set of macros."
											}
										]
									},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 39,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 453,
									"name": "macroValues",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Each part of the set of macros."
											}
										]
									},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 41,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'values'"
								},
								{
									"id": 454,
									"name": "macroOutput",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 41,
											"character": 25,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'output'"
								},
								{
									"id": 455,
									"name": "macroSamples",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 42,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L42"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'samples'"
								},
								{
									"id": 456,
									"name": "macroTaps",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 42,
											"character": 27,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L42"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'taps'"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										452,
										453,
										454,
										455,
										456
									]
								}
							],
							"sources": [
								{
									"fileName": "macros.js",
									"line": 37,
									"character": 21,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L37"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 420,
					"name": "hasMacros",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 102,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L102"
						}
					],
					"signatures": [
						{
							"id": 421,
							"name": "hasMacros",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether handling macros here; or the result of a given hook to handle it.\n\nAllows macros of the given key to be handled by external named hooks, to\nreplace any part of the functionality here in overall or granular ways.\n\nThe macro names checked in this module are found in "
									},
									{
										"kind": "code",
										"text": "`hooks`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "```javascript\n// Macros to be handled here, the default.\nhasMacros() == null;\nhasMacros({}) == null;\nhasMacros({ macros: true }) == null;\n\n// Macros to be handled here, with prefix `'pre_'` instead of `'preDef'`.\nhasMacros({ pre: 'pre_' }) == null;\n\n// Macros not created.\nhasMacros({ macros: false }) === '';\nhasMacros({ macros: 0 }) === '';\n\n// Macros for `'a'` handled by external `string` hook, not here.\nhasMacros({ macros: { a: '//A\\n', b: () => '//B\\n' } }, 'a') === '//A\\n';\n// Macros for `'b'` handled by external `function` hook, not here.\nhasMacros({ macros: { a: '//A\\n', b: () => '//B\\n' } }, 'b') === '//B\\n';\n// Macros specified `on` a `'frag'` not created.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, '', 'frag') === '';\n// Macros specified `on` a `'vert'` handled here.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, '', 'vert') == null;\n// Macros of `'values'`/`hooks.values` handled here.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, 'values', '') == null;\n// Macros of `'values'`/`hooks.values` specified `on` a `'vert'` not created.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, 'values', 'vert') === '';\n```",
										"content": []
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "hooks"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the result of the macros handled elsewhere,\n  or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if macros should be handled here."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 102,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L102"
								}
							],
							"parameters": [
								{
									"id": 422,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " whose properties may handle macros."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 423,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any name to check granularly within "
											},
											{
												"kind": "code",
												"text": "`macros`"
											},
											{
												"kind": "text",
												"text": ". See "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 424,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro name specifier; if given, "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": "\n  itself and with this specifier are checked (i.e: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " then "
											},
											{
												"kind": "code",
												"text": "`key+'_'+on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 425,
									"name": "macros",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How\n  macros should be handled, according to their type, in order of precedence:\n  - "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish: macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ": macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "y: no macros to be handled here, empty "
											},
											{
												"kind": "code",
												"text": "`''`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": " returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": ": no macros to be handled here, this hook value's used instead.\n  - "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": ": external "
											},
											{
												"kind": "code",
												"text": "`hasMacros`"
											},
											{
												"kind": "text",
												"text": "-like "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " hook, called with\n    "
											},
											{
												"kind": "code",
												"text": "`macros(state, key, on, macros)`"
											},
											{
												"kind": "text",
												"text": ", the returned value used as shown here.\n  - "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": ": recurses with any value at the given "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": ", with\n    "
											},
											{
												"kind": "code",
												"text": "`hasMacros(state, key, on, macros[key])`"
											},
											{
												"kind": "text",
												"text": ".\n  - Otherwise, macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 426,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 427,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "macros.js",
															"line": 87,
															"character": 25,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L87"
														}
													],
													"signatures": [
														{
															"id": 428,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "macros.js",
																	"line": 87,
																	"character": 25,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L87"
																}
															],
															"parameters": [
																{
																	"id": 429,
																	"name": "",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"defaultValue": "state.macros"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 457,
					"name": "getGLSLListBase",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates an "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "-like declaration, as a "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " syntax "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " compatible\nwith versions 1-3.\n\nWorks around the lack of "
							},
							{
								"kind": "code",
								"text": "`const`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": "s in "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " < 3. Used as the base for\nthe other "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " version list types, ensuring a common standard while\noffering further language features where available."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"name": "```javascript\ngetGLSLListBase('float', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = float(0);'+lf+\n'const int list_1 = float(1);'+lf+\n'const int list_2 = float(2);';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 141,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L141"
						}
					],
					"signatures": [
						{
							"id": 458,
							"name": "getGLSLListBase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array-like declaration string."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 141,
									"character": 31,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L141"
								}
							],
							"parameters": [
								{
									"id": 459,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 460,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 461,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"name": "array"
									}
								},
								{
									"id": 462,
									"name": "qualify",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 463,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 464,
					"name": "getGLSL1ListLike",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates an array-like declaration, as a "
							},
							{
								"kind": "code",
								"text": "`GLSL1`"
							},
							{
								"kind": "text",
								"text": " syntax string.\n\nWorkaround for lack of "
							},
							{
								"kind": "code",
								"text": "`const`"
							},
							{
								"kind": "text",
								"text": " arrays in "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " < 3. Adds a lookup macro\nfunction; slow here, but standard."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSLListBase",
										"target": 457,
										"tsLinkText": ""
									}
								]
							},
							{
								"tag": "@example",
								"name": "```javascript\ngetGLSL1ListLike('float', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = float(0);'+lf+\n'const int list_1 = float(1);'+lf+\n'const int list_2 = float(2);\\n'+\n'// Index macro `list_i` (e.g: `list_i(0)`) may be slow, `+\n  'use name (e.g: `list_0`) if possible.\\n'+\n'#define list_i(i) ((i == 2)? list_2 : ((i == 1)? list_1 : list_0))\\n';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 175,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L175"
						}
					],
					"signatures": [
						{
							"id": 465,
							"name": "getGLSL1ListLike",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array-like declaration string."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 175,
									"character": 32,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L175"
								}
							],
							"parameters": [
								{
									"id": 466,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 467,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 468,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "array"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 469,
									"name": "qualify",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 470,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 471,
					"name": "getGLSL1ListArray",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates an array declaration, as a "
							},
							{
								"kind": "code",
								"text": "`GLSL1`"
							},
							{
								"kind": "text",
								"text": " syntax string.\n\nLookup and meta macros are added for consistency with other versions."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSLListBase",
										"target": 457,
										"tsLinkText": ""
									}
								]
							},
							{
								"tag": "@example",
								"name": "```javascript\ngetGLSL1ListArray('vec3', 'list', [[1, 0, 0], [0, 2, 0], [0, 0, 3]]); // =>\n'const int list_l = 3;'+lf+\n'vec3 list_0 = vec3(1, 0, 0);'+lf+\n'vec3 list_1 = vec3(0, 2, 0);'+lf+\n'vec3 list_2 = vec3(0, 0, 3);'+lf+\n'vec3 list[list_l];'+lf+\n'list[0] = list_0;'+lf+\n'list[1] = list_1;'+lf+\n'list[2] = list_2;\\n'+\n'#define list_i(i) list[i]\\n';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 213,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L213"
						}
					],
					"signatures": [
						{
							"id": 472,
							"name": "getGLSL1ListArray",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array declaration string."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 213,
									"character": 33,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L213"
								}
							],
							"parameters": [
								{
									"id": 473,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 474,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 475,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "array"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 476,
									"name": "qualify",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 477,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 478,
					"name": "getGLSL3List",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Generates an array declaration, as a "
							},
							{
								"kind": "code",
								"text": "`GLSL3`"
							},
							{
								"kind": "text",
								"text": " syntax string.\n\nLookup and meta macros are added for consistency with other versions."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSLListBase",
										"target": 457,
										"tsLinkText": ""
									}
								]
							},
							{
								"tag": "@example",
								"name": "```javascript\ngetGLSL3List('int', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = int(0);'+lf+\n'const int list_1 = int(1);'+lf+\n'const int list_2 = int(2);'+lf+\n'const int list[list_l] = int[list_l](list_0, list_1, list_2);\\n'+\n'#define list_i(i) list[i]\\n';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 244,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L244"
						}
					],
					"signatures": [
						{
							"id": 479,
							"name": "getGLSL3List",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL3`"
											},
											{
												"kind": "text",
												"text": " array declaration string."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 244,
									"character": 28,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L244"
								}
							],
							"parameters": [
								{
									"id": 480,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 481,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 482,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "array"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 483,
									"name": "qualify",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 484,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 485,
					"name": "getGLSLList",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " definition of an array, and initialises it with the given\nvalues, type, and variable name.\n\nThe initialisation is valid "
							},
							{
								"kind": "code",
								"text": "`GLSL1`"
							},
							{
								"kind": "text",
								"text": " or greater syntax; but is written with\nescaped new-lines so it may be used in a single-line (e.g: for preprocessor\nmacros).\n\nFor a "
							},
							{
								"kind": "code",
								"text": "`qualify`"
							},
							{
								"kind": "text",
								"text": " of "
							},
							{
								"kind": "code",
								"text": "`const`"
							},
							{
								"kind": "text",
								"text": " on any "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " < 3, falls back to using non-array\nvariables with the index appended to "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": ", since "
							},
							{
								"kind": "code",
								"text": "`const`"
							},
							{
								"kind": "text",
								"text": " arrays aren't\nsupported before "
							},
							{
								"kind": "code",
								"text": "`GLSL3`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSL3List",
										"target": 478,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSL1ListLike",
										"target": 464,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getGLSL1ListArray",
										"target": 471,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@example",
								"name": "```javascript\ngetGLSLList('int', 'test', [0, 1]); // =>\n'const int test_l = 2;'+lf+\n'int test_0 = int(0);'+lf+\n'int test_1 = int(1);'+lf+\n'int test[test_l];'+lf+\n'test[0] = test_0;'+lf+\n'test[1] = test_1;\\n'+\n'#define test_i(i) test[i]\\n';\n\ngetGLSLList('ivec2', 'vecs', [[1, 0], [0, 1]], 'const', 3); // =>\n'const int vecs_l = 2;'+lf+\n'ivec2 vecs_0 = ivec2(1, 0);'+lf+\n'ivec2 vecs_1 = ivec2(0, 1);'+lf+\n'const ivec2 vecs[vecs_l] = ivec2[vecs_l](vecs_0, vecs_1);\\n'+\n'#define vecs_i(i) vecs[i]\\n';\n\ngetGLSLList('int', 'listLike', [0, 1], 'const', 1); // =>\n'const int listLike_l = 2;'+lf+\n'const int listLike_0 = int(0);'+lf+\n'const int listLike_1 = int(1);\\n'+\n'// Index macro `listLike_i` (e.g: `listLike_i(0)`) may be slow, `+\n  'use name (e.g: `listLike_0`) if possible.\\n'+\n'#define listLike_i(i) ((i == 1)? listLike_1 : listLike_0)\\n';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 301,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L301"
						}
					],
					"signatures": [
						{
							"id": 486,
							"name": "getGLSLList",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " (1 or 3) array or array-like declaration string."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 301,
									"character": 27,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L301"
								}
							],
							"parameters": [
								{
									"id": 487,
									"name": "type",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 488,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 489,
									"name": "a",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "array"
												},
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 490,
									"name": "qualify",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed (e.g: "
											},
											{
												"kind": "code",
												"text": "`const`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 491,
									"name": "glsl",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " version to target, if specified."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 492,
									"name": "init",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 430,
					"name": "macroValues",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 404,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L404"
						}
					],
					"signatures": [
						{
							"id": 431,
							"name": "macroValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the values within textures per-step, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThese macros define mappings from values to their textures and channels.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 420,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 448,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"name": "```javascript\nconst state = { pre: '', steps: 2 };\nconst maps = { values: [2, 4, 1], channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nstate.maps = mapGroups({ ...maps, buffersMax: 1, packed: 0 });\nmacroValues(state); // =>\n'#define texture_0 0\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_1 1\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_2 2\\n'+\n'#define channels_2 r\\n'+\n'\\n'+\n'#define textures 3\\n'+\n'#define passes 3\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 1 });\nstate.size = { entries: 2**5 };\nmacroValues(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define entries 32\\n'+\n'#define textures 2\\n'+\n'#define passes 2\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n\n// Can bind more texture outputs per pass - values across fewer passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nmacroValues(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define entries 32\\n'+\n'#define textures 2\\n'+\n'#define passes 1\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the maps from\n  values to "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s and channels."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 404,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L404"
								}
							],
							"parameters": [
								{
									"id": 432,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 433,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 434,
					"name": "macroOutput",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 531,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L531"
						}
					],
					"signatures": [
						{
							"id": 435,
							"name": "macroOutput",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the outputs being drawn to per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThese macros define mappings from values to their outputs, if bound.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 420,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 448,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"name": "```javascript\nconst maps = { values: [2, 4, 1], channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state = {\n  pre: '', passNow: 0,\n  maps: mapGroups({ ...maps, buffersMax: 1, packed: 0 })\n};\n\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_0 0\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 1 });\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_1 0\\n'+\n'#define attach_1 0\\n'+\n'#define output_1 gl_FragData[attach_1].rgba\\n'+\n'\\n';\n\n// Next pass in this step.\n++state.passNow;\nmacroOutput(state); // =>\n'#define passNow 1\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 0\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n';\n\n// Can bind more texture outputs per pass - values across fewer passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_1 0\\n'+\n'#define attach_1 0\\n'+\n'#define output_1 gl_FragData[attach_1].rgba\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 1\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 1\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n';\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros for the pass's bound outputs."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 531,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L531"
								}
							],
							"parameters": [
								{
									"id": 436,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties for generating the macros. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": ":"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 437,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 438,
					"name": "macroSamples",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 692,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L692"
						}
					],
					"signatures": [
						{
							"id": 439,
							"name": "macroSamples",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the texture samples/reads per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThe macros define the mapping between the values and those they derive from,\nas step/texture locations in a "
									},
									{
										"kind": "code",
										"text": "`samples`"
									},
									{
										"kind": "text",
										"text": " list, and indexes to read values\nfrom sampled data in a "
									},
									{
										"kind": "code",
										"text": "`reads`"
									},
									{
										"kind": "text",
										"text": " list (once sampled into a "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " list, as in\n"
									},
									{
										"kind": "code",
										"text": "`macroTaps`"
									},
									{
										"kind": "text",
										"text": " or similar).\n\nThey're set up as function-like macros that may be called from the shader to\ninitialise the mappings arrays with a given name.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 442,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 420,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLList",
												"target": 485,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapStep",
												"target": 83
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 448,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"name": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\nconst maps = { values, derives, channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state =\n  { pre: '', maps: mapStep({ ...maps, buffersMax: 1, packed: 0 }) };\n\n// Uses the first pass by default.\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 1;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 2);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) samples_0\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n';\n\n// Next pass in this step - no derives, no samples nor reads.\nstate.passNow = 1;\nmacroSamples(state); // =>\n'';\n\n// Next pass in this step.\n++state.passNow;\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 4;'+lf+\n  'const ivec2 samples_0 = ivec2(1, 0);'+lf+\n  'const ivec2 samples_1 = ivec2(0, 0);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_3 = ivec2(0, 2);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) ((i == 3)? samples_3 : ((i == 2)? samples_2 '+\n  ': ((i == 1)? samples_1 : samples_0)))\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(0);'+lf+\n  'const int reads_2_1 = int(1);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(3);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\n// Can bind more texture outputs per pass - values across fewer passes.\n// Also fewer samples where values share derives or textures.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 3;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_1 = ivec2(1, 1);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 0);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) '+\n  '((i == 2)? samples_2 : ((i == 1)? samples_1 : samples_0))\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(1);'+lf+\n  'const int reads_2_1 = int(0);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(0);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n';\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the mappings for\n  samples and reads, for each value."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 692,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L692"
								}
							],
							"parameters": [
								{
									"id": 440,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 441,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both the\n  hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 442,
					"name": "macroTaps",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 807,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L807"
						}
					],
					"signatures": [
						{
							"id": 443,
							"name": "macroTaps",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the samples of textures per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThe macros define the minimal sampling of textures for the data the active\npass's values derive from; creates a "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " list containing the samples; the\n"
									},
									{
										"kind": "code",
										"text": "`samples`"
									},
									{
										"kind": "text",
										"text": " list variable names are required as created by "
									},
									{
										"kind": "code",
										"text": "`macroSamples`"
									},
									{
										"kind": "text",
										"text": ".\n\nHandles sampling states in a flat array of textures, or merged in one texture\n(in both "
									},
									{
										"kind": "code",
										"text": "`sampler2D`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`sampler3D`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`sampler2DArray`"
									},
									{
										"kind": "text",
										"text": " where supported).\nMerging allows shaders to access past steps by non-constant lookups; e.g:\nattributes cause "
									},
									{
										"kind": "code",
										"text": "`sampler array index must be a literal expression`"
									},
									{
										"kind": "text",
										"text": " on\n"
									},
									{
										"kind": "code",
										"text": "`GLSL3`"
									},
									{
										"kind": "text",
										"text": " spec and other platforms (e.g: "
									},
									{
										"kind": "code",
										"text": "`D3D`"
									},
									{
										"kind": "text",
										"text": "); note these need texture repeat\nwrapping.\n\nThey're set up as function-like macros that may be called from the shader to\ninitialise the mappings arrays with a given name.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler array index must be a literal expression`"
											},
											{
												"kind": "text",
												"text": "](https://stackoverflow.com/a/60110986/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler2DArray`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_2d_array.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler3D`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_3d.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroSamples",
												"target": 438,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 420,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLList",
												"target": 485,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapStep",
												"target": 83
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.toUniforms"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 448,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"name": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\nconst maps = { values, derives, channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state =\n  { pre: '', maps: mapStep({ ...maps, buffersMax: 1, packed: 0 }) };\n\n// Uses the first pass by default.\nmacroTaps(state); // =>\n'@todo';\n\n// Next pass in this step - no derives, no samples nor reads.\nstate.passNow = 1;\nmacroTaps(state); // =>\n'';\n\n// Next pass in this step.\n++state.passNow;\nmacroTaps(state); // =>\n'@todo';\n\n// Automatically packed values - values across fewer textures/passes.\n// Can bind more texture outputs per pass - values across fewer passes.\n// Also fewer samples where values share derives or textures.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroTaps(state); // =>\n'@todo';\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the minimal\n  sampling of textures, to suit how states are stored (array of textures, or\n  all merged into one texture) and supported "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " language features."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 807,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L807"
								}
							],
							"parameters": [
								{
									"id": 444,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 445,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 493,
					"name": "macroPass",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines all "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " preprocessor macro values, "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " samples, and outputs\nfor the active pass.\n\nThe macros define the mapping between the active values, their "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s and\nchannels, bound outputs, and other macros useful for a draw pass.\nCaches the result if "
							},
							{
								"kind": "code",
								"text": "`macros`"
							},
							{
								"kind": "text",
								"text": " generation is enabled, to help reuse shaders."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "hasMacros",
										"target": 420,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "macroValues",
										"target": 430,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "macroOutput",
										"target": 434,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "macroTaps",
										"target": 442,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "macroSamples",
										"target": 438,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "maps.mapStep",
										"target": 83
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "data.toData",
										"target": 120
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@example",
								"name": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\n\n// Automatically packed values - values across fewer `texture`s/passes.\n// Only a single `texture` output per pass - values across more passes.\nconst state = {\n  passNow: 0, steps: 2, size: { entries: 2**5 },\n  maps: mapStep({ values, derives, channelsMax: 4, buffersMax: 1 })\n};\n\nmacroPass(state); // =>\n'#define gpgpu_texture_1 0\\n'+\n'#define gpgpu_channels_1 rgba\\n'+\n'\\n'+\n'#define gpgpu_texture_0 1\\n'+\n'#define gpgpu_channels_0 rg\\n'+\n'\\n'+\n'#define gpgpu_texture_2 1\\n'+\n'#define gpgpu_channels_2 b\\n'+\n'\\n'+\n'#define gpgpu_entries 32\\n'+\n'#define gpgpu_textures 2\\n'+\n'#define gpgpu_passes 2\\n'+\n'#define gpgpu_stepsPast 1\\n'+\n'#define gpgpu_steps 2\\n'+\n'\\n'+\n'#define gpgpu_passNow 0\\n'+\n'\\n'+\n'#define gpgpu_bound_1 0\\n'+\n'#define gpgpu_attach_1 0\\n'+\n'#define gpgpu_output_1 gl_FragData[gpgpu_attach_1].rgba\\n'+\n'\\n';\n\n// Next pass and extra step.\n++state.steps;\n++state.passNow;\nstate.pre = '';\nmacroPass(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define entries 32\\n'+\n'#define textures 2\\n'+\n'#define passes 2\\n'+\n'#define stepsPast 2\\n'+\n'#define steps 3\\n'+\n'\\n'+\n'#define passNow 1\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 0\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n'+\n'#define useSamples'+lf+\n  'const int samples_l = 3;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_1 = ivec2(1, 1);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 0);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i)'+lf+\n  '((i == 2)? samples_2 : ((i == 1)? samples_1 : samples_0))\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(1);'+lf+\n  'const int reads_2_1 = int(0);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(0);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n'+\n'// States in a `sampler2D[]`; looks up 1D index and 2D `uv`.\\n'+\n'@todo';\n```",
								"content": []
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 1122,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L1122"
						}
					],
					"signatures": [
						{
							"id": 494,
							"name": "macroPass",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the mappings for\n  values, "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s, channels, bound outputs of the active pass, etc. See\n  "
											},
											{
												"kind": "code",
												"text": "`macroValues`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`macroOutput`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`macroSamples`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 1122,
									"character": 25,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L1122"
								}
							],
							"parameters": [
								{
									"id": 495,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties for generating the macros. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": "\n  and "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 496,
									"name": "on",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 497,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 1127,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L1127"
						}
					],
					"target": 493
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						497
					]
				},
				{
					"title": "Variables",
					"children": [
						446,
						447,
						448,
						450
					]
				},
				{
					"title": "Functions",
					"children": [
						420,
						457,
						464,
						471,
						478,
						485,
						430,
						434,
						438,
						442,
						493
					]
				}
			],
			"sources": [
				{
					"fileName": "macros.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/macros.js#L1"
				}
			]
		},
		{
			"id": 52,
			"name": "maps",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " maps of data for optimal inputs/outputs on a platform.\n\nThese maps show how to make optimal use of a platform's supported features,\nhow to pack/unpack their data from "
					},
					{
						"kind": "code",
						"text": "`framebuffer`"
					},
					{
						"kind": "text",
						"text": "s/"
					},
					{
						"kind": "code",
						"text": "`texture`"
					},
					{
						"kind": "text",
						"text": "s, perform minimal\nneeded samples to retrieve any past values they must derive from, etc.\n\nShaders may declare values they output, values they derive from, groupings of\nin/dependent values - without handling how these concerns map to the\nparticular platform resources they're using.\n\nPlatform limits/features/extensions are accounted for, to produce the most\nefficient mappings available with the least I/O when it comes to drawing\n(draw passes, "
					},
					{
						"kind": "code",
						"text": "`texture`"
					},
					{
						"kind": "text",
						"text": " samples, etc)."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Allow passes within/across "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s; separate data/"
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " shapes."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 76,
					"name": "validValue",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Determines whether a given value is valid and can be stored within the\nchannels available."
							}
						]
					},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 40,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L40"
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "validValue",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is valid."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 40,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L40"
								}
							],
							"parameters": [
								{
									"id": 78,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A value to validate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 79,
									"name": "channelsMax",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum channels available to store values."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "channelsMaxDef"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "useBuffers",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether to use buffers to output state "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " in passes per-step, or no\noutput buffers in one pass as a side-effect not updating state "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 56,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L56"
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "useBuffers",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether to use output buffers in passes, or no output\n  buffers in one pass."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 56,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L56"
								}
							],
							"parameters": [
								{
									"id": 82,
									"name": "buffersMax",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Maximum "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s that may be bound as\n  buffer outputs per-pass."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "packValues",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 91,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L91"
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "packValues",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Minimise resource usage, order "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": " to pack into blocks of "
									},
									{
										"kind": "code",
										"text": "`channelsMax`"
									},
									{
										"kind": "text",
										"text": ";\ninterpreted as indexes into the given "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58,
												"tsLinkText": ""
											}
										]
									},
									{
										"tag": "@example",
										"name": "```\n  packValues([1, 2, 3], 4, []); // =>\n  [2, 0, 1];\n\n  packValues([3, 2, 1], 4, []); // =>\n  [0, 2, 1];\n\n  packValues([4, 3, 2], 4, []); // =>\n  [0, 1, 2];\n\n  packValues([1, 1, 4, 2], 4, []); // =>\n  [2, 3, 0, 1];\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The indexes of the given "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": ", reordered\n  to pack into the fewest buckets of "
											},
											{
												"kind": "code",
												"text": "`channelsMax`"
											},
											{
												"kind": "text",
												"text": " size or less; stored in\n  the given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " array."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 91,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L91"
								}
							],
							"parameters": [
								{
									"id": 55,
									"name": "values",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Each entry is how many interdependent channels\n  are grouped into one texture in one pass, separate entries may be across\n  one or more textures/passes. See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "",
											"qualifiedName": "array"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 56,
									"name": "channelsMax",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number of channels\n  per texture. See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "channelsMaxDef"
								},
								{
									"id": 57,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": " to store the result; a new "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": " if not\n  given."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "",
									"qualifiedName": "array"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "array"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "mapGroups",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 248,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L248"
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "mapGroups",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": " of "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " data across draw passes and data textures."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "packValues",
												"target": 53,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"name": "```\n  const x = 2;\n  const y = 4;\n  const z = 1;\n  const maps = { values: [x, y, z], channelsMax: 4 };\n\n  // No optimisations - values not packed, single texture output per pass.\n  mapGroups({ ...maps, buffersMax: 1, packed: false }); // =>\n  {\n    ...maps, packed: false,\n    textures: [[0], [1], [2]], // length === 3\n    passes: [[0], [1], [2]], // length === 3\n    valueToTexture: [0, 1, 2], valueToPass: [0, 1, 2],\n    textureToPass: [0, 1, 2]\n  };\n\n  // Automatically packed values - values across fewer textures/passes.\n  mapGroups({ ...maps, buffersMax: 1 }); // =>\n  {\n    ...maps, packed: [1, 0, 2],\n    textures: [[1], [0, 2]], // length === 2\n    passes: [[0], [1]], // length === 2\n    valueToTexture: [1, 0, 1], valueToPass: [1, 0, 1],\n    textureToPass: [0, 1]\n  };\n\n  // Can bind more texture outputs per pass - values across fewer passes.\n  mapGroups({ ...maps, buffersMax: 4 }); // =>\n  {\n    ...maps, packed: [1, 0, 2],\n    textures: [[1], [0, 2]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [1, 0, 1], valueToPass: [0, 0, 0],\n    textureToPass: [0, 0]\n  };\n\n  // Custom packed values - fuller control.\n  mapGroups({ ...maps, buffersMax: 4, packed: [0, 2, 1] }); // =>\n  {\n    ...maps, packed: [0, 2, 1],\n    textures: [[0, 2], [1]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [0, 1, 0], valueToPass: [0, 0, 0],\n    textureToPass: [0, 0]\n  };\n\n  // Merge dependent values - fuller control, but no map for merged values.\n  mapGroups({ ...maps, values: [x+z, y], buffersMax: 4 }); // =>\n  {\n    ...maps, packed: [1, 0],\n    textures: [[1], [0]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [1, 0], valueToPass: [0, 0],\n    textureToPass: [0, 0]\n  };\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "; how "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are grouped\n  per-texture per-pass per-step, meta information, and given parameters."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " Textures grouped into passes,\n  as "
											},
											{
												"kind": "code",
												"text": "`arrays`"
											},
											{
												"kind": "text",
												"text": " corresponding to "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s in separate draw passes; whose\n  values are indexes into "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " Values grouped into\n  textures, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s corresponding to "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " attachments, into\n  which "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are drawn; whose values are indexes into "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " The "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": ", as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.buffersMax`"
											},
											{
												"kind": "text",
												"text": " Maximum "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s that may be bound as\n  buffer outputs per-pass, as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.channelsMax`"
											},
											{
												"kind": "text",
												"text": " Maximum channels per-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": ", as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.valueToTexture`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " to the index of the data-texture containing it."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.valueToPass`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " to the index of the pass containing it."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textureToPass`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " to the index of the pass containing it."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 248,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L248"
								}
							],
							"parameters": [
								{
									"id": 60,
									"name": "maps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Initial maps settings; new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " if not given."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 62,
													"name": "values",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " where each\n  "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": " denotes how many value channels are grouped into one data-texture\n  in one draw pass (where any value map logic isn't handled here); each\n  separate number may be computed across one or more data-textures/passes.\n\n  Each value denotes the number of dependent channels to compute together;\n  separate values denote channels that are independent, and may be drawn in\n  the same or separate passes, depending on settings/support.\n\n  The order may affect the number of textures/passes needed; can maintain\n  order as-is, or use a more efficient "
															},
															{
																"kind": "code",
																"text": "`packed`"
															},
															{
																"kind": "text",
																"text": " order. See "
															},
															{
																"kind": "code",
																"text": "`packValues`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 203,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L203"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 63,
													"name": "channelsMax",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Maximum channels\n  per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 215,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L215"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 64,
													"name": "buffersMax",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Maximum "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s that\n  may be bound as buffer outputs per-pass. Maps multiple passes per-step to\n  output all "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": " if they're spread across more "
															},
															{
																"kind": "code",
																"text": "`textures`"
															},
															{
																"kind": "text",
																"text": " than this\n  "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ". Uses one pass and binds no output if given "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y; useful for\n  side-effects with no state outputs, like rendering. See "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 217,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L217"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "literal",
																"value": false
															}
														]
													}
												},
												{
													"id": 65,
													"name": "packed",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of indexes into "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": "\n  packed into an order that best fits into blocks of "
															},
															{
																"kind": "code",
																"text": "`channelsMax`"
															},
															{
																"kind": "text",
																"text": " to\n  minimise resources; or "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y to use "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": " in their given order; uses\n  "
															},
															{
																"kind": "code",
																"text": "`packValues`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 222,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L222"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														62,
														63,
														64,
														65
													]
												}
											],
											"sources": [
												{
													"fileName": "maps.js",
													"line": 203,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L203"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 66,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the results; modifies "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": "\n  if not given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "mapSamples",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 382,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L382"
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "mapSamples",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maps the minimal set of texture reads to derive the next state of values from\na past state of values they depend upon."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58,
												"tsLinkText": ""
											}
										]
									},
									{
										"tag": "@example",
										"name": "```\n  const maps = mapGroups({\n    // See `mapGroups` examples for resulting maps.\n    values: [2, 4, 1], channelsMax: 4, buffersMax: 1, packed: false,\n    // Derived step/value indexes, per-value; sample entries include:\n    derives: [\n      // Single...\n      2,\n      // Empty...\n      ,\n      // Multiple...\n      [\n        // Defined step...\n        { value: 1, step: 0 },\n        // All values at any given level/step...\n        true\n      ]\n    ]\n  });\n\n  mapSamples(maps); // =>\n  {\n    ...maps,\n    // Minimum texture samples for values; nested per-pass, per-value.\n    // Deepest arrays are step/texture index pairs into `maps.textures`.\n    samples: [\n      [[0, 2]],\n      null,\n      [[1, 0], [0, 0], [0, 1], [0, 2]]\n    ],\n    // Value indexes into `to.samples`; nested per-pass, per-value.\n    // Map from a value index to data it needs in the minimal samples.\n    reads: [\n      [[0]],\n      null,\n      [null, null, [0, 1, 2, 3]]\n    ]\n  };\n```",
										"content": []
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " object, with resulting maps added for\n  any given "
											},
											{
												"kind": "code",
												"text": "`maps.derives`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.samples]`"
											},
											{
												"kind": "text",
												"text": " Map of the minimum\n  set of indexes into "
											},
											{
												"kind": "code",
												"text": "`maps.textures`"
											},
											{
												"kind": "text",
												"text": " that need to be sampled per-pass,\n  to get all "
											},
											{
												"kind": "code",
												"text": "`derives`"
											},
											{
												"kind": "text",
												"text": " needed for each value of "
											},
											{
												"kind": "code",
												"text": "`maps.values`"
											},
											{
												"kind": "text",
												"text": " of each\n  pass of "
											},
											{
												"kind": "code",
												"text": "`maps.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.reads]`"
											},
											{
												"kind": "text",
												"text": " Sparse map from\n  each value of "
											},
											{
												"kind": "code",
												"text": "`derives`"
											},
											{
												"kind": "text",
												"text": " to its step and texture indexes in "
											},
											{
												"kind": "code",
												"text": "`to.samples`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.derives]`"
											},
											{
												"kind": "text",
												"text": " How new values derive from past values, as\n  given."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 382,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L382"
								}
							],
							"parameters": [
								{
									"id": 69,
									"name": "maps",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How values are grouped per-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " per-pass per-step.\n  See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 70,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 71,
													"name": "derives",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How the next output state "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": " derive\n  from any past input "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": ". If given no "
															},
															{
																"kind": "code",
																"text": "`derives`"
															},
															{
																"kind": "text",
																"text": ", or a\n  "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y-non-integer, no samples are mapped, "
															},
															{
																"kind": "code",
																"text": "`to`"
															},
															{
																"kind": "text",
																"text": " is returned unchanged."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 358,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L358"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 72,
													"name": "passes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Textures grouped into passes. See\n  "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 362,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L362"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "",
															"qualifiedName": "array"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "",
																	"qualifiedName": "array"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "array"
															}
														],
														"name": "array"
													}
												},
												{
													"id": 73,
													"name": "textures",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Values grouped into textures. See\n  "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 364,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L364"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "",
															"qualifiedName": "array"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "",
																	"qualifiedName": "array"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																],
																"name": "array"
															}
														],
														"name": "array"
													}
												},
												{
													"id": 74,
													"name": "valueToTexture",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Inverse map from each value index\n  to the data texture index containing it."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 366,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L366"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "",
															"qualifiedName": "array"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "number"
															}
														],
														"name": "array"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														71,
														72,
														73,
														74
													]
												}
											],
											"sources": [
												{
													"fileName": "maps.js",
													"line": 358,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L358"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 75,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to store the result in; "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": " if not\n  given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 83,
					"name": "mapStep",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Maps a full step, creates maps grouping given values per-"
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " per-pass\nper-step, and minimal samples and reads if new values derive from past ones."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "mapGroups",
										"target": 58,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "mapSamples",
										"target": 67,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 460,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L460"
						}
					],
					"signatures": [
						{
							"id": 84,
							"name": "mapStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " object; how "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are grouped\n  per-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " per-pass per-step, meta information, and given parameters;\n  and minimal samples and reads for any given "
											},
											{
												"kind": "code",
												"text": "`maps.derives`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "maps.js",
									"line": 460,
									"character": 23,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L460"
								}
							],
							"parameters": [
								{
									"id": 85,
									"name": "maps",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input value maps and settings."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 86,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the results; modifies "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": "\n  if not given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 516,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L516"
						}
					],
					"target": 83
				},
				{
					"id": 87,
					"name": "derive",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Denotes any past input "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " (and optional past "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": "), that next output\n"
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " derive from.\n\nA nested hierarchy of the form "
							},
							{
								"kind": "code",
								"text": "`any-value-past[any-value-step-past]`"
							},
							{
								"kind": "text",
								"text": ",\nindexing "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": ", each nesting level denotes how to derive from:\n0. "
							},
							{
								"kind": "code",
								"text": "`any-value-past`"
							},
							{
								"kind": "text",
								"text": ": any/all past input "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "/s, at 1st "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": " past.\n1. "
							},
							{
								"kind": "code",
								"text": "`any-value-step-past`"
							},
							{
								"kind": "text",
								"text": ": any/all past input "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "/s, at any given "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": "\n  past.\n\nThe "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "/s to derive from may be given as:\n- "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ": derives from all "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": ".\n- "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": ": derives from the given "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " index.\n\nIf given a "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`number`"
							},
							{
								"kind": "text",
								"text": " (denoting "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": "/s but no "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": "), the next\noutput "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " derives from the given "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " at the 1st "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": " past.\n\nTo specify a different "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": ", pass an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " denoting both the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " (as\nabove) along with a "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": "; in the form "
							},
							{
								"kind": "code",
								"text": "`{value:true|number,step?:number}`"
							},
							{
								"kind": "text",
								"text": ",\nto derive from the "
							},
							{
								"kind": "code",
								"text": "`value`"
							},
							{
								"kind": "text",
								"text": " at any given "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": " past (or the 1st "
							},
							{
								"kind": "code",
								"text": "`step`"
							},
							{
								"kind": "text",
								"text": " past\nif not given).\n\nAny omitted "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": " are ignored.\n\nSee "
							},
							{
								"kind": "code",
								"text": "`derives`"
							},
							{
								"kind": "text",
								"text": " for more on how these are derived by the next output "
							},
							{
								"kind": "code",
								"text": "`values`"
							},
							{
								"kind": "text",
								"text": ".\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "derives"
							}
						]
					},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 485,
							"character": 59,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L485"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": true
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 88,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 89,
											"name": "value",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "maps.js",
													"line": 485,
													"character": 26,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L485"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": true
													},
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 90,
											"name": "step",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "maps.js",
													"line": 485,
													"character": 44,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L485"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												89,
												90
											]
										}
									],
									"sources": [
										{
											"fileName": "maps.js",
											"line": 485,
											"character": 25,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L485"
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						91
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						87
					]
				},
				{
					"title": "Functions",
					"children": [
						76,
						80,
						53,
						58,
						67,
						83
					]
				}
			],
			"sources": [
				{
					"fileName": "maps.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/maps.js#L1"
				}
			]
		},
		{
			"id": 1,
			"name": "size",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "getWidth",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 30,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L30"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "getWidth",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the given width, for various properties in order of precedence."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The width as given in one of the expected properties, or\n  any given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " number, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if no width could be resolved."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "size.js",
									"line": 30,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L30"
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size (width) "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " containing it."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 6,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 17,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L17"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 7,
													"name": "w",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 18,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L18"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 8,
													"name": "x",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 19,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L19"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 9,
													"name": "shape",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Shape (width) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 20,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L20"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 10,
													"name": "size",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Size (width) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 22,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L22"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 11,
													"name": "side",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width and height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 24,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L24"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 12,
													"name": "ʼ0ʼ",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": " itself."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 25,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L25"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6,
														7,
														8,
														9,
														10,
														11,
														12
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 17,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L17"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "getHeight",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 57,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L57"
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "getHeight",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the given height, for various properties in order of precedence."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The height as given in one of the expected properties, or\n  any given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " number, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if no height could be resolved."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "size.js",
									"line": 57,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L57"
								}
							],
							"parameters": [
								{
									"id": 15,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size (height) "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " containing it."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 17,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 44,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L44"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 18,
													"name": "h",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 45,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L45"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 19,
													"name": "y",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 46,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L46"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 20,
													"name": "shape",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Shape (height) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 47,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L47"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 21,
													"name": "size",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Size (height) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 49,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22,
													"name": "side",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width and height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 51,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L51"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 23,
													"name": "ʼ1ʼ",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": " itself."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 52,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L52"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17,
														18,
														19,
														20,
														21,
														22,
														23
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 44,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L44"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "countDrawEntries",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gives the number of entries to draw a full state, for various parameters.\nEffectively equivalent to "
							},
							{
								"kind": "code",
								"text": "`gl_VertexID`"
							},
							{
								"kind": "text",
								"text": " in "
							},
							{
								"kind": "code",
								"text": "`WebGL2`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getWidth",
										"target": 2,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "getHeight",
										"target": 13,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "data.toData",
										"target": 120
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "size.js",
							"line": 83,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L83"
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "countDrawEntries",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of entries needed to draw a full state; each\n  entry of a data-texture (its area, equivalent to "
											},
											{
												"kind": "code",
												"text": "`state.size.entries`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "size.js",
									"line": 83,
									"character": 32,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L83"
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "size",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of data resources, or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "\n  containing it; width if "
											},
											{
												"kind": "code",
												"text": "`height`"
											},
											{
												"kind": "text",
												"text": " is given as a second parameter.\n  See "
											},
											{
												"kind": "code",
												"text": "`getWidth`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`getHeight`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 27,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 28,
													"name": "entries",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": " of entries of data resources."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 76,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L76"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 76,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L76"
												}
											]
										}
									},
									"defaultValue": "1"
								},
								{
									"id": 29,
									"name": "height",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of data resources, or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "\n  containing it."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 30,
					"name": "getDrawIndexes",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Gives the "
							},
							{
								"kind": "code",
								"text": "`array`"
							},
							{
								"kind": "text",
								"text": " of indexes needed to draw a full state."
							}
						]
					},
					"sources": [
						{
							"fileName": "size.js",
							"line": 95,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L95"
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "getDrawIndexes",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": " of indexes for drawing all\n  data-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " entries, numbered "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`size-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "size.js",
									"line": 95,
									"character": 30,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L95"
								}
							],
							"parameters": [
								{
									"id": 32,
									"name": "size",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of entries in each data-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "; or an\n  "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " of size/type of data resources."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "",
									"qualifiedName": "array"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "array"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "getScaled",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "2 raised to the given numeric power, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not given."
							}
						]
					},
					"sources": [
						{
							"fileName": "size.js",
							"line": 105,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L105"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "getScaled",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "2 raised to the given numeric power, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if not given."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "size.js",
									"line": 105,
									"character": 25,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L105"
								}
							],
							"parameters": [
								{
									"id": 35,
									"name": "scale",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The power to raise 2 to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						2,
						13,
						24,
						30,
						33
					]
				}
			],
			"sources": [
				{
					"fileName": "size.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/size.js#L1"
				}
			]
		},
		{
			"id": 185,
			"name": "step",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " update step.\n\nConnects inputs to the "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " state and renders an update step."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "[Fix "
							},
							{
								"kind": "code",
								"text": "`@callback`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@typedef`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/TypeStrong/typedoc/issues/1896):\n  nested "
							},
							{
								"kind": "code",
								"text": "`@param`"
							},
							{
								"kind": "text",
								"text": "; omits "
							},
							{
								"kind": "code",
								"text": "`@return`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@see`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@this`"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 224,
					"name": "getPass",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Convenience to get the currently active "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "toStep",
										"target": 196,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "data.toData",
										"target": 120
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 38,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L38"
						}
					],
					"signatures": [
						{
							"id": 225,
							"name": "getPass",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Any active step's active pass object, of the given "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "step.js",
									"line": 38,
									"character": 23,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L38"
								}
							],
							"parameters": [
								{
									"id": 226,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 227,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 228,
													"name": "passes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Passes per step. See "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 32,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L32"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													}
												},
												{
													"id": 229,
													"name": "stepNow",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any active state step index. See "
															},
															{
																"kind": "code",
																"text": "`toStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 33,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L33"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 230,
													"name": "passNow",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any active draw pass index. See "
															},
															{
																"kind": "code",
																"text": "`toStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 34,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L34"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														228,
														229,
														230
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 32,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L32"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 231,
					"name": "toShader",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Resolve a shader given as either a "
							},
							{
								"kind": "code",
								"text": "`string`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 52,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L52"
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "toShader",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The given "
											},
											{
												"kind": "code",
												"text": "`shader`"
											},
											{
												"kind": "text",
												"text": " if it's a "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": "; otherwise if it's a\n  "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " the "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": " returned by calling it with "
											},
											{
												"kind": "code",
												"text": "`context`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "step.js",
									"line": 52,
									"character": 24,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L52"
								}
							],
							"parameters": [
								{
									"id": 233,
									"name": "shader",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A shader "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": ", or a "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " that\n  returns one when given the "
											},
											{
												"kind": "code",
												"text": "`context`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": " arguments."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 234,
									"name": "context",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`context`"
											},
											{
												"kind": "text",
												"text": " passed to "
											},
											{
												"kind": "code",
												"text": "`shader`"
											},
											{
												"kind": "text",
												"text": " if it's a "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 235,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": " passed to "
											},
											{
												"kind": "code",
												"text": "`shader`"
											},
											{
												"kind": "text",
												"text": " if it's a "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 186,
					"name": "updateMerge",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 84,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L84"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "updateMerge",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " update, called upon each pass.\n\nCopies the active pass's output into the merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": ", from each of its\n"
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " attachments one by one (to support multiple draw buffers).\nMatches the lookup logic defined in "
									},
									{
										"kind": "code",
										"text": "`macroTaps`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Update docs."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "[SO reading from multiple "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s](https://stackoverflow.com/a/34160982/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getPass",
												"target": 224,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.framebuffer"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.texture"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroTaps",
												"target": 442
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The merged "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": ", updated by the active pass's output;\n  matches the lookup logic defined in "
											},
											{
												"kind": "code",
												"text": "`macroTaps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "step.js",
									"line": 84,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L84"
								}
							],
							"parameters": [
								{
									"id": 188,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state of the active pass."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 190,
													"name": "passes",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Passes per\n  step; any active one's found via "
															},
															{
																"kind": "code",
																"text": "`getPass`"
															},
															{
																"kind": "text",
																"text": ", with:\n  - "
															},
															{
																"kind": "code",
																"text": "`color`"
															},
															{
																"kind": "text",
																"text": ": "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s.\n  - "
															},
															{
																"kind": "code",
																"text": "`map`"
															},
															{
																"kind": "text",
																"text": ": "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": "s, showing how the "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s are grouped\n    per-pass. See "
															},
															{
																"kind": "code",
																"text": "`getPass`"
															},
															{
																"kind": "text",
																"text": ", "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": ", and "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 73,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L73"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "array",
															"elementType": {
																"type": "reflection",
																"declaration": {
																	"id": 191,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 192,
																			"name": "color",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 73,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L73"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		},
																		{
																			"id": 193,
																			"name": "map",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 73,
																					"character": 28,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L73"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				192,
																				193
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 73,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L73"
																		}
																	]
																}
															}
														}
													}
												},
												{
													"id": 194,
													"name": "merge",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The merged "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " to update."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 78,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L78"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 195,
													"name": "stepNow",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currently active state step, if any."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 79,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L79"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														190,
														194,
														195
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 73,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L73"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "toStep",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 198,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L198"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "toStep",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " update step function, for use with a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " state object."
									}
								],
								"blockTags": [
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Make this fully and consistently extensible; improve "
											},
											{
												"kind": "code",
												"text": "`pipeline`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Example."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "buffer",
												"target": {
													"sourceFileName": "src/step.js",
													"qualifiedName": "buffer"
												},
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "command",
												"target": {
													"sourceFileName": "src/step.js",
													"qualifiedName": "command"
												},
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "subimage"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "onStep",
												"target": 236,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "onPass",
												"target": 241,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getPass",
												"target": 224,
												"tsLinkText": ""
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroPass",
												"target": 493
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.toUniforms"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "; set up with a "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " step\n  "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " and related properties, to use with the "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.vert`"
											},
											{
												"kind": "text",
												"text": " The given/new "
											},
											{
												"kind": "code",
												"text": "`state.vert`"
											},
											{
												"kind": "text",
												"text": " vertex shader "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.frag`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`state.frag`"
											},
											{
												"kind": "text",
												"text": " fragment shader "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.verts]`"
											},
											{
												"kind": "text",
												"text": " Any cached pre-processed vertex shaders\n  "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": ", if "
											},
											{
												"kind": "code",
												"text": "`state.verts`"
											},
											{
												"kind": "text",
												"text": " was given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.frags]`"
											},
											{
												"kind": "text",
												"text": " Any cached pre-processed fragment shaders\n  "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": ", if "
											},
											{
												"kind": "code",
												"text": "`state.verts`"
											},
											{
												"kind": "text",
												"text": " was given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.uniforms`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.count`"
											},
											{
												"kind": "text",
												"text": " The given or new "
											},
											{
												"kind": "code",
												"text": "`state.count`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.positions`"
											},
											{
												"kind": "text",
												"text": " The given or new "
											},
											{
												"kind": "code",
												"text": "`state.positions`"
											},
											{
												"kind": "text",
												"text": "; via\n  "
											},
											{
												"kind": "code",
												"text": "`api.buffer`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.pass`"
											},
											{
												"kind": "text",
												"text": " A "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " command "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to draw a given pass;\n  via "
											},
											{
												"kind": "code",
												"text": "`api`"
											},
											{
												"kind": "text",
												"text": "/"
											},
											{
												"kind": "code",
												"text": "`api.command`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.step`"
											},
											{
												"kind": "text",
												"text": " The main "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to perform all the draw\n  pass "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " commands for a given state step."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "step.js",
									"line": 198,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L198"
								}
							],
							"parameters": [
								{
									"id": 198,
									"name": "api",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 199,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 200,
													"name": "buffer",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to set up a "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " buffer."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 135,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L135"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 201,
													"name": "clear",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to clear "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " view or "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 136,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L136"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 202,
													"name": "command",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to create a "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " render pass,\n  given options, to be called later with options; "
															},
															{
																"kind": "code",
																"text": "`api`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 137,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L137"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														200,
														201,
														202
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 135,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L135"
												}
											]
										}
									}
								},
								{
									"id": 203,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state to use. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 204,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 205,
													"name": "maps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass\n  per-step. See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 140,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L140"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 206,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 207,
																	"name": "passes",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 142,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L142"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		207
																	]
																}
															],
															"sources": [
																{
																	"fileName": "step.js",
																	"line": 142,
																	"character": 3,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L142"
																}
															]
														}
													}
												},
												{
													"id": 208,
													"name": "merge",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any merged state "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "; uses separate state\n  textures if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 144,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L144"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 209,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 210,
																			"name": "texture",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 146,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L146"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 211,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 212,
																									"name": "subimage",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "step.js",
																											"line": 147,
																											"character": 3,
																											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L147"
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										212
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "step.js",
																									"line": 147,
																									"character": 3,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L147"
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 213,
																			"name": "update",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 149,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L149"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../../../.yarn/berry/cache/typescript-patch-fe43cd9db9-10c0.zip/node_modules/typescript/lib/lib.es5.d.ts",
																							"qualifiedName": "Function"
																						},
																						"name": "Function",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				210,
																				213
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 146,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L146"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 214,
													"name": "pre",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The namespace prefix; "
															},
															{
																"kind": "code",
																"text": "`preDef`"
															},
															{
																"kind": "text",
																"text": " by default."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 158,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L158"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 215,
													"name": "vert",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The step vertex shader "
															},
															{
																"kind": "code",
																"text": "`GLSL`"
															},
															{
																"kind": "text",
																"text": "; a\n  simple flat screen shader if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 159,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L159"
														},
														{
															"fileName": "step.js",
															"line": 170,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L170"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 216,
													"name": "frag",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The step fragment shader "
															},
															{
																"kind": "code",
																"text": "`GLSL`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 161,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L161"
														},
														{
															"fileName": "step.js",
															"line": 173,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L173"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 217,
													"name": "uniforms",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The step uniforms;\n  modifies any given. See "
															},
															{
																"kind": "code",
																"text": "`toUniforms`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 162,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L162"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 218,
													"name": "positions",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The step position\n  "
															},
															{
																"kind": "code",
																"text": "`attribute`"
															},
															{
																"kind": "text",
																"text": "s; 3 points of a large flat triangle if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 164,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L164"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 219,
													"name": "count",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": " of\n  elements/"
															},
															{
																"kind": "code",
																"text": "`attribute`"
															},
															{
																"kind": "text",
																"text": "s to draw."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 166,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L166"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 220,
													"name": "pipeline",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " command properties to mix in\n  overriding those ones added here; all passed to "
															},
															{
																"kind": "code",
																"text": "`api.command`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 168,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L168"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 221,
													"name": "verts",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Preprocesses and caches vertex "
															},
															{
																"kind": "code",
																"text": "`GLSL`"
															},
															{
																"kind": "text",
																"text": "\n  code per-pass if given, otherwise processes just-in-time before each pass."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 171,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L171"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												},
												{
													"id": 222,
													"name": "frags",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Preprocesses and caches fragment "
															},
															{
																"kind": "code",
																"text": "`GLSL`"
															},
															{
																"kind": "text",
																"text": "\n  code per-pass, otherwise processes just-in-time before each pass."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 174,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L174"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "string"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														205,
														208,
														214,
														215,
														216,
														217,
														218,
														219,
														220,
														221,
														222
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 140,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L140"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 223,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to set up. Modifies the given "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": "\n  "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "state"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 236,
					"name": "onStep",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback upon each step.\n\n**See**\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "toStep",
								"target": 196,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "state.framebuffer"
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\n- A "
							},
							{
								"kind": "code",
								"text": "`stepProps`"
							},
							{
								"kind": "text",
								"text": " object to use for each of the step's next passes; or\n  "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "ish to use the given "
							},
							{
								"kind": "code",
								"text": "`props`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 314,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L314"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 237,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "step.js",
									"line": 314,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L314"
								}
							],
							"signatures": [
								{
									"id": 238,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 239,
											"name": "props",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`props`"
													},
													{
														"kind": "text",
														"text": " passed to "
													},
													{
														"kind": "code",
														"text": "`run`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 240,
											"name": "step",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "s for "
													},
													{
														"kind": "code",
														"text": "`props.stepNow`"
													},
													{
														"kind": "text",
														"text": " from\n  "
													},
													{
														"kind": "code",
														"text": "`props.steps`"
													},
													{
														"kind": "text",
														"text": ", where the next state step will be drawn. See "
													},
													{
														"kind": "code",
														"text": "`toData`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "",
														"qualifiedName": "framebuffer"
													},
													"name": "framebuffer"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							]
						}
					}
				},
				{
					"id": 241,
					"name": "onPass",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Callback upon each pass.\n\n**See**\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "toStep",
								"target": 196,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "maps.mapGroups",
								"target": 58
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\n- A "
							},
							{
								"kind": "code",
								"text": "`passProps`"
							},
							{
								"kind": "text",
								"text": " object to use for the render "
							},
							{
								"kind": "code",
								"text": "`command`"
							},
							{
								"kind": "text",
								"text": " call; or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": "ish to\n  use the given "
							},
							{
								"kind": "code",
								"text": "`stepProps`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 337,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L337"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 242,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "step.js",
									"line": 337,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L337"
								}
							],
							"signatures": [
								{
									"id": 243,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 244,
											"name": "stepProps",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`props`"
													},
													{
														"kind": "text",
														"text": " passed to "
													},
													{
														"kind": "code",
														"text": "`run`"
													},
													{
														"kind": "text",
														"text": " via any "
													},
													{
														"kind": "code",
														"text": "`onStep`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 245,
											"name": "pass",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maps for the next pass. See "
													},
													{
														"kind": "code",
														"text": "`mapGroups`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							]
						}
					}
				},
				{
					"id": 246,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 392,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L392"
						}
					],
					"target": 196
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						246
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						236,
						241
					]
				},
				{
					"title": "Functions",
					"children": [
						224,
						231,
						186,
						196
					]
				}
			],
			"sources": [
				{
					"fileName": "step.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/step.js#L1"
				}
			]
		},
		{
			"id": 350,
			"name": "uniforms",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " inputs for "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " "
					},
					{
						"kind": "code",
						"text": "`uniform`"
					},
					{
						"kind": "text",
						"text": "s."
					}
				]
			},
			"children": [
				{
					"id": 351,
					"name": "toUniforms",
					"variant": "declaration",
					"kind": 64,
					"flags": {},
					"sources": [
						{
							"fileName": "uniforms.js",
							"line": 148,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L148"
						}
					],
					"signatures": [
						{
							"id": 352,
							"name": "toUniforms",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets up "
									},
									{
										"kind": "code",
										"text": "`GL`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`uniform`"
									},
									{
										"kind": "text",
										"text": " inputs for "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " calls, such as in "
									},
									{
										"kind": "code",
										"text": "`toStep`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`uniform`"
									},
									{
										"kind": "text",
										"text": "s are defined as callback hooks to be called on each render pass\nwith global context and local state "
									},
									{
										"kind": "code",
										"text": "`object`"
									},
									{
										"kind": "text",
										"text": "s, allowing the use of different\n"
									},
									{
										"kind": "code",
										"text": "`GL`"
									},
									{
										"kind": "text",
										"text": " APIs or author-defined hooks.\n\nHandles inputs of states as "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "s of data-"
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s, or merged into one\ndata-"
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "; for "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "s of "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s, this arranges them on each step\nso "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " can dynamically sample the flattened "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": " of "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s by a\nconstant step index; otherwise the single merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " is bound once, and\n"
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " can use a dynamic step index to sample states."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"name": "```javascript\nconst state = { pre: '', steps: 2, maps: mapStep({ values: [1, 2, 3] }) };\nconst api = {};\n\ntoUniforms(toData(api, { ...state, merge: false }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Separate state data-`texture`s in an `array` (e.g: `sampler2D[]`).\n  // State data-`texture`s for the 1st step ago, not bound as outputs.\n  'states[0]': (context, state) => {},\n  'states[1]': (context, state) => {},\n  // Merged `texture` not used.\n  states: (context, state) => null\n};\n\ntoUniforms(toData(api, { ...state, steps: 3, merge: false }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Separate state data-`texture`s in an `array` (e.g: `sampler2D[]`).\n  // State data-`texture`s for the 1st step ago, not bound as outputs.\n  'states[0]': (context, state) => {},\n  'states[1]': (context, state) => {}\n  // State data-`texture`s for the 2nd step ago, not bound as outputs.\n  'states[2]': (context, state) => {},\n  'states[3]': (context, state) => {},\n  // Merged `texture` not used.\n  states: (context, state) => null\n};\n\ntoUniforms(toData(api, { ...state, merge: true }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Merged states in one data-`texture` upon every pass (e.g: `sampler2D`,\n  // or `sampler3D`/`sampler2DArray` where supported).\n  states: (context, state) => {},\n  // Separate data-`texture`s not used.\n  'states[0]': (context, state) => null,\n  'states[1]': (context, state) => null\n};\n```",
										"content": []
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "step.toStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "data.toData",
												"target": 120
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "maps.mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroSamples",
												"target": 438
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macros.macroTaps",
												"target": 442
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"sources": [
								{
									"fileName": "uniforms.js",
									"line": 148,
									"character": 16,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L148"
								}
							],
							"parameters": [
								{
									"id": 353,
									"name": "state",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state. See "
											},
											{
												"kind": "code",
												"text": "`toData`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 354,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 355,
													"name": "steps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of steps, or number of steps.\n  See "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 81,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L81"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												},
												{
													"id": 356,
													"name": "maps",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped into\n  data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s (per-pass per-step). See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 83,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L83"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 357,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 358,
																	"name": "textures",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 83,
																			"character": 12,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L83"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		358
																	]
																}
															],
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 83,
																	"character": 11,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L83"
																}
															]
														}
													}
												},
												{
													"id": 359,
													"name": "pre",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Namespace prefix; "
															},
															{
																"kind": "code",
																"text": "`preDef`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 85,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L85"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 360,
													"name": "merge",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any merged state "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": ";\n  uses separate state data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s if not given. See "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 86,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L86"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 361,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 362,
																			"name": "all",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 86,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L86"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 363,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 364,
																							"name": "texture",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 86,
																									"character": 18,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L86"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								364
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 86,
																							"character": 17,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L86"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				362
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 86,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L86"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 365,
													"name": "size",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any size of\n  "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s (as "
															},
															{
																"kind": "code",
																"text": "`vec2(width, height)`"
															},
															{
																"kind": "text",
																"text": "); with:\n  - "
															},
															{
																"kind": "code",
																"text": "`shape`"
															},
															{
																"kind": "text",
																"text": ": Any "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " shape.\n  - "
															},
															{
																"kind": "code",
																"text": "`merge.shape`"
															},
															{
																"kind": "text",
																"text": ": Any merged "
															},
															{
																"kind": "code",
																"text": "`states`"
															},
															{
																"kind": "text",
																"text": " shape, otherwise "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " shape.\n\n  See "
															},
															{
																"kind": "code",
																"text": "`toData`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 89,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 366,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 367,
																			"name": "shape",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 89,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		},
																		{
																			"id": 368,
																			"name": "merge",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 89,
																					"character": 28,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 369,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"children": [
																						{
																							"id": 370,
																							"name": "shape",
																							"variant": "declaration",
																							"kind": 1024,
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 89,
																									"character": 36,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
																								}
																							],
																							"type": {
																								"type": "array",
																								"elementType": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								370
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 89,
																							"character": 35,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				367,
																				368
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 89,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L89"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 371,
													"name": "bound",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Number of steps bound for output, not\n  used for input; for platforms preventing read/write of the same "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 96,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L96"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 372,
													"name": "uniforms",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": " to merge the new\n  "
															},
															{
																"kind": "code",
																"text": "`uniforms`"
															},
															{
																"kind": "text",
																"text": " into. See "
															},
															{
																"kind": "code",
																"text": "`to`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 98,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L98"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														355,
														356,
														359,
														360,
														365,
														371,
														372
													]
												}
											],
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 81,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L81"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 373,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the\n  "
											},
											{
												"kind": "code",
												"text": "`uniform`"
											},
											{
												"kind": "text",
												"text": " hooks; modifies any "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": ", or a new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " if not\n  given. See "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`uniforms`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 374,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 375,
											"name": "stepNow",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 105,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L105"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 376,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 105,
															"character": 15,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L105"
														}
													],
													"signatures": [
														{
															"id": 377,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 105,
																	"character": 15,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L105"
																}
															],
															"parameters": [
																{
																	"id": 378,
																	"name": "c",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 379,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 380,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 381,
																					"name": "stepNow",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 105,
																							"character": 25,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L105"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						381
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 105,
																					"character": 24,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L105"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													]
												}
											}
										},
										{
											"id": 382,
											"name": "stateShape",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 106,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 383,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 106,
															"character": 18,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
														}
													],
													"signatures": [
														{
															"id": 384,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 106,
																	"character": 18,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
																}
															],
															"parameters": [
																{
																	"id": 385,
																	"name": "c",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 386,
																	"name": "state",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 387,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 388,
																					"name": "size",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 106,
																							"character": 28,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 389,
																							"name": "__type",
																							"variant": "declaration",
																							"kind": 65536,
																							"flags": {},
																							"children": [
																								{
																									"id": 390,
																									"name": "number",
																									"variant": "declaration",
																									"kind": 1024,
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "uniforms.js",
																											"line": 106,
																											"character": 34,
																											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										390
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 106,
																									"character": 33,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						388
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 106,
																					"character": 27,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L106"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 391,
											"name": "viewShape",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 107,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L107"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 392,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 107,
															"character": 17,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L107"
														}
													],
													"signatures": [
														{
															"id": 393,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 107,
																	"character": 17,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L107"
																}
															],
															"parameters": [
																{
																	"id": 394,
																	"name": "context",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 395,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 396,
																					"name": "drawingBufferWidth",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 108,
																							"character": 18,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L108"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 397,
																					"name": "drawingBufferHeight",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 108,
																							"character": 44,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L108"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						396,
																						397
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 108,
																					"character": 17,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L108"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 398,
																	"name": "s",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 399,
											"name": "states",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 110,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L110"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 400,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 110,
															"character": 14,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L110"
														}
													],
													"signatures": [
														{
															"id": 401,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 110,
																	"character": 14,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L110"
																}
															],
															"type": {
																"type": "tuple"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												375,
												382,
												391,
												399
											]
										}
									],
									"sources": [
										{
											"fileName": "uniforms.js",
											"line": 104,
											"character": 13,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L104"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 402,
					"name": "getUniform",
					"variant": "declaration",
					"kind": 2097152,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`function`"
							},
							{
								"kind": "text",
								"text": " hook to update a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`uniform`"
							},
							{
								"kind": "text",
								"text": " value for a render pass.\n\n**See**\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "toUniforms",
								"target": 351,
								"tsLinkText": ""
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "data.toData",
								"target": 120
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "api.texture",
								"target": 283
							},
							{
								"kind": "text",
								"text": "\n\n**Returns**\nA "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " uniform to be bound via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " API."
							}
						]
					},
					"sources": [
						{
							"fileName": "uniforms.js",
							"line": 199,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L199"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 403,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "uniforms.js",
									"line": 199,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L199"
								}
							],
							"signatures": [
								{
									"id": 404,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 405,
											"name": "context",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "General or global properties; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`drawingBufferWidth`"
													},
													{
														"kind": "text",
														"text": ": Current "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " viewport width in pixels.\n  - "
													},
													{
														"kind": "code",
														"text": "`drawingBufferHeight`"
													},
													{
														"kind": "text",
														"text": ": Current "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " viewport height in pixels."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 406,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 407,
															"name": "drawingBufferWidth",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 211,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L211"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 408,
															"name": "drawingBufferHeight",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 212,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L212"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																407,
																408
															]
														}
													],
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 210,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L210"
														}
													]
												}
											}
										},
										{
											"id": 409,
											"name": "state",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Local properties (the "
													},
													{
														"kind": "code",
														"text": "`gpgpu`"
													},
													{
														"kind": "text",
														"text": " state); with:\n  - "
													},
													{
														"kind": "code",
														"text": "`stepNow`"
													},
													{
														"kind": "text",
														"text": ": The current step of the "
													},
													{
														"kind": "code",
														"text": "`gpgpu`"
													},
													{
														"kind": "text",
														"text": " state.\n  - "
													},
													{
														"kind": "code",
														"text": "`bound`"
													},
													{
														"kind": "text",
														"text": ": Number of steps bound to output; can't be bound as inputs.\n  - "
													},
													{
														"kind": "code",
														"text": "`merge`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`object`"
													},
													{
														"kind": "text",
														"text": " containing merged data-"
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ".\n    - "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ": Any merged data-"
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`textures`"
													},
													{
														"kind": "text",
														"text": ": Textures per-step, as "
													},
													{
														"kind": "code",
														"text": "`array`"
													},
													{
														"kind": "text",
														"text": "s of "
													},
													{
														"kind": "code",
														"text": "`object`"
													},
													{
														"kind": "text",
														"text": "s with a "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "\n    property. See "
													},
													{
														"kind": "code",
														"text": "`toData`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 410,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 411,
															"name": "stepNow",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 218,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L218"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 412,
															"name": "bound",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 219,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L219"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 413,
															"name": "merge",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 220,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L220"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 414,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 415,
																			"name": "texture",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 220,
																					"character": 15,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L220"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "object"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				415
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 220,
																			"character": 14,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L220"
																		}
																	]
																}
															}
														},
														{
															"id": 416,
															"name": "textures",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 221,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L221"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "array",
																	"elementType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 417,
																			"name": "__type",
																			"variant": "declaration",
																			"kind": 65536,
																			"flags": {},
																			"children": [
																				{
																					"id": 418,
																					"name": "texture",
																					"variant": "declaration",
																					"kind": 1024,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 221,
																							"character": 17,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L221"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "object"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						418
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 221,
																					"character": 16,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L221"
																				}
																			]
																		}
																	}
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																411,
																412,
																413,
																416
															]
														}
													],
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 217,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L217"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "",
													"qualifiedName": "texture"
												},
												"name": "texture"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						402
					]
				},
				{
					"title": "Functions",
					"children": [
						351
					]
				}
			],
			"sources": [
				{
					"fileName": "uniforms.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/uniforms.js#L1"
				}
			]
		},
		{
			"id": 36,
			"name": "util/remain-div.glsl",
			"variant": "declaration",
			"kind": 2,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./remain-div.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 37,
					"name": "glsl",
					"variant": "declaration",
					"kind": 32,
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./remain-div.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "util/remain-div.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/util/remain-div.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 38,
					"name": "default",
					"variant": "reference",
					"kind": 4194304,
					"flags": {},
					"sources": [
						{
							"fileName": "util/remain-div.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/util/remain-div.glsl.js#L17"
						}
					],
					"target": 37
				}
			],
			"groups": [
				{
					"title": "References",
					"children": [
						38
					]
				},
				{
					"title": "Variables",
					"children": [
						37
					]
				}
			],
			"categories": [
				{
					"title": "GLSL",
					"children": [
						37
					]
				},
				{
					"title": "Other",
					"children": [
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "util/remain-div.glsl.js",
					"line": 1,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/c634c283de944e443c802d5d6a0a2dab077fe3ac/src/util/remain-div.glsl.js#L1"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				247,
				147,
				119,
				49,
				39,
				42,
				92,
				116,
				110,
				113,
				419,
				52,
				1,
				185,
				350,
				36
			]
		}
	],
	"categories": [
		{
			"title": "Root",
			"children": [
				92
			]
		},
		{
			"title": "API Hooks",
			"children": [
				247
			]
		},
		{
			"title": "GLSL",
			"children": [
				49,
				39,
				116,
				110,
				113,
				36
			]
		},
		{
			"title": "JS",
			"children": [
				147,
				119,
				42,
				92,
				419,
				52,
				1,
				185,
				350
			]
		}
	],
	"packageName": "@epok.tech/gl-gpgpu",
	"packageVersion": "0.8.61",
	"readme": [
		{
			"kind": "text",
			"text": "# "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": "\n\n[![GPGPU particles demo]("
		},
		{
			"kind": "relative-link",
			"text": "media/demo-particles-regl-frames.png",
			"target": 17
		},
		{
			"kind": "text",
			"text": ")](https://epok.tech/gl-gpgpu \"GPGPU demo, particles with "
		},
		{
			"kind": "code",
			"text": "`regl`"
		},
		{
			"kind": "text",
			"text": "\")\n\n[GPGPU state-stepping](#gpgpu-state-stepping) - declaratively maps optimal draw passes, shaders, "
		},
		{
			"kind": "code",
			"text": "`GL`"
		},
		{
			"kind": "text",
			"text": " resources, inputs, outputs - lets you focus on your logic, [BYO-renderer](#byo-renderer).\n\n## Warning: Documentation Work-in-Progress\n\nNote that the [comments and _API_ documentation](https://epok.tech/gl-gpgpu/api) are currently still work-in-progress and may differ from the code; but the code is in working order.\n\n## Installation\n\nInstall from ["
		},
		{
			"kind": "code",
			"text": "`npm`"
		},
		{
			"kind": "text",
			"text": "](https://www.npmjs.com/package/@epok.tech/gl-gpgpu) using:\n"
		},
		{
			"kind": "code",
			"text": "```bash\nnpm install @epok.tech/gl-gpgpu\n```"
		},
		{
			"kind": "text",
			"text": "\nor:\n"
		},
		{
			"kind": "code",
			"text": "```bash\nyarn add @epok.tech/gl-gpgpu\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Usage\n\n[See the demo](https://epok.tech/gl-gpgpu) and [its source code](https://github.com/keeffEoghan/gl-gpgpu/tree/master/demo/particles-regl) or [video](https://youtu.be/ddt3YA2J1ys) - below is shown a [partial example of GPGPU logic setup](#partial-example), and a [diagram of the project source code](#diagram).\n\n[See the _API_ documentation](https://epok.tech/gl-gpgpu/api) for a fuller guide.\n\nThe code can be imported according to format specified as:\n- ["
		},
		{
			"kind": "code",
			"text": "`CommonJS`"
		},
		{
			"kind": "text",
			"text": "](https://en.wikipedia.org/wiki/CommonJS), for "
		},
		{
			"kind": "code",
			"text": "`require`"
		},
		{
			"kind": "text",
			"text": ", in "
		},
		{
			"kind": "code",
			"text": "`cjs/`"
		},
		{
			"kind": "text",
			"text": "; e.g: "
		},
		{
			"kind": "code",
			"text": "`const { mapStep } = require('@epok.tech/gl-gpgpu/cjs/maps')`"
		},
		{
			"kind": "text",
			"text": ".\n- ["
		},
		{
			"kind": "code",
			"text": "`ES`"
		},
		{
			"kind": "text",
			"text": " modules](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules), for "
		},
		{
			"kind": "code",
			"text": "`import`"
		},
		{
			"kind": "text",
			"text": ", in "
		},
		{
			"kind": "code",
			"text": "`esm/`"
		},
		{
			"kind": "text",
			"text": "; e.g: "
		},
		{
			"kind": "code",
			"text": "`import { toStep } from '@epok.tech/gl-gpgpu/esm/step'`"
		},
		{
			"kind": "text",
			"text": ".\n- Source code, for compiling with your own tools, in "
		},
		{
			"kind": "code",
			"text": "`src/`"
		},
		{
			"kind": "text",
			"text": "; e.g: "
		},
		{
			"kind": "code",
			"text": "`#pragma glslify: indexUV = require(@epok.tech/gl-gpgpu/src/lookup/index-uv)`"
		},
		{
			"kind": "text",
			"text": ".\n- Demo code, for the browser, in "
		},
		{
			"kind": "code",
			"text": "`demo/`"
		},
		{
			"kind": "text",
			"text": ".\n\nIf your tools support ["
		},
		{
			"kind": "code",
			"text": "`Node`"
		},
		{
			"kind": "text",
			"text": " conditional exports](https://nodejs.org/docs/latest-v16.x/api/packages.html#conditional-exports), they should automatically handle importing code built for the import format used, for shorter paths:\n- "
		},
		{
			"kind": "code",
			"text": "`CommonJS`"
		},
		{
			"kind": "text",
			"text": " when "
		},
		{
			"kind": "code",
			"text": "`require`"
		},
		{
			"kind": "text",
			"text": " is used; e.g: "
		},
		{
			"kind": "code",
			"text": "`const { mapStep } = require('@epok.tech/gl-gpgpu/maps')`"
		},
		{
			"kind": "text",
			"text": ".\n- "
		},
		{
			"kind": "code",
			"text": "`ES`"
		},
		{
			"kind": "text",
			"text": " modules when "
		},
		{
			"kind": "code",
			"text": "`import`"
		},
		{
			"kind": "text",
			"text": " is used; e.g: "
		},
		{
			"kind": "code",
			"text": "`import { toStep } from '@epok.tech/gl-gpgpu/step'`"
		},
		{
			"kind": "text",
			"text": ".\n\n## GPGPU State-Stepping\n\n[GPGPU (General-Purpose Graphics Processing Unit)](https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units) methods typically use textures as 2D (or 3D) memory buffers to perform arbitrary computation on the highly-parallel GPU in shaders.\n\nThis involves reading existing states from past buffers, writing new states into the next buffers, and keeping track of the mappings of each piece of data in memory.\n\nWhen the variety of capabilities across myriad devices also comes into play, managing and mapping logic optimally across the available resources on each platform quickly becomes an arduous plumbing task - "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " aims to handle all this work for you.\n\nGiven a simple description of your logic and the platform's capabilities, "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " creates [easily-customisable](#customisable-components) mappings and resources which allow your logic to run optimally:\n- Logic is declaratively described as state values, and how new states derive from past states.\n- Resources are given from the "
		},
		{
			"kind": "code",
			"text": "`GL`"
		},
		{
			"kind": "text",
			"text": " _API_ or library you use, making best use of each platform's capabilities to run your logic in as few passes and lookups as possible.\n\nYou are left free to focus on your logic, using "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " macro flags and shader inputs and outputs (all safely and customisably namespaced), which allow you to easily:\n- Split your code into separate concerns, executed for you in as few passes as possible.\n- Look up and store states, rearranged for you into as few reads and writes as possible.\n\nThe "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " mappings make a good, flexible base upon which to build complex and expressive GPGPU processes and abstractions, without getting mired in low-level resource management.\n\n## BYO-Renderer\n\n_Bring Your Own Renderer_ to use with "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": ", which can hook into any given "
		},
		{
			"kind": "code",
			"text": "`GL`"
		},
		{
			"kind": "text",
			"text": " renderer _API_ for easy compatibility.\n\nTo handle resource creation and rendering, pass an _API_ object for the needed hooks - parameters match the functional ["
		},
		{
			"kind": "code",
			"text": "`regl`"
		},
		{
			"kind": "text",
			"text": " _API_](https://github.com/regl-project/regl/), but you may mix in whatever tools you like by providing hook functions which provide compatible responses.\n\nAmple descriptive metadata and information are provided to your hooks, while assumptions or alterations of their responses are avoided - so you can connect "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " to the underlying graphics implementation however you wish.\n\n## Customisable Components\n\nAll "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " modules may be used in the given main process structure, or imported and used piecemeal, or overridden via the state properties.\n\nMany configurations and hooks are provided into each part of the process.\n\nThis offers a deeply-customisable _API_, with few constraints, assumptions, or opinions of how to structure your code.\n\n## Constant or Arbitrary Lookups\n\nChoose to use distinct data textures for each part of state, or merge all states into one data texture upon each pass - depending on whether you want to look up states arbitrarily or by constant expressions (respectively), and platform capabilities and performance considerations.\n\n## GL Versions\n\nThis technique is best-suited to "
		},
		{
			"kind": "code",
			"text": "`WebGL1`"
		},
		{
			"kind": "text",
			"text": ".\n\nIt's compatible with "
		},
		{
			"kind": "code",
			"text": "`WebGL2`"
		},
		{
			"kind": "text",
			"text": " too, including the "
		},
		{
			"kind": "code",
			"text": "`sampler3D`"
		},
		{
			"kind": "text",
			"text": " and "
		},
		{
			"kind": "code",
			"text": "`sampler2DArray`"
		},
		{
			"kind": "text",
			"text": " types, as well as the usual "
		},
		{
			"kind": "code",
			"text": "`sampler2D`"
		},
		{
			"kind": "text",
			"text": " - however, [transform-feedback handles similar features natively](https://webgl2fundamentals.org/webgl/lessons/webgl-gpgpu.html#first-example-particles) using "
		},
		{
			"kind": "code",
			"text": "`buffer`"
		},
		{
			"kind": "text",
			"text": "s rather than "
		},
		{
			"kind": "code",
			"text": "`texture`"
		},
		{
			"kind": "text",
			"text": "s, a better option in most cases - so it's usually better to check the "
		},
		{
			"kind": "code",
			"text": "`GL`"
		},
		{
			"kind": "text",
			"text": " version to use either a "
		},
		{
			"kind": "code",
			"text": "`gl-gpgpu`"
		},
		{
			"kind": "text",
			"text": " or a "
		},
		{
			"kind": "code",
			"text": "`WebGL2`"
		},
		{
			"kind": "text",
			"text": " transform-feedback implementation.\n\nIt may also be compatible with other "
		},
		{
			"kind": "code",
			"text": "`GL`"
		},
		{
			"kind": "text",
			"text": " implementations via given _API_ hooks.\n\n## Partial Example\n\nA partial example of GPGPU logic setup - [see above for a more complete example](#usage).\n\n"
		},
		{
			"kind": "code",
			"text": "`JavaScript`"
		},
		{
			"kind": "text",
			"text": " setup "
		},
		{
			"kind": "code",
			"text": "`index.js`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```javascript\n// The main `gl-gpgpu` module.\nimport gpgpu from '@epok.tech/gl-gpgpu';\n\n// Import a renderer API to handle `gl-gpgpu` hooks - see `./src/api.js`.\nimport api from '...';\n\n// Import the step logic fragment shader, shown below.\nimport frag from 'step.frag.glsl';\n\n// The main `gl-gpgpu` state.\nconst state = gpgpu(api, {\n  // How many steps of state to track.\n  steps: 3,\n  // Logic given as state `values`, `gl-gpgpu` maps optimal inputs and outputs.\n  maps: {\n    // How many state `values` (channels) are tracked independently of others.\n    // The order here is the order used in the shaders and generated macros, but\n    // for optimal lookups may be `packed` into channels/textures/passes\n    // differently.\n    values: [\n      // Position value, uses 3 channels.\n      3,\n      // Motion value, uses 3 channels.\n      3,\n      // Life value, uses 1 channel.\n      1\n    ],\n    // Map how next output `values` derive from any past input `values`.\n    // Top-level `array` any next output `values` by index.\n    derives: [\n      // Next `position` state `values` derive from past state `values`:\n      [\n        // `position`, 2nd `step` past.\n        { value: 1, step: 1 },\n        // `position`, 1st `step` past.\n        0,\n        // `motion`, 1st `step` past.\n        1,\n        // `life`, 1st `step` past.\n        2\n      ],\n      // Next `motion` state `values` derive from past state `values`:\n      [\n        // `motion`, 1st `step` past.\n        1,\n        // `life`, 1st `step` past.\n        2,\n        // `position`, 1st `step` past.\n        0\n      ],\n      // Next `life` state `values` derive from past state `values`:\n      [\n        // `life`, farthest `step` past.\n        { value: 1, step: 2 },\n        // `life`, 1st `step` past.\n        2\n      ]\n    ]\n  },\n  // How many states are bound to frame-buffer outputs at any step.\n  bound: 1,\n  // How many `entries` to track, here encoded as the power-of-2 size per side\n  // of the data texture: `(2**scale)**2`; can also be given in other ways.\n  scale: 10,\n  // Data type according to platform capabilities.\n  type: 'float',\n  // Configure macro hooks, globally or per-shader.\n  macros: {\n    // No `macros` needed for the `vert` shader; all other `macros` generated.\n    vert: false\n  },\n  // A fragment shader to compute each state step, with `gl-gpgpu` `macros`.\n  // Vertex shaders can also be given.\n  frag,\n  // Cache in `frags` all `macros` prepended to `frag` shader per-pass.\n  frags: [],\n  // Custom `uniforms` to be passed to shaders, with those `gl-gpgpu` mixes in.\n  uniforms: {}\n});\n\n// Output of this example test:\n\nconst s = JSON.stringify;\n\n// How `values` are `packed` to fit texture channels efficiently.\n// `values` (numbers of channels used together):\ns(state.maps.values) === s([3, 3, 1]);\n// `packed` (if any, indexes `values`):\ns(state.maps.packed) === s([0, 2, 1]);\n// `textures` (indexes `values` via any `packed` or directly):\ns(state.maps.textures) === s([[0, 2], [1]]);\n// `valueToTexture` (indexes `textures` via `value` index):\ns(state.maps.valueToTexture) === s([0, 1, 0]);\n\n// `entries` (total number of states of `values` updated per-step):\n((state.size.entries === 1048576) &&\n  (state.size.entries === (2**10)**2) &&\n  (state.size.entries === (2**state.scale)**2) &&\n  (state.size.entries === state.size.width*state.size.height));\n\n// Compute the next step of state.\nstate.step();\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "`GLSL`"
		},
		{
			"kind": "text",
			"text": " fragment shader logic "
		},
		{
			"kind": "code",
			"text": "`step.frag.glsl`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```glsl\nprecision highp float;\n\n// Setting up the macros and aliases `gl-gpgpu` provides.\n\n// Note these `texture_${value}`/`channels_${value}`/`reads_${value}_${derive}`\n// indexes correspond to the `values` indexes via `gl-gpgpu`'s `array`s\n// `values`/`derives`; they're redefined here to match the structure with names.\n\n// The texture channels each of the `values` is stored in.\n#define positionChannels gpgpu_channels_0\n#define motionChannels gpgpu_channels_1\n#define lifeChannels gpgpu_channels_2\n\n// Set up sampling logic via `gl-gpgpu` macro.\ngpgpu_useSamples\n\n// Set up minimal texture reads logic; only read what a value with a currently\n// bound output `derives` from other `values` for its next state.\n// See `derives` for how each `reads_${value}_${derive}` is indexed\n// per-`derive`-per-`value`.\n#ifdef output_0\n  #define positionOutput gpgpu_output_0\n  gpgpu_useReads_0\n  #define positionReadPosition0 gpgpu_reads_0_0\n  #define positionReadPosition1 gpgpu_reads_0_1\n  #define positionReadMotion gpgpu_reads_0_2\n  #define positionReadLife gpgpu_reads_0_3\n#endif\n#ifdef output_1\n  #define motionOutput gpgpu_output_1\n  gpgpu_useReads_1\n  #define motionReadMotion gpgpu_reads_1_0\n  #define motionReadLife gpgpu_reads_1_1\n  #define motionReadPosition gpgpu_reads_1_2\n#endif\n#ifdef output_2\n  #define lifeOutput gpgpu_output_2\n  gpgpu_useReads_2\n  #define lifeReadLifeLast gpgpu_reads_2_0\n  #define lifeReadLife1 gpgpu_reads_2_1\n#endif\n\n// The main shader.\n\n/** States from `gl-gpgpu`, merged or separate. */\n#ifdef gpgpu_mergedStates\n  /** States from `gl-gpgpu` in one merged `texture`. */\n  uniform sampler2D gpgpu_states;\n#else\n  /** States from `gl-gpgpu` in separate `texture`/s. */\n  uniform sampler2D gpgpu_states[gpgpu_stepsPast*gpgpu_textures];\n#endif\n\n/** Current step from `gl-gpgpu`; needed for `tapStates` or `tapStatesBy`. */\nuniform float gpgpu_stepNow;\n\n// Any custom input logic...\n\nvoid main() {\n  /** Sample the desired state values - creates the `gpgpu_data` `array`. */\n  gpgpu_tapState(uv)\n\n  // Read values.\n\n  #ifdef positionOutput\n    vec3 position0 = gpgpu_data[positionReadPosition0].positionChannels;\n  #endif\n\n  // If reads all map to the same value sample, any of them will do.\n  #if defined(positionOutput) || defined(motionOutput)\n    #if defined(positionOutput)\n      #define readMotion positionReadMotion\n      #define readPosition positionReadPosition1\n    #elif defined(motionOutput)\n      #define readMotion motionReadMotion\n      #define readPosition motionReadPosition\n    #endif\n\n    vec3 position1 = gpgpu_data[readPosition].positionChannels;\n    vec3 motion = gpgpu_data[readMotion].motionChannels;\n  #endif\n\n  // If reads all map to the same value sample, any of them will do.\n  #if defined(positionOutput)\n    #define readLife positionReadLife\n  #elif defined(lifeOutput)\n    #define readLife lifeReadLife\n  #elif defined(motionOutput)\n    #define readLife motionReadLife\n  #endif\n\n  float life = gpgpu_data[readLife].lifeChannels;\n\n  #ifdef lifeOutput\n    float lifeLast = gpgpu_data[lifeReadLifeLast].lifeChannels;\n  #endif\n\n  // Update and output values.\n  // Note that the update/output logic components within each `#if` macro\n  // block from `gpgpu` are independent modules, as the `gpgpu` macros\n  // determine whether they're executed across one or more passes - they could\n  // also be coded in separate files called from here, however they're coded\n  // inline here for brevity, relevance, and easy access to shared variables.\n  #ifdef positionOutput\n    // Any custom position logic...\n\n    // Output the next position value to its channels in the state texture.\n    positionOutput = vec3();\n  #endif\n  #ifdef motionOutput\n    // Any custom motion logic...\n\n    // Output the next motion value to its channels in the state texture.\n    motionOutput = vec3();\n  #endif\n  #ifdef lifeOutput\n    // Any custom life logic...\n\n    // Output the next life value to its channels in the state texture.\n    lifeOutput = float();\n  #endif\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Diagram\n\n![Visualization of the codebase]("
		},
		{
			"kind": "relative-link",
			"text": "media/diagram.svg",
			"target": 18
		},
		{
			"kind": "text",
			"text": ")"
		}
	],
	"symbolIdMap": {
		"1": {
			"sourceFileName": "src/size.js",
			"qualifiedName": ""
		},
		"2": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getWidth"
		},
		"3": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getWidth"
		},
		"4": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "value"
		},
		"5": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type"
		},
		"6": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.width"
		},
		"7": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.w"
		},
		"8": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.x"
		},
		"9": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.shape"
		},
		"10": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.size"
		},
		"11": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.side"
		},
		"12": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.ʼ0ʼ"
		},
		"13": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getHeight"
		},
		"14": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getHeight"
		},
		"15": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "value"
		},
		"16": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.height"
		},
		"18": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.h"
		},
		"19": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.y"
		},
		"20": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.shape"
		},
		"21": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.size"
		},
		"22": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.side"
		},
		"23": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.ʼ1ʼ"
		},
		"24": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "countDrawEntries"
		},
		"25": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "countDrawEntries"
		},
		"26": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "size"
		},
		"27": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type"
		},
		"28": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "__type.entries"
		},
		"29": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "height"
		},
		"30": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getDrawIndexes"
		},
		"31": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getDrawIndexes"
		},
		"32": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "size"
		},
		"33": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getScaled"
		},
		"34": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "getScaled"
		},
		"35": {
			"sourceFileName": "src/size.js",
			"qualifiedName": "scale"
		},
		"36": {
			"sourceFileName": "src/util/remain-div.glsl.js",
			"qualifiedName": ""
		},
		"37": {
			"sourceFileName": "src/util/remain-div.glsl.js",
			"qualifiedName": "glsl"
		},
		"38": {
			"sourceFileName": "src/util/remain-div.glsl.js",
			"qualifiedName": "default"
		},
		"39": {
			"sourceFileName": "src/index-forms/index-states.glsl.js",
			"qualifiedName": ""
		},
		"40": {
			"sourceFileName": "src/index-forms/index-states.glsl.js",
			"qualifiedName": "glsl"
		},
		"41": {
			"sourceFileName": "src/index-forms/index-states.glsl.js",
			"qualifiedName": "default"
		},
		"42": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": ""
		},
		"43": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "indexForms"
		},
		"44": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "indexForms"
		},
		"45": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "states"
		},
		"46": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "form"
		},
		"47": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "count"
		},
		"48": {
			"sourceFileName": "src/index-forms/index.js",
			"qualifiedName": "default"
		},
		"49": {
			"sourceFileName": "src/index-forms/index-entries.glsl.js",
			"qualifiedName": ""
		},
		"50": {
			"sourceFileName": "src/index-forms/index-entries.glsl.js",
			"qualifiedName": "glsl"
		},
		"51": {
			"sourceFileName": "src/index-forms/index-entries.glsl.js",
			"qualifiedName": "default"
		},
		"52": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": ""
		},
		"53": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "packValues"
		},
		"54": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "packValues"
		},
		"55": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "values"
		},
		"56": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "channelsMax"
		},
		"57": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "to"
		},
		"58": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapGroups"
		},
		"59": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapGroups"
		},
		"60": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "maps"
		},
		"61": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.values"
		},
		"63": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.channelsMax"
		},
		"64": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.buffersMax"
		},
		"65": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.packed"
		},
		"66": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "to"
		},
		"67": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapSamples"
		},
		"68": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapSamples"
		},
		"69": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "maps"
		},
		"70": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type"
		},
		"71": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.derives"
		},
		"72": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.passes"
		},
		"73": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.textures"
		},
		"74": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.valueToTexture"
		},
		"75": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "to"
		},
		"76": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "validValue"
		},
		"77": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "validValue"
		},
		"78": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "value"
		},
		"79": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "channelsMax"
		},
		"80": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "useBuffers"
		},
		"81": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "useBuffers"
		},
		"82": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "buffersMax"
		},
		"83": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapStep"
		},
		"84": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "mapStep"
		},
		"85": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "maps"
		},
		"86": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "to"
		},
		"87": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "derive"
		},
		"88": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type"
		},
		"89": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.value"
		},
		"90": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "__type.step"
		},
		"91": {
			"sourceFileName": "src/maps.js",
			"qualifiedName": "default"
		},
		"92": {
			"sourceFileName": "src/index.js",
			"qualifiedName": ""
		},
		"93": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "gpgpu"
		},
		"94": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "gpgpu"
		},
		"95": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "api"
		},
		"96": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type"
		},
		"97": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type.limits"
		},
		"98": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type"
		},
		"99": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type.maxDrawbuffers"
		},
		"100": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "state"
		},
		"101": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type"
		},
		"102": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type.maps"
		},
		"103": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type"
		},
		"104": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "__type.buffersMax"
		},
		"105": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "to"
		},
		"106": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "getGLSL"
		},
		"107": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "getGLSL"
		},
		"108": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "version"
		},
		"109": {
			"sourceFileName": "src/index.js",
			"qualifiedName": "default"
		},
		"110": {
			"sourceFileName": "src/lookup/index-uv.glsl.js",
			"qualifiedName": ""
		},
		"111": {
			"sourceFileName": "src/lookup/index-uv.glsl.js",
			"qualifiedName": "glsl"
		},
		"112": {
			"sourceFileName": "src/lookup/index-uv.glsl.js",
			"qualifiedName": "default"
		},
		"113": {
			"sourceFileName": "src/lookup/offset-uv.glsl.js",
			"qualifiedName": ""
		},
		"114": {
			"sourceFileName": "src/lookup/offset-uv.glsl.js",
			"qualifiedName": "glsl"
		},
		"115": {
			"sourceFileName": "src/lookup/offset-uv.glsl.js",
			"qualifiedName": "default"
		},
		"116": {
			"sourceFileName": "src/index.vert.js",
			"qualifiedName": ""
		},
		"117": {
			"sourceFileName": "src/index.vert.js",
			"qualifiedName": "glsl"
		},
		"118": {
			"sourceFileName": "src/index.vert.js",
			"qualifiedName": "default"
		},
		"119": {
			"sourceFileName": "src/data.js",
			"qualifiedName": ""
		},
		"120": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "toData"
		},
		"121": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "toData"
		},
		"122": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__0"
		},
		"123": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type"
		},
		"124": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.texture"
		},
		"125": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.framebuffer"
		},
		"126": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "state"
		},
		"127": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type"
		},
		"128": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.width"
		},
		"129": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.w"
		},
		"130": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.x"
		},
		"131": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.ʼ0ʼ"
		},
		"132": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.height"
		},
		"133": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.h"
		},
		"134": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.y"
		},
		"135": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.ʼ1ʼ"
		},
		"136": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.shape"
		},
		"137": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.size"
		},
		"138": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.side"
		},
		"139": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.scale"
		},
		"140": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.steps"
		},
		"141": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.maps"
		},
		"142": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type"
		},
		"143": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.values"
		},
		"144": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "__type.channelsMin"
		},
		"145": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "to"
		},
		"146": {
			"sourceFileName": "src/data.js",
			"qualifiedName": "default"
		},
		"147": {
			"sourceFileName": "src/const.js",
			"qualifiedName": ""
		},
		"148": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "vertDef"
		},
		"149": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "positionsDef"
		},
		"150": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "countDef"
		},
		"151": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "extensions"
		},
		"152": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "extensionsFloat"
		},
		"153": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "extensionsHalfFloat"
		},
		"154": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "optionalExtensions"
		},
		"155": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "preDef"
		},
		"156": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "channelsMinDef"
		},
		"157": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "channelsMaxDef"
		},
		"158": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "buffersMaxDef"
		},
		"159": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "boundDef"
		},
		"160": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "scaleDef"
		},
		"161": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "widthDef"
		},
		"162": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "heightDef"
		},
		"163": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "stepsDef"
		},
		"164": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "valuesDef"
		},
		"165": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "typeDef"
		},
		"166": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "minDef"
		},
		"167": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "magDef"
		},
		"168": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "wrapDef"
		},
		"169": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "depthDef"
		},
		"170": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "stencilDef"
		},
		"171": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "glslRx"
		},
		"172": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "stepMaxDef"
		},
		"173": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "clearPassDef"
		},
		"174": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__type"
		},
		"175": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__type.color"
		},
		"176": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__type.depth"
		},
		"177": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__type.stencil"
		},
		"178": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__type.framebuffer"
		},
		"179": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "copyFrameDef"
		},
		"180": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__object"
		},
		"181": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__object.color"
		},
		"182": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "copyImageDef"
		},
		"183": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__object"
		},
		"184": {
			"sourceFileName": "src/const.js",
			"qualifiedName": "__object.copy"
		},
		"185": {
			"sourceFileName": "src/step.js",
			"qualifiedName": ""
		},
		"186": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "updateMerge"
		},
		"187": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "updateMerge"
		},
		"188": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "state"
		},
		"189": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"190": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.passes"
		},
		"191": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"192": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.color"
		},
		"193": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.map"
		},
		"194": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.merge"
		},
		"195": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.stepNow"
		},
		"196": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "toStep"
		},
		"197": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "toStep"
		},
		"198": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "api"
		},
		"199": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"200": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.buffer"
		},
		"201": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.clear"
		},
		"202": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.command"
		},
		"203": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "state"
		},
		"204": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"205": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.maps"
		},
		"206": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"207": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.passes"
		},
		"208": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.merge"
		},
		"209": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.texture"
		},
		"211": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.subimage"
		},
		"213": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.update"
		},
		"214": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.pre"
		},
		"215": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.vert"
		},
		"216": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.frag"
		},
		"217": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.uniforms"
		},
		"218": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.positions"
		},
		"219": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.count"
		},
		"220": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.pipeline"
		},
		"221": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.verts"
		},
		"222": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.frags"
		},
		"223": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "to"
		},
		"224": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "getPass"
		},
		"225": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "getPass"
		},
		"226": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__0"
		},
		"227": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.passes"
		},
		"229": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.stepNow"
		},
		"230": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type.passNow"
		},
		"231": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "toShader"
		},
		"232": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "toShader"
		},
		"233": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "shader"
		},
		"234": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "context"
		},
		"235": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "state"
		},
		"236": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "onStep"
		},
		"237": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"238": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"239": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "props"
		},
		"240": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "step"
		},
		"241": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "onPass"
		},
		"242": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"243": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "__type"
		},
		"244": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "stepProps"
		},
		"245": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "pass"
		},
		"246": {
			"sourceFileName": "src/step.js",
			"qualifiedName": "default"
		},
		"247": {
			"sourceFileName": "src/api.js",
			"qualifiedName": ""
		},
		"248": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "getFramebuffer"
		},
		"249": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"250": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"251": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "options"
		},
		"252": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"253": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.depth"
		},
		"254": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.stencil"
		},
		"255": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.width"
		},
		"256": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.height"
		},
		"257": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.color"
		},
		"258": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "useFramebuffer"
		},
		"259": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"260": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"261": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "hook"
		},
		"262": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"263": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"264": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "framebuffer"
		},
		"265": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.call"
		},
		"266": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.use"
		},
		"267": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "getTexture"
		},
		"268": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"269": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"270": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "type"
		},
		"271": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "min"
		},
		"272": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "mag"
		},
		"273": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "wrap"
		},
		"274": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "width"
		},
		"275": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "height"
		},
		"276": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "channels"
		},
		"277": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "subimage"
		},
		"278": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"279": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"280": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "source"
		},
		"281": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "x"
		},
		"282": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "y"
		},
		"283": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "texture"
		},
		"284": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.call"
		},
		"285": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.subimage"
		},
		"286": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "getBuffer"
		},
		"287": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"288": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"289": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "data"
		},
		"290": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"291": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.__index"
		},
		"293": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "buffer"
		},
		"294": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "clear"
		},
		"295": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"296": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"297": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "options"
		},
		"298": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"299": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.color"
		},
		"300": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.depth"
		},
		"301": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.stencil"
		},
		"302": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.framebuffer"
		},
		"303": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "command"
		},
		"304": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"305": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"306": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "context"
		},
		"309": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "state"
		},
		"310": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "options"
		},
		"311": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"312": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.vert"
		},
		"313": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"314": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"315": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "context"
		},
		"316": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "state"
		},
		"317": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.frag"
		},
		"318": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"319": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"320": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "context"
		},
		"321": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "state"
		},
		"322": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.count"
		},
		"323": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.attributes"
		},
		"324": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"325": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.__index"
		},
		"327": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.uniforms"
		},
		"328": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"329": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.__index"
		},
		"331": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.depth"
		},
		"332": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"333": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.__index"
		},
		"335": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"336": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.framebuffer"
		},
		"337": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"338": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"339": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "context"
		},
		"340": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "state"
		},
		"341": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "api"
		},
		"342": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type"
		},
		"343": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.framebuffer"
		},
		"344": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.texture"
		},
		"345": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.buffer"
		},
		"346": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.clear"
		},
		"347": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.command"
		},
		"348": {
			"sourceFileName": "src/api.js",
			"qualifiedName": "__type.call"
		},
		"350": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": ""
		},
		"351": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "toUniforms"
		},
		"352": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "toUniforms"
		},
		"353": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "state"
		},
		"354": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"355": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.steps"
		},
		"356": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.maps"
		},
		"357": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"358": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.textures"
		},
		"359": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.pre"
		},
		"360": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.merge"
		},
		"361": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.all"
		},
		"363": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"364": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.texture"
		},
		"365": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.size"
		},
		"366": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"367": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.shape"
		},
		"368": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.merge"
		},
		"369": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"370": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.shape"
		},
		"371": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.bound"
		},
		"372": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.uniforms"
		},
		"373": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "to"
		},
		"374": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.stepNow"
		},
		"376": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"377": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"378": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "c"
		},
		"379": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "state"
		},
		"380": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"381": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.stepNow"
		},
		"382": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.stateShape"
		},
		"383": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"385": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "c"
		},
		"386": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "state"
		},
		"387": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"388": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.size"
		},
		"389": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"390": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.number"
		},
		"391": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.viewShape"
		},
		"392": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"394": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "context"
		},
		"395": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"396": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.drawingBufferWidth"
		},
		"397": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.drawingBufferHeight"
		},
		"398": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "s"
		},
		"399": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.states"
		},
		"400": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"401": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"402": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "getUniform"
		},
		"403": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"405": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "context"
		},
		"406": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"407": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.drawingBufferWidth"
		},
		"408": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.drawingBufferHeight"
		},
		"409": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "state"
		},
		"410": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"411": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.stepNow"
		},
		"412": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.bound"
		},
		"413": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.merge"
		},
		"414": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"415": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.texture"
		},
		"416": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.textures"
		},
		"417": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type"
		},
		"418": {
			"sourceFileName": "src/uniforms.js",
			"qualifiedName": "__type.texture"
		},
		"419": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": ""
		},
		"420": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "hasMacros"
		},
		"421": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "hasMacros"
		},
		"422": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"423": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "key"
		},
		"424": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"425": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macros"
		},
		"426": {
			"sourceFileName": "",
			"qualifiedName": "__type"
		},
		"427": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__type"
		},
		"428": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__type"
		},
		"429": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": ""
		},
		"430": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroValues"
		},
		"431": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroValues"
		},
		"432": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"433": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"434": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroOutput"
		},
		"435": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroOutput"
		},
		"436": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"437": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"438": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroSamples"
		},
		"439": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroSamples"
		},
		"440": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"441": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"442": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroTaps"
		},
		"443": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroTaps"
		},
		"444": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"445": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"446": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "lineFeed"
		},
		"447": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "rgba"
		},
		"448": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "cacheDef"
		},
		"449": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "cacheDef"
		},
		"450": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "hooks"
		},
		"451": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object"
		},
		"452": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object.macroPass"
		},
		"453": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object.macroValues"
		},
		"454": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object.macroOutput"
		},
		"455": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object.macroSamples"
		},
		"456": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "__object.macroTaps"
		},
		"457": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSLListBase"
		},
		"458": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSLListBase"
		},
		"459": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "type"
		},
		"460": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "name"
		},
		"461": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "a"
		},
		"462": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "qualify"
		},
		"463": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "init"
		},
		"464": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL1ListLike"
		},
		"465": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL1ListLike"
		},
		"466": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "type"
		},
		"467": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "name"
		},
		"468": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "a"
		},
		"469": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "qualify"
		},
		"470": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "init"
		},
		"471": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL1ListArray"
		},
		"472": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL1ListArray"
		},
		"473": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "type"
		},
		"474": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "name"
		},
		"475": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "a"
		},
		"476": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "qualify"
		},
		"477": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "init"
		},
		"478": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL3List"
		},
		"479": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSL3List"
		},
		"480": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "type"
		},
		"481": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "name"
		},
		"482": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "a"
		},
		"483": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "qualify"
		},
		"484": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "init"
		},
		"485": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSLList"
		},
		"486": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "getGLSLList"
		},
		"487": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "type"
		},
		"488": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "name"
		},
		"489": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "a"
		},
		"490": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "qualify"
		},
		"491": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "glsl"
		},
		"492": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "init"
		},
		"493": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroPass"
		},
		"494": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "macroPass"
		},
		"495": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "state"
		},
		"496": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "on"
		},
		"497": {
			"sourceFileName": "src/macros.js",
			"qualifiedName": "default"
		}
	},
	"files": {
		"entries": {
			"1": "src/size.js",
			"2": "src/util/remain-div.glsl.js",
			"3": "src/index-forms/index-states.glsl.js",
			"4": "src/index-forms/index.js",
			"5": "src/index-forms/index-entries.glsl.js",
			"6": "src/maps.js",
			"7": "src/index.js",
			"8": "src/lookup/index-uv.glsl.js",
			"9": "src/lookup/offset-uv.glsl.js",
			"10": "src/index.vert.js",
			"11": "src/data.js",
			"12": "src/const.js",
			"13": "src/step.js",
			"14": "src/api.js",
			"15": "src/uniforms.js",
			"16": "src/macros.js",
			"17": "media/demo-particles-regl-frames.png",
			"18": "media/diagram.svg"
		},
		"reflections": {
			"1": 1,
			"2": 36,
			"3": 39,
			"4": 42,
			"5": 49,
			"6": 52,
			"7": 92,
			"8": 110,
			"9": 113,
			"10": 116,
			"11": 119,
			"12": 147,
			"13": 185,
			"14": 247,
			"15": 350,
			"16": 419
		}
	}
}
