{
	"id": 0,
	"name": "@epok.tech/gl-gpgpu - v0.7.2",
	"kind": 1,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 256,
			"name": "api",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Description of the "
					},
					{
						"kind": "code",
						"text": "`api`"
					},
					{
						"kind": "text",
						"text": " hooks for "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": ", to interact with "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " resources.\n\nNot implemented within the "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " library.\n\nBased on ["
					},
					{
						"kind": "code",
						"text": "`regl`"
					},
					{
						"kind": "text",
						"text": "](https://github.com/regl-project/regl/)'s API; but can be\nuse any "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " renderer, given hooks matching these implementations."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "[Fix "
							},
							{
								"kind": "code",
								"text": "`@callback`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@typedef`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/TypeStrong/typedoc/issues/1896):\n  nested "
							},
							{
								"kind": "code",
								"text": "`@param`"
							},
							{
								"kind": "text",
								"text": "; omits "
							},
							{
								"kind": "code",
								"text": "`@return`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@see`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@this`"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 257,
					"name": "getFramebuffer",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 17,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L17"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 258,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 17,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L17"
								}
							],
							"signatures": [
								{
									"id": 259,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to create or update a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "framebuffer",
												"target": 273
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n\n**This**\n\nUpdates any "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": " value's "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " in-place (or similar handling);\notherwise if "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish, returns a new "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": ".\n\n**Returns**\n\nA "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " created or updated by any given "
											},
											{
												"kind": "code",
												"text": "`options`"
											},
											{
												"kind": "text",
												"text": ", or an\n"
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " serving that purpose."
											}
										]
									},
									"parameters": [
										{
											"id": 260,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to create or update a "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " depth attachment, or a flag for whether it\n    should be created.\n  - "
													},
													{
														"kind": "code",
														"text": "`stencil`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " stencil attachment, or a flag for whether it\n    should be created.\n  - "
													},
													{
														"kind": "code",
														"text": "`width`"
													},
													{
														"kind": "text",
														"text": ": The width of the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`height`"
													},
													{
														"kind": "text",
														"text": ": The height of the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`color`"
													},
													{
														"kind": "text",
														"text": ": The "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " attachments to use."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 261,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 262,
															"name": "depth",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 36,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L36"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 263,
															"name": "stencil",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 37,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L37"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "object"
															}
														},
														{
															"id": 264,
															"name": "width",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 38,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L38"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 265,
															"name": "height",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 39,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 266,
															"name": "color",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 40,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L40"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"id": 292,
																	"name": "texture"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																262,
																263,
																264,
																265,
																266
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 35,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L35"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 273,
										"name": "framebuffer"
									}
								}
							]
						}
					}
				},
				{
					"id": 267,
					"name": "useFramebuffer",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 54,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L54"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 268,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 54,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L54"
								}
							],
							"signatures": [
								{
									"id": 269,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Bind a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " while calling a given "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": "; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "framebuffer",
												"target": 273
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n\n**This**\n\nUses any "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": " value's "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " (or similar handling)."
											}
										]
									},
									"parameters": [
										{
											"id": 270,
											"name": "hook",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "code",
														"text": "`function`"
													},
													{
														"kind": "text",
														"text": " to call while the "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " is bound."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 271,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "api.js",
															"line": 66,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L66"
														}
													],
													"signatures": [
														{
															"id": 272,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 273,
					"name": "framebuffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": ", or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " API.\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getFramebuffer",
								"target": 257
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getState",
								"target": 112
							}
						]
					},
					"children": [
						{
							"id": 274,
							"name": "call",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update this "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " in-place."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 78,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L78"
								}
							],
							"type": {
								"type": "reference",
								"id": 257,
								"name": "getFramebuffer"
							}
						},
						{
							"id": 275,
							"name": "use",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Bind this "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " for the given "
									},
									{
										"kind": "code",
										"text": "`function`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 79,
									"character": 26,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L79"
								}
							],
							"type": {
								"type": "reference",
								"id": 267,
								"name": "useFramebuffer"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								274,
								275
							]
						}
					],
					"sources": [
						{
							"fileName": "api.js",
							"line": 70,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L70"
						}
					]
				},
				{
					"id": 276,
					"name": "getTexture",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 83,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L83"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 277,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 83,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L83"
								}
							],
							"signatures": [
								{
									"id": 278,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " hook to create or update a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "api",
												"target": 352
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "texture",
												"target": 292
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\n\nA "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": ", or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " serving that purpose."
											}
										]
									},
									"parameters": [
										{
											"id": 279,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " data type value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 280,
											"name": "min",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " minification filter value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 281,
											"name": "mag",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " magnification filter value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 282,
											"name": "wrap",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Any "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " wrap mode value."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 283,
											"name": "width",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The width of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 284,
											"name": "height",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The height of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 285,
											"name": "channels",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The number of channels of the "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 292,
										"name": "texture"
									}
								}
							]
						}
					}
				},
				{
					"id": 286,
					"name": "subimage",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 108,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L108"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 287,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 108,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L108"
								}
							],
							"signatures": [
								{
									"id": 288,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Copy from a given source "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " to part of "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": " output "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "; via\na "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "api",
												"target": 352
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "texture",
												"target": 292
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getTexture",
												"target": 276
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\n\nThe output "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": "; the source "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " copied to part of it.\n\n**This**\n\nUses any "
											},
											{
												"kind": "code",
												"text": "`this`"
											},
											{
												"kind": "text",
												"text": " value's "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " as the output to copy into."
											}
										]
									},
									"parameters": [
										{
											"id": 289,
											"name": "source",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "A "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": " to copy to part of the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reference",
												"id": 292,
												"name": "texture"
											}
										},
										{
											"id": 290,
											"name": "x",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Offset along the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "'s x-axis."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 291,
											"name": "y",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Offset along the output "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "'s y-axis."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 292,
										"name": "texture"
									}
								}
							]
						}
					}
				},
				{
					"id": 292,
					"name": "texture",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": ", or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose; via a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " API.\n\n**See**\n\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getTexture",
								"target": 276
							},
							{
								"kind": "text",
								"text": "\n- "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "getState",
								"target": 112
							}
						]
					},
					"children": [
						{
							"id": 293,
							"name": "call",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update this "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " in-place."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 143,
									"character": 22,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L143"
								}
							],
							"type": {
								"type": "reference",
								"id": 276,
								"name": "getTexture"
							}
						},
						{
							"id": 294,
							"name": "subimage",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Copy from a source "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " into part of "
									},
									{
										"kind": "code",
										"text": "`this`"
									},
									{
										"kind": "text",
										"text": "\n  destination "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 144,
									"character": 20,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L144"
								}
							],
							"type": {
								"type": "reference",
								"id": 286,
								"name": "subimage"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								293,
								294
							]
						}
					],
					"sources": [
						{
							"fileName": "api.js",
							"line": 135,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L135"
						}
					]
				},
				{
					"id": 295,
					"name": "getBuffer",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 149,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L149"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 296,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 149,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L149"
								}
							],
							"signatures": [
								{
									"id": 297,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to set up a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " buffer; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "attributes.getAttributes"
											}
										]
									},
									"parameters": [
										{
											"id": 298,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Buffer data."
													}
												]
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "array",
														"elementType": {
															"type": "intrinsic",
															"name": "number"
														}
													},
													{
														"type": "reflection",
														"declaration": {
															"id": 299,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 156,
																	"character": 20,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L156"
																}
															],
															"indexSignature": {
																"id": 300,
																"name": "__index",
																"kind": 8192,
																"kindString": "Index signature",
																"flags": {},
																"parameters": [
																	{
																		"id": 301,
																		"name": "k",
																		"kind": 32768,
																		"flags": {},
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "string"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	}
																],
																"type": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 302,
										"name": "buffer"
									}
								}
							]
						}
					}
				},
				{
					"id": 302,
					"name": "buffer",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`buffer`"
							},
							{
								"kind": "text",
								"text": " for vertex "
							},
							{
								"kind": "code",
								"text": "`attribute`"
							},
							{
								"kind": "text",
								"text": "s, or an "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " serving that purpose;\nvia a "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " API."
							}
						]
					},
					"children": [
						{
							"id": 303,
							"name": "count",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The buffer element/vertex count."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 166,
									"character": 19,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L166"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 304,
							"name": "length",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The length of the buffer data "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "api.js",
									"line": 167,
									"character": 19,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L167"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								303,
								304
							]
						}
					],
					"sources": [
						{
							"fileName": "api.js",
							"line": 162,
							"character": 21,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L162"
						}
					]
				},
				{
					"id": 305,
					"name": "clear",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 171,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L171"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 306,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 171,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L171"
								}
							],
							"signatures": [
								{
									"id": 307,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to clear "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " output view or "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "framebuffer",
												"target": 273
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											}
										]
									},
									"parameters": [
										{
											"id": 308,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to clear "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`color`"
													},
													{
														"kind": "text",
														"text": ": The values to clear any color buffers with.\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": The value to clear any depth buffer with.\n  - "
													},
													{
														"kind": "code",
														"text": "`stencil`"
													},
													{
														"kind": "text",
														"text": ": The value to clear any stencil buffer with.\n  - "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " to clear; if not given, clears any\n    "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " already bound, or the view if none are bound."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 309,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 310,
															"name": "color",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 180,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L180"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "number"
																}
															}
														},
														{
															"id": 311,
															"name": "depth",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 181,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L181"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 312,
															"name": "stencil",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 182,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L182"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 313,
															"name": "framebuffer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 183,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L183"
																}
															],
															"type": {
																"type": "reference",
																"id": 273,
																"name": "framebuffer"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																310,
																311,
																312,
																313
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 179,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L179"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					}
				},
				{
					"id": 314,
					"name": "command",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "api.js",
							"line": 193,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L193"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 315,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "api.js",
									"line": 193,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L193"
								}
							],
							"signatures": [
								{
									"id": 316,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to create a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " render pass execution "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": ", to be called\nlater, given options, for a render pass; via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API.\n\n**See**\n\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "buffer",
												"target": 302
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "api.attributes"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "framebuffer",
												"target": 273
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.getUniforms"
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.getUniform"
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\n\nA "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " to execute a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " render pass, given options."
											}
										]
									},
									"parameters": [
										{
											"id": 321,
											"name": "options",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Options to create a "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " render pass "
													},
													{
														"kind": "code",
														"text": "`function`"
													},
													{
														"kind": "text",
														"text": "; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`vert`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`GLSL`"
													},
													{
														"kind": "text",
														"text": " vertex shader "
													},
													{
														"kind": "code",
														"text": "`string`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`frag`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`GLSL`"
													},
													{
														"kind": "text",
														"text": " fragment shader "
													},
													{
														"kind": "code",
														"text": "`string`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`count`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`number`"
													},
													{
														"kind": "text",
														"text": " of elements to render.\n  - "
													},
													{
														"kind": "code",
														"text": "`attributes`"
													},
													{
														"kind": "text",
														"text": ": Map of any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`attribute`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": "s.\n    See "
													},
													{
														"kind": "code",
														"text": "`attributes`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`buffer`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`getStep`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`uniforms`"
													},
													{
														"kind": "text",
														"text": ": Map of any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`uniform`"
													},
													{
														"kind": "text",
														"text": " hooks.\n    See "
													},
													{
														"kind": "code",
														"text": "`uniforms`"
													},
													{
														"kind": "text",
														"text": ", "
													},
													{
														"kind": "code",
														"text": "`getUniforms`"
													},
													{
														"kind": "text",
														"text": ", and "
													},
													{
														"kind": "code",
														"text": "`getUniform`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`depth`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " depth settings (e.g: "
													},
													{
														"kind": "code",
														"text": "`options.depth.enable`"
													},
													{
														"kind": "text",
														"text": ").\n  - "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": ": Hook to get any "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": " to render into.\n    See "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 322,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 323,
															"name": "vert",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 211,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L211"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 324,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 211,
																			"character": 13,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L211"
																		}
																	],
																	"signatures": [
																		{
																			"id": 325,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 326,
																					"name": "context",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 327,
																					"name": "state",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 328,
															"name": "frag",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 212,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L212"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 329,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 212,
																			"character": 13,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L212"
																		}
																	],
																	"signatures": [
																		{
																			"id": 330,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 331,
																					"name": "context",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 332,
																					"name": "state",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	]
																}
															}
														},
														{
															"id": 333,
															"name": "count",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 213,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L213"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 334,
															"name": "attributes",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 214,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L214"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 335,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 214,
																			"character": 19,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L214"
																		}
																	],
																	"indexSignature": {
																		"id": 336,
																		"name": "__index",
																		"kind": 8192,
																		"kindString": "Index signature",
																		"flags": {},
																		"parameters": [
																			{
																				"id": 337,
																				"name": "k",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"id": 302,
																			"name": "buffer"
																		}
																	}
																}
															}
														},
														{
															"id": 338,
															"name": "uniforms",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 215,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L215"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 339,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 215,
																			"character": 17,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L215"
																		}
																	],
																	"indexSignature": {
																		"id": 340,
																		"name": "__index",
																		"kind": 8192,
																		"kindString": "Index signature",
																		"flags": {},
																		"parameters": [
																			{
																				"id": 341,
																				"name": "k",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"type": {
																			"type": "reference",
																			"name": "getUniform"
																		}
																	}
																}
															}
														},
														{
															"id": 342,
															"name": "depth",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 216,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L216"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 343,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 216,
																			"character": 14,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L216"
																		}
																	],
																	"indexSignature": {
																		"id": 344,
																		"name": "__index",
																		"kind": 8192,
																		"kindString": "Index signature",
																		"flags": {},
																		"parameters": [
																			{
																				"id": 345,
																				"name": "k",
																				"kind": 32768,
																				"flags": {},
																				"type": {
																					"type": "intrinsic",
																					"name": "string"
																				}
																			}
																		],
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "boolean"
																				},
																				{
																					"type": "reflection",
																					"declaration": {
																						"id": 346,
																						"name": "__type",
																						"kind": 65536,
																						"kindString": "Type literal",
																						"flags": {},
																						"sources": [
																							{
																								"fileName": "api.js",
																								"line": 216,
																								"character": 34,
																								"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L216"
																							}
																						]
																					}
																				}
																			]
																		}
																	}
																}
															}
														},
														{
															"id": 347,
															"name": "framebuffer",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "api.js",
																	"line": 217,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L217"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 348,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "api.js",
																			"line": 217,
																			"character": 20,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L217"
																		}
																	],
																	"signatures": [
																		{
																			"id": 349,
																			"name": "__type",
																			"kind": 4096,
																			"kindString": "Call signature",
																			"flags": {},
																			"parameters": [
																				{
																					"id": 350,
																					"name": "context",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				},
																				{
																					"id": 351,
																					"name": "state",
																					"kind": 32768,
																					"kindString": "Parameter",
																					"flags": {},
																					"type": {
																						"type": "intrinsic",
																						"name": "any"
																					}
																				}
																			],
																			"type": {
																				"type": "reference",
																				"id": 273,
																				"name": "framebuffer"
																			}
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																323,
																328,
																333,
																334,
																338,
																342,
																347
															]
														}
													],
													"sources": [
														{
															"fileName": "api.js",
															"line": 210,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L210"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 317,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"sources": [
												{
													"fileName": "api.js",
													"line": 230,
													"character": 13,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L230"
												}
											],
											"signatures": [
												{
													"id": 318,
													"name": "__type",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 319,
															"name": "context",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														},
														{
															"id": 320,
															"name": "state",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							]
						}
					}
				},
				{
					"id": 352,
					"name": "api",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An API "
							},
							{
								"kind": "code",
								"text": "`object`"
							},
							{
								"kind": "text",
								"text": " given to "
							},
							{
								"kind": "code",
								"text": "`gpgpu`"
							},
							{
								"kind": "text",
								"text": ", to interact with "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " resources.\n\nBased on ["
							},
							{
								"kind": "code",
								"text": "`regl`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/regl-project/regl/)'s API; but can be\nuse any "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " renderer, given hooks matching these implementations."
							}
						]
					},
					"sources": [
						{
							"fileName": "api.js",
							"line": 241,
							"character": 8,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L241"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 353,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 354,
									"name": "framebuffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 235,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L235"
										}
									],
									"type": {
										"type": "reference",
										"id": 257,
										"name": "getFramebuffer"
									}
								},
								{
									"id": 355,
									"name": "texture",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 236,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L236"
										}
									],
									"type": {
										"type": "reference",
										"id": 276,
										"name": "getTexture"
									}
								},
								{
									"id": 356,
									"name": "buffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 237,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L237"
										}
									],
									"type": {
										"type": "reference",
										"id": 295,
										"name": "getBuffer"
									}
								},
								{
									"id": 357,
									"name": "clear",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 238,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L238"
										}
									],
									"type": {
										"type": "reference",
										"id": 305,
										"name": "clear"
									}
								},
								{
									"id": 358,
									"name": "command",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 239,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L239"
										}
									],
									"type": {
										"type": "reference",
										"id": 314,
										"name": "command"
									}
								},
								{
									"id": 359,
									"name": "call",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "api.js",
											"line": 240,
											"character": 7,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L240"
										}
									],
									"type": {
										"type": "reference",
										"id": 314,
										"name": "command"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										354,
										355,
										356,
										357,
										358,
										359
									]
								}
							],
							"sources": [
								{
									"fileName": "api.js",
									"line": 234,
									"character": 13,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L234"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Type Aliases",
					"children": [
						257,
						267,
						276,
						286,
						295,
						305,
						314,
						352
					]
				},
				{
					"title": "Interfaces",
					"children": [
						273,
						292,
						302
					]
				}
			],
			"sources": [
				{
					"fileName": "api.js",
					"line": 249,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/api.js#L249"
				}
			]
		},
		{
			"id": 106,
			"name": "attributes",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " inputs for "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " "
					},
					{
						"kind": "code",
						"text": "`attribute`"
					},
					{
						"kind": "text",
						"text": "s."
					}
				]
			},
			"children": [
				{
					"id": 107,
					"name": "positionsDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default vertex positions "
							},
							{
								"kind": "code",
								"text": "`attribute`"
							},
							{
								"kind": "text",
								"text": "; 3 points of a large flat triangle."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "attributes",
										"target": 106
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "attributes.js",
							"line": 13,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/attributes.js#L13"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "attributes.js",
					"line": 13,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/attributes.js#L13"
				}
			]
		},
		{
			"id": 162,
			"name": "const",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default properties for "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " capabilities and resources."
					}
				]
			},
			"children": [
				{
					"id": 163,
					"name": "vertDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default vertex shader "
							},
							{
								"kind": "code",
								"text": "`GLSL`"
							},
							{
								"kind": "text",
								"text": " code."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 12,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"defaultValue": "vertGLSL"
				},
				{
					"id": 164,
					"name": "extensions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions; none."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 17,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L17"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					},
					"defaultValue": "[]"
				},
				{
					"id": 165,
					"name": "extensionsFloat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions to render to "
							},
							{
								"kind": "code",
								"text": "`float`"
							},
							{
								"kind": "text",
								"text": " buffers."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 20,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L20"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 166,
					"name": "extensionsHalfFloat",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default required "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions to render to "
							},
							{
								"kind": "code",
								"text": "`half float`"
							},
							{
								"kind": "text",
								"text": " buffers."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 24,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L24"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 167,
					"name": "optionalExtensions",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default optional "
							},
							{
								"kind": "code",
								"text": "`GL`"
							},
							{
								"kind": "text",
								"text": " extensions; update more data in one render pass."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 28,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L28"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 168,
					"name": "preDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prefix namespace to avoid naming clashes; recommended."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "index.vert.glsl"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 35,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L35"
						}
					],
					"type": {
						"type": "literal",
						"value": "gpgpu_"
					},
					"defaultValue": "'gpgpu_'"
				},
				{
					"id": 169,
					"name": "channelsMinDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default minimum allowable channels for "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments.\nThis avoids "
							},
							{
								"kind": "code",
								"text": "`RGB32F`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments, which errors on Firefox."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "[Firefox "
									},
									{
										"kind": "code",
										"text": "`RGB32F`"
									},
									{
										"kind": "text",
										"text": " bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1448632)"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 44,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L44"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					},
					"defaultValue": "4"
				},
				{
					"id": 170,
					"name": "channelsMaxDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default minimum allowable channels for "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments.\nThis avoids "
							},
							{
								"kind": "code",
								"text": "`RGB32F`"
							},
							{
								"kind": "text",
								"text": " "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " attachments, which errors on Firefox."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "text",
										"text": "[Firefox "
									},
									{
										"kind": "code",
										"text": "`RGB32F`"
									},
									{
										"kind": "text",
										"text": " bug](https://bugzilla.mozilla.org/show_bug.cgi?id=1448632)"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 53,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L53"
						}
					],
					"type": {
						"type": "literal",
						"value": 4
					},
					"defaultValue": "4"
				},
				{
					"id": 171,
					"name": "buffersMaxDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default maximum "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s bound per pass."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 61,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L61"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					},
					"defaultValue": "1"
				},
				{
					"id": 172,
					"name": "boundDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default how many steps are bound as outputs, unavailable as input; for\nplatforms forbidding read/write of same buffer."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 67,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L67"
						}
					],
					"type": {
						"type": "literal",
						"value": 1
					},
					"defaultValue": "1"
				},
				{
					"id": 173,
					"name": "scaleDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default length of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to this power."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 73,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L73"
						}
					],
					"type": {
						"type": "literal",
						"value": 9
					},
					"defaultValue": "9"
				},
				{
					"id": 174,
					"name": "widthDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default width of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to the default scale."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 82,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L82"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 175,
					"name": "heightDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default height of the data "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "s sides to allocate; gives a square\npower-of-two "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " raising 2 to the default scale."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 91,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 176,
					"name": "stepsDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default number steps of state to track."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 94,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L94"
						}
					],
					"type": {
						"type": "literal",
						"value": 2
					},
					"defaultValue": "2"
				},
				{
					"id": 177,
					"name": "valuesDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default values to track; gives 1 set of "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 96,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L96"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 178,
					"name": "typeDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " data type."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 105,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L105"
						}
					],
					"type": {
						"type": "literal",
						"value": "float"
					},
					"defaultValue": "'float'"
				},
				{
					"id": 179,
					"name": "minDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " minification filter."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 112,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L112"
						}
					],
					"type": {
						"type": "literal",
						"value": "nearest"
					},
					"defaultValue": "'nearest'"
				},
				{
					"id": 180,
					"name": "magDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " magnification filter."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 119,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L119"
						}
					],
					"type": {
						"type": "literal",
						"value": "nearest"
					},
					"defaultValue": "'nearest'"
				},
				{
					"id": 181,
					"name": "wrapDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " wrap mode, avoid "
							},
							{
								"kind": "code",
								"text": "`WebGL1`"
							},
							{
								"kind": "text",
								"text": " needing power-of-2 "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.texture"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 126,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L126"
						}
					],
					"type": {
						"type": "literal",
						"value": "clamp"
					},
					"defaultValue": "'clamp'"
				},
				{
					"id": 182,
					"name": "depthDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " depth attachment."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 133,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L133"
						}
					],
					"type": {
						"type": "literal",
						"value": false
					},
					"defaultValue": "false"
				},
				{
					"id": 183,
					"name": "stencilDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": " stencil attachment."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "state.framebuffer"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 140,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L140"
						}
					],
					"type": {
						"type": "literal",
						"value": false
					},
					"defaultValue": "false"
				},
				{
					"id": 184,
					"name": "mergeDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether states merge into one "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": "; one merged "
							},
							{
								"kind": "code",
								"text": "`texture`"
							},
							{
								"kind": "text",
								"text": " by default."
							}
						]
					},
					"sources": [
						{
							"fileName": "const.js",
							"line": 143,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L143"
						}
					],
					"type": {
						"type": "literal",
						"value": true
					},
					"defaultValue": "true"
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						163,
						164,
						165,
						166,
						167,
						168,
						169,
						170,
						171,
						172,
						173,
						174,
						175,
						176,
						177,
						178,
						179,
						180,
						181,
						182,
						183,
						184
					]
				}
			],
			"sources": [
				{
					"fileName": "const.js",
					"line": 8,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/const.js#L8"
				}
			]
		},
		{
			"id": 49,
			"name": "index-forms/index-entries.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-entries.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 50,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-entries.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index-forms/index-entries.glsl.js",
							"line": 15,
							"character": 14,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-entries.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 51,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index-entries.glsl.js",
							"line": 17,
							"character": 1,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-entries.glsl.js#L17"
						}
					],
					"target": 50
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						50
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								50
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						51
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index-entries.glsl.js",
					"line": 7,
					"character": 1,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-entries.glsl.js#L7"
				}
			]
		},
		{
			"id": 39,
			"name": "index-forms/index-states.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-states.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 40,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-states.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index-forms/index-states.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-states.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 41,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index-states.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-states.glsl.js#L17"
						}
					],
					"target": 40
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						40
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								40
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						41
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index-states.glsl.js",
					"line": 7,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index-states.glsl.js#L7"
				}
			]
		},
		{
			"id": 42,
			"name": "index-forms",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "How many vertexes for a given form to cover each entry's steps of state:\n- If 2 states or form are given, gives a setup of pairs for a line segment\n  between each entry's steps of state using "
					},
					{
						"kind": "code",
						"text": "`gl.LINES`"
					},
					{
						"kind": "text",
						"text": ".\n- If fewer than 2 states or form are given, gives a setup for a point at each\n  entry's steps of state using "
					},
					{
						"kind": "code",
						"text": "`gl.POINTS`"
					},
					{
						"kind": "text",
						"text": ".\n\nPossibly useful for other forms too.\n\nCorresponds to the indexing logic in the "
					},
					{
						"kind": "code",
						"text": "`indexForms`"
					},
					{
						"kind": "text",
						"text": " "
					},
					{
						"kind": "code",
						"text": "`GLSL`"
					},
					{
						"kind": "text",
						"text": " function."
					}
				],
				"blockTags": [
					{
						"tag": "@see",
						"content": [
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "index-forms/index-states.glsl",
								"target": 39
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "index-forms/index-entries.glsl",
								"target": 49
							},
							{
								"kind": "text",
								"text": "\n"
							},
							{
								"kind": "text",
								"text": " - "
							},
							{
								"kind": "text",
								"text": "["
							},
							{
								"kind": "code",
								"text": "`gl.LINES`"
							},
							{
								"kind": "text",
								"text": "](https://webglfundamentals.org/webgl/lessons/webgl-points-lines-triangles.html)"
							},
							{
								"kind": "text",
								"text": "\n"
							}
						]
					},
					{
						"tag": "@param",
						"name": "states",
						"content": [
							{
								"kind": "text",
								"text": "How many steps of state each entry has."
							}
						]
					},
					{
						"tag": "@param",
						"name": "form",
						"content": [
							{
								"kind": "text",
								"text": "How many steps of state each form covers."
							}
						]
					},
					{
						"tag": "@param",
						"name": "entries",
						"content": [
							{
								"kind": "text",
								"text": "How many entries, if any; result to be multiplied\n  externally if not given."
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "The number of vertexes needed for the given "
							},
							{
								"kind": "code",
								"text": "`form`"
							},
							{
								"kind": "text",
								"text": " to cover\n  all steps of "
							},
							{
								"kind": "code",
								"text": "`states`"
							},
							{
								"kind": "text",
								"text": "; over all "
							},
							{
								"kind": "code",
								"text": "`entries`"
							},
							{
								"kind": "text",
								"text": " if given, to be multiplied\n  externally if not given."
							}
						]
					},
					{
						"tag": "@remarks",
						"content": [
							{
								"kind": "text",
								"text": "[[include:src/index-forms/readme.md]]"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 43,
					"name": "indexForms",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index.js",
							"line": 30,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index.js#L30"
						}
					],
					"signatures": [
						{
							"id": 44,
							"name": "indexForms",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 45,
									"name": "states",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 46,
									"name": "form",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "2"
								},
								{
									"id": 47,
									"name": "entries",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 48,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index-forms/index.js",
							"line": 33,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index.js#L33"
						}
					],
					"target": 43
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						43
					]
				},
				{
					"title": "References",
					"children": [
						48
					]
				}
			],
			"sources": [
				{
					"fileName": "index-forms/index.js",
					"line": 30,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index-forms/index.js#L30"
				}
			]
		},
		{
			"id": 85,
			"name": "(root)",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "**Main "
					},
					{
						"kind": "code",
						"text": "`index.js`"
					},
					{
						"kind": "text",
						"text": " - see ["
					},
					{
						"kind": "code",
						"text": "`readme`"
					},
					{
						"kind": "text",
						"text": "](..)**\n\n[!["
					},
					{
						"kind": "code",
						"text": "`gl-gpgpu`"
					},
					{
						"kind": "text",
						"text": " particles demo](media://demo-particles-regl-frames.png)](..)\n\n[GPGPU](https://en.wikipedia.org/wiki/General-purpose_computing_on_graphics_processing_units)\nstate-stepping - declaratively maps optimal draw passes, shaders, "
					},
					{
						"kind": "code",
						"text": "`WebGL`"
					},
					{
						"kind": "text",
						"text": "\nresources, inputs, outputs - lets you focus on your logic, BYO-renderer.\n\nDecouples logic from rendering approach/engine.\nThe modules and many hooks may be used as given, or piecemeal, or overridden."
					}
				]
			},
			"originalName": "index",
			"children": [
				{
					"id": 86,
					"name": "gpgpu",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "index.js",
							"line": 52,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L52"
						}
					],
					"signatures": [
						{
							"id": 87,
							"name": "gpgpu",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets up all the maps, inputs, resources, etc for a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " process.\nEach component may also be used individually, see their documentation."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapStep",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapSamples",
												"target": 67
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getUniforms",
												"target": 362
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroPass",
												"target": 504
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": ", set up for a "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " process.\n  See "
											},
											{
												"kind": "code",
												"text": "`mapStep`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`getUniforms`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`macroPass`"
											},
											{
												"kind": "text",
												"text": " for parts."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 88,
									"name": "api",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 89,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 90,
													"name": "limits",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "A map of "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " resource limits."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.js",
															"line": 36,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L36"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 91,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 92,
																			"name": "maxDrawbuffers",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "index.js",
																					"line": 37,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L37"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				92
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "index.js",
																			"line": 37,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L37"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														90
													]
												}
											],
											"sources": [
												{
													"fileName": "index.js",
													"line": 36,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L36"
												}
											]
										}
									}
								},
								{
									"id": 93,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "State properties to set up; a new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " by\n  default. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`getUniforms`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 94,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 95,
													"name": "maps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass\n  per-step. Sets up new maps if not given or missing its mapped properties.\n  See "
															},
															{
																"kind": "code",
																"text": "`mapStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "index.js",
															"line": 41,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L41"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 96,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 97,
																			"name": "buffersMax",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "index.js",
																					"line": 44,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L44"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				97
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "index.js",
																			"line": 44,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L44"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														95
													]
												}
											],
											"sources": [
												{
													"fileName": "index.js",
													"line": 41,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L41"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 98,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The state "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to set up. Modifies the given\n  "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": " object by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "state"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 99,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.js",
							"line": 71,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L71"
						}
					],
					"target": 86
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						86
					]
				},
				{
					"title": "References",
					"children": [
						99
					]
				}
			],
			"sources": [
				{
					"fileName": "index.js",
					"line": 18,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.js#L18"
				}
			]
		},
		{
			"id": 108,
			"name": "index.vert.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index.vert.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"originalName": "index.vert",
			"children": [
				{
					"id": 109,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index.vert.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "index.vert.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.vert.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 110,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "index.vert.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.vert.js#L17"
						}
					],
					"target": 109
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						109
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								109
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "index.vert.js",
					"line": 7,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/index.vert.js#L7"
				}
			]
		},
		{
			"id": 100,
			"name": "lookup/index-uv.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./index-uv.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 101,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./index-uv.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "lookup/index-uv.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/index-uv.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 102,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "lookup/index-uv.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/index-uv.glsl.js#L17"
						}
					],
					"target": 101
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						101
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								101
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						102
					]
				}
			],
			"sources": [
				{
					"fileName": "lookup/index-uv.glsl.js",
					"line": 7,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/index-uv.glsl.js#L7"
				}
			]
		},
		{
			"id": 103,
			"name": "lookup/offset-uv.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./offset-uv.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 104,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./offset-uv.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "lookup/offset-uv.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/offset-uv.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 105,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "lookup/offset-uv.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/offset-uv.glsl.js#L17"
						}
					],
					"target": 104
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						104
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								104
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						105
					]
				}
			],
			"sources": [
				{
					"fileName": "lookup/offset-uv.glsl.js",
					"line": 7,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/lookup/offset-uv.glsl.js#L7"
				}
			]
		},
		{
			"id": 430,
			"name": "macros",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`GLSL`"
					},
					{
						"kind": "text",
						"text": " preprocessor macros for working with the "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " state and maps.\n\nEach set of different macros will result in new shader compilations - for\noptimal performance, the fewest macros possible should be created, one per\neach given set of inputs, ideally; caches here can be used for efficiency."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Redo examples, especially "
							},
							{
								"kind": "code",
								"text": "`macroTaps`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`macroPass`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Ensure the "
							},
							{
								"kind": "code",
								"text": "`output_N`"
							},
							{
								"kind": "text",
								"text": " in "
							},
							{
								"kind": "code",
								"text": "`macroOutput`"
							},
							{
								"kind": "text",
								"text": " can work with "
							},
							{
								"kind": "code",
								"text": "`WebGL2`"
							},
							{
								"kind": "text",
								"text": "; look at\n  using "
							},
							{
								"kind": "code",
								"text": "`layout(location=attach_N) out data_N`"
							},
							{
								"kind": "text",
								"text": ", not "
							},
							{
								"kind": "code",
								"text": "`gl_FragData[attach_N]`"
							},
							{
								"kind": "text",
								"text": ".\n  - [SO: Multiple output textures from the same program](https://stackoverflow.com/questions/51793336/multiple-output-textures-from-the-same-program)\n  - [SO: GL FragData must be constant zero](https://stackoverflow.com/questions/46740817/gl-fragdata-must-be-constant-zero)\n  - [SO: How are layout qualifiers better than getAttribLocation in WebGL2](https://stackoverflow.com/questions/50258822/how-are-layout-qualifiers-better-than-getattriblocation-in-webgl2)"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 457,
					"name": "lineFeed",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Escaped line-feed for easier reading."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 26,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L26"
						}
					],
					"type": {
						"type": "literal",
						"value": " \\\n"
					},
					"defaultValue": "' \\\\\\n'"
				},
				{
					"id": 458,
					"name": "rgba",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The channels denoted for texture input/output."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 30,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L30"
						}
					],
					"type": {
						"type": "literal",
						"value": "rgba"
					},
					"defaultValue": "'rgba'"
				},
				{
					"id": 459,
					"name": "cacheDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Simple shared cache for temporary or reusable objects."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 32,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L32"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 460,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "macros.js",
									"line": 32,
									"character": 13,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L32"
								}
							]
						}
					},
					"defaultValue": "{}"
				},
				{
					"id": 461,
					"name": "hooks",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Names for each part of the macro handling process available to hooks."
							}
						]
					},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 37,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L37"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 462,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 463,
									"name": "macroPass",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The full set of macros."
											}
										]
									},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 39,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L39"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 464,
									"name": "macroValues",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Each part of the set of macros."
											}
										]
									},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 41,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'values'"
								},
								{
									"id": 465,
									"name": "macroOutput",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 41,
											"character": 25,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'output'"
								},
								{
									"id": 466,
									"name": "macroSamples",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 42,
											"character": 2,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L42"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'samples'"
								},
								{
									"id": 467,
									"name": "macroTaps",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "macros.js",
											"line": 42,
											"character": 27,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L42"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "'taps'"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										463,
										464,
										465,
										466,
										467
									]
								}
							],
							"sources": [
								{
									"fileName": "macros.js",
									"line": 37,
									"character": 21,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L37"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 431,
					"name": "hasMacros",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 101,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L101"
						}
					],
					"signatures": [
						{
							"id": 432,
							"name": "hasMacros",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether handling macros here; or the result of a given hook to handle it.\n\nAllows macros of the given key to be handled by external named hooks, to\nreplace any part of the functionality here in overall or granular ways.\n\nThe macro names checked in this module are found in "
									},
									{
										"kind": "code",
										"text": "`hooks`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\n// Macros to be handled here, the default.\n[hasMacros(), hasMacros({}), hasMacros({ macros: true })]]\n  .every((m) => m == null);\n\n// Macros to be handled here, with prefix `'pre_'` instead of `'preDef'`.\nhasMacros({ pre: 'pre_' }) == null;\n\n// Macros not created.\n[hasMacros({ macros: false }), hasMacros({ macros: 0 })]\n  .every((m) => m === '');\n\n// Macros for `'a'` handled by external `string` hook, not here.\nhasMacros({ macros: { a: '//A\\n', b: () => '//B\\n' } }, 'a') === '//A\\n';\n// Macros for `'b'` handled by external `function` hook, not here.\nhasMacros({ macros: { a: '//A\\n', b: () => '//B\\n' } }, 'b') === '//B\\n';\n// Macros specified `on` a `'frag'` not created.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, '', 'frag') === '';\n// Macros specified `on` a `'vert'` handled here.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, '', 'vert') == null;\n// Macros of `'values'`/`hooks.values` handled here.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, 'values', '') == null;\n// Macros of `'values'`/`hooks.values` specified `on` a `'vert'` not created.\nhasMacros({ macros: { frag: 0, values_vert: 0 } }, 'values', 'vert') === '';\n```"
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "hooks"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Either the result of the macros handled elsewhere,\n  or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if macros should be handled here."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 433,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " whose properties may handle macros."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 434,
									"name": "key",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any name to check granularly within "
											},
											{
												"kind": "code",
												"text": "`macros`"
											},
											{
												"kind": "text",
												"text": ". See "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 435,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro name specifier; if given, "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": "\n  itself and with this specifier are checked (i.e: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " then "
											},
											{
												"kind": "code",
												"text": "`key+'_'+on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 436,
									"name": "macros",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How\n  macros should be handled, according to their type, in order of precedence:\n  - "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish: macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": ": macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "y: no macros to be handled here, empty "
											},
											{
												"kind": "code",
												"text": "`''`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": " returned.\n  - "
											},
											{
												"kind": "code",
												"text": "`string`"
											},
											{
												"kind": "text",
												"text": ": no macros to be handled here, this hook value's used instead.\n  - "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": ": external "
											},
											{
												"kind": "code",
												"text": "`hasMacros`"
											},
											{
												"kind": "text",
												"text": "-like "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " hook, called with\n    "
											},
											{
												"kind": "code",
												"text": "`macros(state, key, on, macros)`"
											},
											{
												"kind": "text",
												"text": ", the returned value used as shown here.\n  - "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": ": recurses with any value at the given "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": ", with\n    "
											},
											{
												"kind": "code",
												"text": "`hasMacros(state, key, on, macros[key])`"
											},
											{
												"kind": "text",
												"text": ".\n  - Otherwise, macros to be handled here, "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish returned."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "literal",
												"value": false
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 437,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 438,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "macros.js",
															"line": 86,
															"character": 25,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L86"
														}
													],
													"signatures": [
														{
															"id": 439,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 440,
																	"name": "",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isRest": true
																	},
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "intrinsic",
																			"name": "any"
																		}
																	}
																}
															],
															"type": {
																"type": "union",
																"types": [
																	{
																		"type": "literal",
																		"value": null
																	},
																	{
																		"type": "intrinsic",
																		"name": "string"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"defaultValue": "state.macros"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					]
				},
				{
					"id": 468,
					"name": "getGLSLListBase",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 140,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L140"
						}
					],
					"signatures": [
						{
							"id": 469,
							"name": "getGLSLListBase",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates an "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "-like declaration, as a "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " syntax "
									},
									{
										"kind": "code",
										"text": "`string`"
									},
									{
										"kind": "text",
										"text": " compatible\nwith versions 1-3.\n\nWorks around the lack of "
									},
									{
										"kind": "code",
										"text": "`const`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "s in "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " < 3. Used as the base for\nthe other "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " version list types, ensuring a common standard while\noffering further language features where available."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\ngetGLSLListBase('float', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = float(0);'+lf+\n'const int list_1 = float(1);'+lf+\n'const int list_2 = float(2);';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array-like declaration string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 470,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 471,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 472,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										],
										"name": "array"
									}
								},
								{
									"id": 473,
									"name": "qualify",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 474,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 475,
					"name": "getGLSL1ListLike",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 174,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L174"
						}
					],
					"signatures": [
						{
							"id": 476,
							"name": "getGLSL1ListLike",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates an array-like declaration, as a "
									},
									{
										"kind": "code",
										"text": "`GLSL1`"
									},
									{
										"kind": "text",
										"text": " syntax string.\n\nWorkaround for lack of "
									},
									{
										"kind": "code",
										"text": "`const`"
									},
									{
										"kind": "text",
										"text": " arrays in "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " < 3. Adds a lookup macro\nfunction; slow here, but standard."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLListBase",
												"target": 468
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\ngetGLSL1ListLike('float', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = float(0);'+lf+\n'const int list_1 = float(1);'+lf+\n'const int list_2 = float(2);\\n'+\n'// Index macro `list_i` (e.g: `list_i(0)`) may be slow, `+\n  'use name (e.g: `list_0`) if possible.\\n'+\n'#define list_i(i) ((i == 2)? list_2 : ((i == 1)? list_1 : list_0))\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array-like declaration string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 477,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 478,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 479,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 480,
									"name": "qualify",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 481,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 482,
					"name": "getGLSL1ListArray",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 212,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L212"
						}
					],
					"signatures": [
						{
							"id": 483,
							"name": "getGLSL1ListArray",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates an array declaration, as a "
									},
									{
										"kind": "code",
										"text": "`GLSL1`"
									},
									{
										"kind": "text",
										"text": " syntax string.\n\nLookup and meta macros are added for consistency with other versions."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLListBase",
												"target": 468
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\ngetGLSL1ListArray('vec3', 'list', [[1, 0, 0], [0, 2, 0], [0, 0, 3]]); // =>\n'const int list_l = 3;'+lf+\n'vec3 list_0 = vec3(1, 0, 0);'+lf+\n'vec3 list_1 = vec3(0, 2, 0);'+lf+\n'vec3 list_2 = vec3(0, 0, 3);'+lf+\n'vec3 list[list_l];'+lf+\n'list[0] = list_0;'+lf+\n'list[1] = list_1;'+lf+\n'list[2] = list_2;\\n'+\n'#define list_i(i) list[i]\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL1`"
											},
											{
												"kind": "text",
												"text": " array declaration string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 484,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 485,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 486,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 487,
									"name": "qualify",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 488,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 489,
					"name": "getGLSL3List",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 243,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L243"
						}
					],
					"signatures": [
						{
							"id": 490,
							"name": "getGLSL3List",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Generates an array declaration, as a "
									},
									{
										"kind": "code",
										"text": "`GLSL3`"
									},
									{
										"kind": "text",
										"text": " syntax string.\n\nLookup and meta macros are added for consistency with other versions."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLListBase",
												"target": 468
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\ngetGLSL3List('int', 'list', [0, 1, 2], 'const'); // =>\n'const int list_l = 3;'+lf+\n'const int list_0 = int(0);'+lf+\n'const int list_1 = int(1);'+lf+\n'const int list_2 = int(2);'+lf+\n'const int list[list_l] = int[list_l](list_0, list_1, list_2);\\n'+\n'#define list_i(i) list[i]\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL3`"
											},
											{
												"kind": "text",
												"text": " array declaration string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 491,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 492,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 493,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 494,
									"name": "qualify",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 495,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser, "
											},
											{
												"kind": "code",
												"text": "`type`"
											},
											{
												"kind": "text",
												"text": " by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "type"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 496,
					"name": "getGLSLList",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 300,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L300"
						}
					],
					"signatures": [
						{
							"id": 497,
							"name": "getGLSLList",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " definition of an array, and initialises it with the given\nvalues, type, and variable name.\n\nThe initialisation is valid "
									},
									{
										"kind": "code",
										"text": "`GLSL1`"
									},
									{
										"kind": "text",
										"text": " or greater syntax; but is written with\nescaped new-lines so it may be used in a single-line (e.g: for preprocessor\nmacros).\n\nFor a "
									},
									{
										"kind": "code",
										"text": "`qualify`"
									},
									{
										"kind": "text",
										"text": " of "
									},
									{
										"kind": "code",
										"text": "`const`"
									},
									{
										"kind": "text",
										"text": " on any "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " < 3, falls back to using non-array\nvariables with the index appended to "
									},
									{
										"kind": "code",
										"text": "`name`"
									},
									{
										"kind": "text",
										"text": ", since "
									},
									{
										"kind": "code",
										"text": "`const`"
									},
									{
										"kind": "text",
										"text": " arrays aren't\nsupported before "
									},
									{
										"kind": "code",
										"text": "`GLSL3`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSL3List",
												"target": 489
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSL1ListLike",
												"target": 475
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSL1ListArray",
												"target": 482
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\ngetGLSLList('int', 'test', [0, 1]); // =>\n'const int test_l = 2;'+lf+\n'int test_0 = int(0);'+lf+\n'int test_1 = int(1);'+lf+\n'int test[test_l];'+lf+\n'test[0] = test_0;'+lf+\n'test[1] = test_1;\\n'+\n'#define test_i(i) test[i]\\n';\n\ngetGLSLList('ivec2', 'vecs', [[1, 0], [0, 1]], 'const', 3); // =>\n'const int vecs_l = 2;'+lf+\n'ivec2 vecs_0 = ivec2(1, 0);'+lf+\n'ivec2 vecs_1 = ivec2(0, 1);'+lf+\n'const ivec2 vecs[vecs_l] = ivec2[vecs_l](vecs_0, vecs_1);\\n'+\n'#define vecs_i(i) vecs[i]\\n';\n\ngetGLSLList('int', 'listLike', [0, 1], 'const', 1); // =>\n'const int listLike_l = 2;'+lf+\n'const int listLike_0 = int(0);'+lf+\n'const int listLike_1 = int(1);\\n'+\n'// Index macro `listLike_i` (e.g: `listLike_i(0)`) may be slow, `+\n  'use name (e.g: `listLike_0`) if possible.\\n'+\n'#define listLike_i(i) ((i == 1)? listLike_1 : listLike_0)\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " (1 or 3) array or array-like declaration string."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 498,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list data-type."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 499,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " list variable."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 500,
									"name": "a",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												],
												"name": "array"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 501,
									"name": "qualify",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " qualifier, if needed (e.g: "
											},
											{
												"kind": "code",
												"text": "`const`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "''"
								},
								{
									"id": 502,
									"name": "glsl",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " version to target, if specified."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "1"
								},
								{
									"id": 503,
									"name": "init",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A data-type initialiser."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 441,
					"name": "macroValues",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 403,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L403"
						}
					],
					"signatures": [
						{
							"id": 442,
							"name": "macroValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the values within textures per-step, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThese macros define mappings from values to their textures and channels.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 431
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 459
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst state = { pre: '', steps: 2 };\nconst maps = { values: [2, 4, 1], channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nstate.maps = mapGroups({ ...maps, buffersMax: 1, packed: 0 });\nmacroValues(state); // =>\n'#define texture_0 0\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_1 1\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_2 2\\n'+\n'#define channels_2 r\\n'+\n'\\n'+\n'#define textures 3\\n'+\n'#define passes 3\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 1 });\nstate.size = { count: 2**5 };\nmacroValues(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define count 32\\n'+\n'#define textures 2\\n'+\n'#define passes 2\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n\n// Can bind more texture outputs per pass - values across fewer passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nmacroValues(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define count 32\\n'+\n'#define textures 2\\n'+\n'#define passes 1\\n'+\n'#define stepsPast 1\\n'+\n'#define steps 2\\n'+\n'\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the mappings from\n  values to "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s/channels."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 443,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 444,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 445,
					"name": "macroOutput",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 527,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L527"
						}
					],
					"signatures": [
						{
							"id": 446,
							"name": "macroOutput",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the outputs being drawn to per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThese macros define mappings from values to their outputs, if bound.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 431
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 459
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst maps = { values: [2, 4, 1], channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state = {\n  pre: '', passNow: 0,\n  maps: mapGroups({ ...maps, buffersMax: 1, packed: 0 })\n};\n\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_0 0\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 1 });\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_1 0\\n'+\n'#define attach_1 0\\n'+\n'#define output_1 gl_FragData[attach_1].rgba\\n'+\n'\\n';\n\n// Next pass in this step.\n++state.passNow;\nmacroOutput(state); // =>\n'#define passNow 1\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 0\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n';\n\n// Can bind more texture outputs per pass - values across fewer passes.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroOutput(state); // =>\n'#define passNow 0\\n'+\n'\\n'+\n'#define bound_1 0\\n'+\n'#define attach_1 0\\n'+\n'#define output_1 gl_FragData[attach_1].rgba\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 1\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 1\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros for the pass's bound outputs."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 447,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties for generating the macros. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": ":"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 448,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 449,
					"name": "macroSamples",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 688,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L688"
						}
					],
					"signatures": [
						{
							"id": 450,
							"name": "macroSamples",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the texture samples/reads per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThe macros define the mapping between the values and those they derive from,\nas step/texture locations in a "
									},
									{
										"kind": "code",
										"text": "`samples`"
									},
									{
										"kind": "text",
										"text": " list, and indexes to read values\nfrom sampled data in a "
									},
									{
										"kind": "code",
										"text": "`reads`"
									},
									{
										"kind": "text",
										"text": " list (once sampled into a "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " list, as in\n"
									},
									{
										"kind": "code",
										"text": "`macroTaps`"
									},
									{
										"kind": "text",
										"text": " or similar).\n\nThey're set up as function-like macros that may be called from the shader to\ninitialise the mappings arrays with a given name.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 453
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 431
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLList",
												"target": 496
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapStep",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 459
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\nconst maps = { values, derives, channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state =\n  { pre: '', maps: mapStep({ ...maps, buffersMax: 1, packed: 0 }) };\n\n// Uses the first pass by default.\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 1;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 2);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) samples_0\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n';\n\n// Next pass in this step - no derives, no samples nor reads.\nstate.passNow = 1;\nmacroSamples(state); // =>\n'';\n\n// Next pass in this step.\n++state.passNow;\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 4;'+lf+\n  'const ivec2 samples_0 = ivec2(1, 0);'+lf+\n  'const ivec2 samples_1 = ivec2(0, 0);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_3 = ivec2(0, 2);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) ((i == 3)? samples_3 : ((i == 2)? samples_2 '+\n  ': ((i == 1)? samples_1 : samples_0)))\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(0);'+lf+\n  'const int reads_2_1 = int(1);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(3);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n';\n\n// Automatically packed values - values across fewer textures/passes.\n// Can bind more texture outputs per pass - values across fewer passes.\n// Also fewer samples where values share derives or textures.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroSamples(state); // =>\n'#define useSamples'+lf+\n  'const int samples_l = 3;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_1 = ivec2(1, 1);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 0);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i) '+\n  '((i == 2)? samples_2 : ((i == 1)? samples_1 : samples_0))\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(1);'+lf+\n  'const int reads_2_1 = int(0);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(0);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the mappings for\n  samples and reads, for each value."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 451,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 452,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both the\n  hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 453,
					"name": "macroTaps",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 801,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L801"
						}
					],
					"signatures": [
						{
							"id": 454,
							"name": "macroTaps",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines the samples of textures per-pass, as "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macros.\n\nThe macros define the minimal sampling of textures for the data the active\npass's values derive from; creates a "
									},
									{
										"kind": "code",
										"text": "`data`"
									},
									{
										"kind": "text",
										"text": " list containing the samples; the\n"
									},
									{
										"kind": "code",
										"text": "`samples`"
									},
									{
										"kind": "text",
										"text": " list variable names are required as created by "
									},
									{
										"kind": "code",
										"text": "`macroSamples`"
									},
									{
										"kind": "text",
										"text": ".\n\nHandles sampling states in a flat array of textures, or merged in one texture\n(in both "
									},
									{
										"kind": "code",
										"text": "`sampler2D`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`sampler3D`"
									},
									{
										"kind": "text",
										"text": "/"
									},
									{
										"kind": "code",
										"text": "`sampler2DArray`"
									},
									{
										"kind": "text",
										"text": " where supported).\nMerging allows shaders to access past steps by non-constant lookups; e.g:\nattributes cause "
									},
									{
										"kind": "code",
										"text": "`sampler array index must be a literal expression`"
									},
									{
										"kind": "text",
										"text": " on\n"
									},
									{
										"kind": "code",
										"text": "`GLSL3`"
									},
									{
										"kind": "text",
										"text": " spec and other platforms (e.g: "
									},
									{
										"kind": "code",
										"text": "`D3D`"
									},
									{
										"kind": "text",
										"text": "); note these need texture repeat\nwrapping.\n\nThey're set up as function-like macros that may be called from the shader to\ninitialise the mappings arrays with a given name.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler array index must be a literal expression`"
											},
											{
												"kind": "text",
												"text": "](https://stackoverflow.com/a/60110986/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler2DArray`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_2d_array.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler3D`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_3d.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroSamples",
												"target": 449
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 431
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getGLSLList",
												"target": 496
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapStep",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.getUniforms"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "cacheDef",
												"target": 459
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\nconst maps = { values, derives, channelsMax: 4 };\n\n// No optimisations - values not packed, single texture output per pass.\nconst state =\n  { pre: '', maps: mapStep({ ...maps, buffersMax: 1, packed: 0 }) };\n\n// Uses the first pass by default.\nmacroTaps(state); // =>\n'@todo';\n\n// Next pass in this step - no derives, no samples nor reads.\nstate.passNow = 1;\nmacroTaps(state); // =>\n'';\n\n// Next pass in this step.\n++state.passNow;\nmacroTaps(state); // =>\n'@todo';\n\n// Automatically packed values - values across fewer textures/passes.\n// Can bind more texture outputs per pass - values across fewer passes.\n// Also fewer samples where values share derives or textures.\nstate.maps = mapGroups({ ...maps, buffersMax: 4 });\nstate.passNow = 0;\nmacroTaps(state); // =>\n'@todo';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the minimal\n  sampling of textures, to suit how states are stored (array of textures, or\n  all merged into one texture) and supported "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " language features."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 455,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties used to generate the macros. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 456,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 504,
					"name": "macroPass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 1113,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L1113"
						}
					],
					"signatures": [
						{
							"id": 505,
							"name": "macroPass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Defines all "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " preprocessor macro values, "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " samples, and outputs\nfor the active pass.\n\nThe macros define the mapping between the active values, their "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s and\nchannels, bound outputs, and other macros useful for a draw pass.\nCaches the result if "
									},
									{
										"kind": "code",
										"text": "`macros`"
									},
									{
										"kind": "text",
										"text": " generation is enabled, to help reuse shaders."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "hasMacros",
												"target": 431
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroValues",
												"target": 441
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroOutput",
												"target": 445
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 453
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroSamples",
												"target": 449
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapStep",
												"target": 80
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst values = [2, 4, 1];\nconst derives = [2, , [[1, 0], true]];\n\n// Automatically packed values - values across fewer `texture`s/passes.\n// Only a single `texture` output per pass - values across more passes.\nconst state = {\n  passNow: 0, steps: 2, size: { count: 2**5 },\n  maps: mapStep({ values, derives, channelsMax: 4, buffersMax: 1 })\n};\n\nmacroPass(state); // =>\n'#define gpgpu_texture_1 0\\n'+\n'#define gpgpu_channels_1 rgba\\n'+\n'\\n'+\n'#define gpgpu_texture_0 1\\n'+\n'#define gpgpu_channels_0 rg\\n'+\n'\\n'+\n'#define gpgpu_texture_2 1\\n'+\n'#define gpgpu_channels_2 b\\n'+\n'\\n'+\n'#define count 32\\n'+\n'#define gpgpu_textures 2\\n'+\n'#define gpgpu_passes 2\\n'+\n'#define gpgpu_stepsPast 1\\n'+\n'#define gpgpu_steps 2\\n'+\n'\\n'+\n'#define gpgpu_passNow 0\\n'+\n'\\n'+\n'#define gpgpu_bound_1 0\\n'+\n'#define gpgpu_attach_1 0\\n'+\n'#define gpgpu_output_1 gl_FragData[gpgpu_attach_1].rgba\\n'+\n'\\n';\n\n// Next pass and extra step.\n++state.steps;\n++state.passNow;\nstate.pre = '';\nmacroPass(state); // =>\n'#define texture_1 0\\n'+\n'#define channels_1 rgba\\n'+\n'\\n'+\n'#define texture_0 1\\n'+\n'#define channels_0 rg\\n'+\n'\\n'+\n'#define texture_2 1\\n'+\n'#define channels_2 b\\n'+\n'\\n'+\n'#define count 32\\n'+\n'#define textures 2\\n'+\n'#define passes 2\\n'+\n'#define stepsPast 2\\n'+\n'#define steps 3\\n'+\n'\\n'+\n'#define passNow 1\\n'+\n'\\n'+\n'#define bound_0 1\\n'+\n'#define attach_0 0\\n'+\n'#define output_0 gl_FragData[attach_0].rg\\n'+\n'\\n'+\n'#define bound_2 1\\n'+\n'#define attach_2 0\\n'+\n'#define output_2 gl_FragData[attach_2].b\\n'+\n'\\n'+\n'#define useSamples'+lf+\n  'const int samples_l = 3;'+lf+\n  'const ivec2 samples_0 = ivec2(0, 1);'+lf+\n  'const ivec2 samples_1 = ivec2(1, 1);'+lf+\n  'const ivec2 samples_2 = ivec2(0, 0);\\n'+\n'// Index macro `samples_i` (e.g: `samples_i(0)`) may be slow, '+\n  'use name (e.g: `samples_0`) if possible.\\n'+\n'#define samples_i(i)'+lf+\n  '((i == 2)? samples_2 : ((i == 1)? samples_1 : samples_0))\\n'+\n'\\n'+\n'#define useReads_0'+lf+\n  'const int reads_0_l = 1;'+lf+\n  'const int reads_0_0 = int(0);\\n'+\n'// Index macro `reads_0_i` (e.g: `reads_0_i(0)`) may be slow, '+\n  'use name (e.g: `reads_0_0`) if possible.\\n'+\n'#define reads_0_i(i) reads_0_0\\n'+\n'\\n'+\n'#define useReads_2'+lf+\n  'const int reads_2_l = 4;'+lf+\n  'const int reads_2_0 = int(1);'+lf+\n  'const int reads_2_1 = int(0);'+lf+\n  'const int reads_2_2 = int(2);'+lf+\n  'const int reads_2_3 = int(0);\\n'+\n'// Index macro `reads_2_i` (e.g: `reads_2_i(0)`) may be slow, '+\n  'use name (e.g: `reads_2_0`) if possible.\\n'+\n'#define reads_2_i(i) ((i == 3)? reads_2_3 : ((i == 2)? reads_2_2 '+\n  ': ((i == 1)? reads_2_1 : reads_2_0)))\\n'+\n'\\n'+\n'// States in a `sampler2D[]`; looks up 1D index and 2D `uv`.\\n'+\n'@todo';\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": " preprocessor macros defining the mappings for\n  values, "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s, channels, bound outputs of the active pass, etc. See\n  "
											},
											{
												"kind": "code",
												"text": "`macroValues`"
											},
											{
												"kind": "text",
												"text": ", "
											},
											{
												"kind": "code",
												"text": "`macroOutput`"
											},
											{
												"kind": "text",
												"text": ", and "
											},
											{
												"kind": "code",
												"text": "`macroSamples`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 506,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Properties for generating the macros. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": "\n  and "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 507,
									"name": "on",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any further macro "
											},
											{
												"kind": "code",
												"text": "`hooks`"
											},
											{
												"kind": "text",
												"text": " specifier; if given, both\n  the hook key and this specifier are checked (e.g: "
											},
											{
												"kind": "code",
												"text": "`key`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`key_on`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 508,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "macros.js",
							"line": 1118,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L1118"
						}
					],
					"target": 504
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						457,
						458,
						459,
						461
					]
				},
				{
					"title": "Functions",
					"children": [
						431,
						468,
						475,
						482,
						489,
						496,
						441,
						445,
						449,
						453,
						504
					]
				},
				{
					"title": "References",
					"children": [
						508
					]
				}
			],
			"sources": [
				{
					"fileName": "macros.js",
					"line": 19,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/macros.js#L19"
				}
			]
		},
		{
			"id": 52,
			"name": "maps",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " mappings for step/draw shaders input/output.\n\nThese maps show shaders how to make use of a system's supported features, how\nto pack/unpack their data from "
					},
					{
						"kind": "code",
						"text": "`framebuffer`"
					},
					{
						"kind": "text",
						"text": "s/"
					},
					{
						"kind": "code",
						"text": "`texture`"
					},
					{
						"kind": "text",
						"text": "s, perform minimal\nneeded samples to retrieve any past values they must derive from, etc.\n\nShaders may declare values they output, values they derive from, groupings of\nin/dependent values - without handling how these concerns map to the\nparticular system resources they're using.\n\nSystem limits/features/extensions are accounted for, to produce the most\nefficient mappings available with the least I/O when it comes to drawing\n(draw passes, texture samples, etc)."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Allow passes within/across textures; separate data and texture shapes."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 73,
					"name": "cache",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cache for optimisation."
							}
						]
					},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 31,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L31"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 74,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 75,
									"name": "packed",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "maps.js",
											"line": 31,
											"character": 23,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L31"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "never"
										}
									},
									"defaultValue": "[]"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										75
									]
								}
							],
							"sources": [
								{
									"fileName": "maps.js",
									"line": 31,
									"character": 21,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L31"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 76,
					"name": "validValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 42,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L42"
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "validValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Determines whether a given value is valid and can be stored within the\nchannels available."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Whether the given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " is valid."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 78,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A value to validate."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 79,
									"name": "channelsMax",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum channels available to store values."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "channelsMaxDef"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					]
				},
				{
					"id": 53,
					"name": "packValues",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 79,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L79"
						}
					],
					"signatures": [
						{
							"id": 54,
							"name": "packValues",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Minimise resource usage, order "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": " to pack into blocks of "
									},
									{
										"kind": "code",
										"text": "`channelsMax`"
									},
									{
										"kind": "text",
										"text": ";\ninterpreted as indexes into the given "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\n  packValues([1, 2, 3], 4, []); // =>\n  [2, 0, 1];\n\n  packValues([3, 2, 1], 4, []); // =>\n  [0, 2, 1];\n\n  packValues([4, 3, 2], 4, []); // =>\n  [0, 1, 2];\n\n  packValues([1, 1, 4, 2], 4, []); // =>\n  [2, 3, 0, 1];\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The indexes of the given "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": ", reordered\n  to pack into the fewest buckets of "
											},
											{
												"kind": "code",
												"text": "`channelsMax`"
											},
											{
												"kind": "text",
												"text": " size or less; stored in\n  the given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " array."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 55,
									"name": "values",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Each entry is how many interdependent channels\n  are grouped into one texture in one pass, separate entries may be across\n  one or more textures/passes. See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "array"
									}
								},
								{
									"id": 56,
									"name": "channelsMax",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The maximum number of channels\n  per texture. See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									},
									"defaultValue": "channelsMaxDef"
								},
								{
									"id": 57,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array to store the result; a new array by default."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									},
									"defaultValue": "[]"
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "array"
							}
						}
					]
				},
				{
					"id": 58,
					"name": "mapGroups",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 230,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L230"
						}
					],
					"signatures": [
						{
							"id": 59,
							"name": "mapGroups",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Groups the "
									},
									{
										"kind": "code",
										"text": "`values`"
									},
									{
										"kind": "text",
										"text": " of "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " data across draw passes and data textures."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "packValues",
												"target": 53
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\n  const x = 2;\n  const y = 4;\n  const z = 1;\n  const maps = { values: [x, y, z], channelsMax: 4 };\n\n  // No optimisations - values not packed, single texture output per pass.\n  mapGroups({ ...maps, buffersMax: 1, packed: false }); // =>\n  {\n    ...maps, packed: false,\n    textures: [[0], [1], [2]], // length === 3\n    passes: [[0], [1], [2]], // length === 3\n    valueToTexture: [0, 1, 2], valueToPass: [0, 1, 2],\n    textureToPass: [0, 1, 2]\n  };\n\n  // Automatically packed values - values across fewer textures/passes.\n  mapGroups({ ...maps, buffersMax: 1 }); // =>\n  {\n    ...maps, packed: [1, 0, 2],\n    textures: [[1], [0, 2]], // length === 2\n    passes: [[0], [1]], // length === 2\n    valueToTexture: [1, 0, 1], valueToPass: [1, 0, 1],\n    textureToPass: [0, 1]\n  };\n\n  // Can bind more texture outputs per pass - values across fewer passes.\n  mapGroups({ ...maps, buffersMax: 4 }); // =>\n  {\n    ...maps, packed: [1, 0, 2],\n    textures: [[1], [0, 2]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [1, 0, 1], valueToPass: [0, 0, 0],\n    textureToPass: [0, 0]\n  };\n\n  // Custom packed values - fuller control.\n  mapGroups({ ...maps, buffersMax: 4, packed: [0, 2, 1] }); // =>\n  {\n    ...maps, packed: [0, 2, 1],\n    textures: [[0, 2], [1]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [0, 1, 0], valueToPass: [0, 0, 0],\n    textureToPass: [0, 0]\n  };\n\n  // Merge dependent values - fuller control, but no map for merged values.\n  mapGroups({ ...maps, values: [x+z, y], buffersMax: 4 }); // =>\n  {\n    ...maps, packed: [1, 0],\n    textures: [[1], [0]], // length === 2\n    passes: [[0, 1]], // length === 1\n    valueToTexture: [1, 0], valueToPass: [0, 0],\n    textureToPass: [0, 0]\n  };\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "; how "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are grouped\n  per-texture per-pass per-step, meta information, and given parameters."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " Textures grouped into passes,\n  as "
											},
											{
												"kind": "code",
												"text": "`arrays`"
											},
											{
												"kind": "text",
												"text": " corresponding to "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s in separate draw passes; whose\n  values are indexes into "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " Values grouped into\n  textures, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s corresponding to "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " attachments, into\n  which "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are drawn; whose values are indexes into "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " The "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": ", as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.buffersMax`"
											},
											{
												"kind": "text",
												"text": " The max textures per pass, as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.channelsMax`"
											},
											{
												"kind": "text",
												"text": " The max channels per-texture, as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.valueToTexture`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " to the index of the data-texture containing it."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.valueToPass`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.values`"
											},
											{
												"kind": "text",
												"text": " to the index of the pass containing it."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textureToPass`"
											},
											{
												"kind": "text",
												"text": " Inverse map from each index of\n  "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " to the index of the pass containing it."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 60,
									"name": "maps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Initial maps settings; new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " if not given."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 62,
													"name": "values",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " where each\n  "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": " denotes how many value channels are grouped into one data-texture\n  in one draw pass (where any value map logic isn't handled here); each\n  separate number may be computed across one or more data-textures/passes.\n\n  Each value denotes the number of dependent channels to compute together;\n  separate values denote channels that are independent, and may be drawn in\n  the same or separate passes, depending on settings/support.\n\n  The order may affect the number of textures/passes needed; can maintain\n  order as-is, or use a more efficient "
															},
															{
																"kind": "code",
																"text": "`packed`"
															},
															{
																"kind": "text",
																"text": " order. See "
															},
															{
																"kind": "code",
																"text": "`packValues`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 189,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L189"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 63,
													"name": "channelsMax",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Maximum channels per\n  texture."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 201,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L201"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 64,
													"name": "buffersMax",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Maximum textures bound per\n  pass."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 203,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L203"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 65,
													"name": "packed",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "An "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of indexes into "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": "\n  packed into an order that best fits into blocks of "
															},
															{
																"kind": "code",
																"text": "`channelsMax`"
															},
															{
																"kind": "text",
																"text": " to\n  minimise resources; or "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y to use "
															},
															{
																"kind": "code",
																"text": "`values`"
															},
															{
																"kind": "text",
																"text": " in their given order; uses\n  "
															},
															{
																"kind": "code",
																"text": "`packValues`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 205,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L205"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														62,
														63,
														64,
														65
													]
												}
											],
											"sources": [
												{
													"fileName": "maps.js",
													"line": 189,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L189"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 66,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the results; modifies "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": "\n  if not given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 67,
					"name": "mapSamples",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 379,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L379"
						}
					],
					"signatures": [
						{
							"id": 68,
							"name": "mapSamples",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maps the minimal set of texture reads to derive the next state of values from\na past state of values they depend upon."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\n  const maps = mapGroups({\n    // See `mapGroups` examples for resulting maps.\n    values: [2, 4, 1], channelsMax: 4, buffersMax: 1, packed: false,\n    // Derived step/value indexes, per-value; sample entries include:\n    derives: [\n      // Single...\n      2,\n      // Empty...\n      ,\n      // Multiple...\n      [\n        // Defined step...\n        [1, 0],\n        // All values at any given level/step...\n        true\n      ]\n    ]\n  });\n\n  mapSamples(maps); // =>\n  {\n    ...maps,\n    // Minimum texture samples for values; nested per-pass, per-value.\n    // Deepest arrays are step/texture index pairs into `maps.textures`.\n    samples: [\n      [[0, 2]],\n      null,\n      [[1, 0], [0, 0], [0, 1], [0, 2]]\n    ],\n    // Value indexes into `to.samples`; nested per-pass, per-value.\n    // Map from a value index to data it needs in the minimal samples.\n    reads: [\n      [[0]],\n      null,\n      [null, null, [0, 1, 2, 3]]\n    ]\n  };\n```"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " object, with resulting maps added for\n  any given "
											},
											{
												"kind": "code",
												"text": "`maps.derives`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.samples]`"
											},
											{
												"kind": "text",
												"text": " Map of the minimum\n  set of indexes into "
											},
											{
												"kind": "code",
												"text": "`maps.textures`"
											},
											{
												"kind": "text",
												"text": " that need to be sampled per-pass,\n  to get all "
											},
											{
												"kind": "code",
												"text": "`derives`"
											},
											{
												"kind": "text",
												"text": " needed for each value of "
											},
											{
												"kind": "code",
												"text": "`maps.values`"
											},
											{
												"kind": "text",
												"text": " of each\n  pass of "
											},
											{
												"kind": "code",
												"text": "`maps.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.reads]`"
											},
											{
												"kind": "text",
												"text": " Sparse map from\n  each value of "
											},
											{
												"kind": "code",
												"text": "`derives`"
											},
											{
												"kind": "text",
												"text": " to its step and texture indexes in "
											},
											{
												"kind": "code",
												"text": "`to.samples`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.derives]`"
											},
											{
												"kind": "text",
												"text": " How new values derive from past values, as given."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 69,
									"name": "maps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "How values are grouped per-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " per-pass per-step.\n  See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 70,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 71,
													"name": "derives",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How any new values derive from past\n  values. If not given "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y, this returns with no changes."
															}
														]
													},
													"sources": [
														{
															"fileName": "maps.js",
															"line": 336,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L336"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "literal",
																"value": true
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														71
													]
												}
											],
											"sources": [
												{
													"fileName": "maps.js",
													"line": 336,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L336"
												}
											]
										}
									}
								},
								{
									"id": 72,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The object to store the result in; "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": " if not\n  given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 80,
					"name": "mapStep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 455,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L455"
						}
					],
					"signatures": [
						{
							"id": 81,
							"name": "mapStep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Maps a full step, creates maps grouping given values per-"
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " per-pass\nper-step, and minimal samples and reads if new values derive from past ones."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapSamples",
												"target": 67
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " object; how "
											},
											{
												"kind": "code",
												"text": "`values`"
											},
											{
												"kind": "text",
												"text": " are grouped\n  per-"
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " per-pass per-step, meta information, and given parameters;\n  and minimal samples and reads for any given "
											},
											{
												"kind": "code",
												"text": "`maps.derives`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 82,
									"name": "maps",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Input value maps and settings."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								},
								{
									"id": 83,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the results; modifies "
											},
											{
												"kind": "code",
												"text": "`maps`"
											},
											{
												"kind": "text",
												"text": "\n  if not given."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "maps"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "maps.js",
							"line": 458,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L458"
						}
					],
					"target": 80
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						73
					]
				},
				{
					"title": "Functions",
					"children": [
						76,
						53,
						58,
						67,
						80
					]
				},
				{
					"title": "References",
					"children": [
						84
					]
				}
			],
			"sources": [
				{
					"fileName": "maps.js",
					"line": 22,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/maps.js#L22"
				}
			]
		},
		{
			"id": 1,
			"name": "size",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"children": [
				{
					"id": 2,
					"name": "getWidth",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 30,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L30"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "getWidth",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the given width, for various properties in order of precedence."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The width as given in one of the expected properties, or\n  any given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " number, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if no width could be resolved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 4,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size (width) "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " containing it."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 5,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 6,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 17,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L17"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 7,
													"name": "w",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 18,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L18"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 8,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 19,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L19"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 9,
													"name": "shape",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Shape (width) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 20,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L20"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 10,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Size (width) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 22,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L22"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 11,
													"name": "side",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width and height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 24,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L24"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 12,
													"name": "ʼ0ʼ",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`width`"
															},
															{
																"kind": "text",
																"text": "; supersedes "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": " itself."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 25,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L25"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														6,
														7,
														8,
														9,
														10,
														11,
														12
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 17,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L17"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 13,
					"name": "getHeight",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 57,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L57"
						}
					],
					"signatures": [
						{
							"id": 14,
							"name": "getHeight",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the given height, for various properties in order of precedence."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The height as given in one of the expected properties, or\n  any given "
											},
											{
												"kind": "code",
												"text": "`value`"
											},
											{
												"kind": "text",
												"text": " number, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish if no height could be resolved."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 15,
									"name": "value",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size (height) "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": ", or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " containing it."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 17,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 44,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L44"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 18,
													"name": "h",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 45,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L45"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 19,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 46,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L46"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 20,
													"name": "shape",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Shape (height) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 47,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L47"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 21,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Size (height) "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": ", or an "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": "\n  containing it; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 49,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 22,
													"name": "side",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Width and height; supersedes further aliases."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 51,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L51"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 23,
													"name": "ʼ1ʼ",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`height`"
															},
															{
																"kind": "text",
																"text": "; supersedes "
															},
															{
																"kind": "code",
																"text": "`value`"
															},
															{
																"kind": "text",
																"text": " itself."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 52,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L52"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														17,
														18,
														19,
														20,
														21,
														22,
														23
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 44,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L44"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 24,
					"name": "countDrawIndexes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 83,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L83"
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "countDrawIndexes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gives the number of indexes to draw a full state, for various parameters.\nEffectively equivalent to "
									},
									{
										"kind": "code",
										"text": "`gl_VertexID`"
									},
									{
										"kind": "text",
										"text": " in "
									},
									{
										"kind": "code",
										"text": "`WebGL2`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getWidth",
												"target": 2
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getHeight",
												"target": 13
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The number of indexes needed to draw a full state; each\n  entry of a data-texture (its area, equivalent to "
											},
											{
												"kind": "code",
												"text": "`state.size.count`"
											},
											{
												"kind": "text",
												"text": ")."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 26,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Size "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of data resources, or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "\n  containing it; width if "
											},
											{
												"kind": "code",
												"text": "`height`"
											},
											{
												"kind": "text",
												"text": " is given as a second parameter.\n  See "
											},
											{
												"kind": "code",
												"text": "`getWidth`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`getHeight`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 27,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 28,
													"name": "count",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": " of entries of data resources."
															}
														]
													},
													"sources": [
														{
															"fileName": "size.js",
															"line": 76,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L76"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														28
													]
												}
											],
											"sources": [
												{
													"fileName": "size.js",
													"line": 76,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L76"
												}
											]
										}
									},
									"defaultValue": "1"
								},
								{
									"id": 29,
									"name": "height",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Height "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of data resources, or an "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": "\n  containing it."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "1"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				},
				{
					"id": 30,
					"name": "getDrawIndexes",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 95,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L95"
						}
					],
					"signatures": [
						{
							"id": 31,
							"name": "getDrawIndexes",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gives the array of indexes needed to draw a full state."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array of indexes for drawing all data-texture\n  entries, numbered "
											},
											{
												"kind": "code",
												"text": "`0`"
											},
											{
												"kind": "text",
												"text": " to "
											},
											{
												"kind": "code",
												"text": "`size-1`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 32,
									"name": "size",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`number`"
											},
											{
												"kind": "text",
												"text": " of entries in each data-texture; or an\n  "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " of size/type of data resources."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "array"
							}
						}
					]
				},
				{
					"id": 33,
					"name": "getScaled",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "size.js",
							"line": 105,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L105"
						}
					],
					"signatures": [
						{
							"id": 34,
							"name": "getScaled",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "2 raised to the given numeric power, or "
									},
									{
										"kind": "code",
										"text": "`null`"
									},
									{
										"kind": "text",
										"text": " if not given."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "2 raised to the given numeric power, or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": " if not given."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 35,
									"name": "scale",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The power to raise 2 to."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						2,
						13,
						24,
						30,
						33
					]
				}
			],
			"sources": [
				{
					"fileName": "size.js",
					"line": 6,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/size.js#L6"
				}
			]
		},
		{
			"id": 111,
			"name": "state",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " state and "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " resources.\n\nHandles "
					},
					{
						"kind": "code",
						"text": "`framebuffer`"
					},
					{
						"kind": "text",
						"text": "s, "
					},
					{
						"kind": "code",
						"text": "`texture`"
					},
					{
						"kind": "text",
						"text": "s; and meta info."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "Allow passes into or across textures; separate data and texture shapes."
							}
						]
					},
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "In-place updates of complex resources and meta info."
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 112,
					"name": "getState",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "state.js",
							"line": 344,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L344"
						}
					],
					"signatures": [
						{
							"id": 113,
							"name": "getState",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set up the "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " resources and meta info for a state of a number data."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```\n  const api = {\n    framebuffer: ({ depth, stencil, width, height, color }) => null,\n    texture: ({ type, min, mag, wrap, width, height, channels }) => null\n  };\n\n  // Example with `webgl_draw_buffers` extension support, for 4 buffers.\n  let maps = mapGroups({ values: [1, 2, 3], buffersMax: 4, packed: 0 });\n  let state = { steps: 2, side: 10, maps };\n\n  const s0 = getState(api, state, {}); // =>\n  {\n    ...state, passNow: undefined, stepNow: undefined,\n    size: {\n      steps: 2, passes: 2, textures: 4,\n      width: 10, height: 10, shape: [10, 10], count: 100\n    },\n    steps: [[s0.passes[0][0].framebuffer], [s0.passes[1][0].framebuffer]],\n    // This setup results in fewer passes, as more buffers can be bound.\n    passes: [\n      [\n        {\n          framebuffer: api.framebuffer(s0.passes[0][0]),\n          color: [s0.textures[0][0].texture, s0.textures[0][1].texture],\n          map: [0, 1], // maps.passes[0]\n          entry: 0, index: 0, step: 0,\n          depth: false, stencil: false, width: 10, height: 10\n        }\n      ],\n      [\n        {\n          framebuffer: api.framebuffer(s0.passes[1][0]),\n          color: [s0.textures[1][0].texture, s0.textures[1][1].texture],\n          map: [0, 1], // maps.passes[0]\n          entry: 1, index: 0, step: 1,\n          depth: false, stencil: false, width: 10, height: 10\n        }\n      ]\n    ],\n    textures: [\n      [\n        {\n          texture: api.texture(s0.textures[0][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 0, index: 0, step: 0, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s0.textures[0][1]),\n          map: [2], // maps.textures[1]\n          entry: 1, index: 1, step: 0, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ],\n      [\n        {\n          texture: api.texture(s0.textures[1][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 2, index: 0, step: 1, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s0.textures[1][1]),\n          map: [2], // maps.textures[1]\n          entry: 3, index: 1, step: 1, pass: 0,\n          type: 'float', width: 10, height: 10, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ]\n    ]\n  };\n\n  // Example with no `webgl_draw_buffers` extension support, only 1 buffer.\n  maps = mapGroups({ values: [1, 2, 3], buffersMax: 1, packed: 0 });\n  state = { type: 'uint8', steps: 2, scale: 5, maps, stepNow: 1 };\n\n  const s1 = getState(api, state, {}); // =>\n  {\n    ...state, passNow: undefined, stepNow: 1,\n    size: {\n      steps: 2, passes: 4, textures: 4,\n      width: 32, height: 32, shape: [32, 32], count: 1024\n    },\n    steps: [\n      [s1.passes[0][0].framebuffer, s1.passes[0][1].framebuffer],\n      [s1.passes[1][0].framebuffer, s1.passes[1][1].framebuffer]\n    ],\n    // This setup results in more passes, as fewer buffers can be bound.\n    passes: [\n      [\n        {\n          framebuffer: api.framebuffer(s1.passes[0][0]),\n          color: [s1.textures[0][0].texture],\n          map: [0], // maps.passes[0]\n          entry: 0, index: 0, step: 0,\n          depth: false, stencil: false, width: 32, height: 32\n        },\n        {\n          framebuffer: api.framebuffer(s1.passes[0][1]),\n          color: [s1.textures[0][1].texture],\n          map: [1], // maps.passes[1]\n          entry: 1, index: 1, step: 0,\n          depth: false, stencil: false, width: 32, height: 32\n        }\n      ],\n      [\n        {\n          framebuffer: api.framebuffer(s1.passes[1][0]),\n          color: [s1.textures[1][0].texture],\n          map: [0], // maps.passes[0]\n          entry: 2, index: 0, step: 1,\n          depth: false, stencil: false, width: 32, height: 32\n        },\n        {\n          framebuffer: api.framebuffer(s1.passes[1][1]),\n          color: [s1.textures[1][1].texture],\n          map: [1], // maps.passes[1]\n          entry: 3, index: 1, step: 1,\n          depth: false, stencil: false, width: 32, height: 32\n        }\n      ]\n    ],\n    textures: [\n      [\n        {\n          texture: api.texture(s1.textures[0][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 0, index: 0, step: 0, pass: 0,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s1.textures[0][1]),\n          map: [2], // maps.textures[1]\n          entry: 1, index: 1, step: 0, pass: 1,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ],\n      [\n        {\n          texture: api.texture(s1.textures[1][0]),\n          map: [0, 1], // maps.textures[0]\n          entry: 2, index: 0, step: 1, pass: 0,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        },\n        {\n          texture: api.texture(s1.textures[1][1]),\n          map: [2], // maps.textures[1]\n          entry: 3, index: 1, step: 1, pass: 1,\n          type: 'uint8', width: 32, height: 32, channels: 4,\n          min: 'nearest', mag: 'nearest', wrap: 'clamp'\n        }\n      ]\n    ]\n  };\n```"
											}
										]
									},
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Example using "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "texture",
												"target": 292
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "framebuffer",
												"target": 273
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapSamples",
												"target": 67
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroSamples",
												"target": 449
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 453
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroPass",
												"target": 504
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getWidth",
												"target": 2
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getHeight",
												"target": 13
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getScaled",
												"target": 33
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler array index must be a literal expression`"
											},
											{
												"kind": "text",
												"text": "](https://stackoverflow.com/a/60110986/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler2DArray`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_2d_array.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "["
											},
											{
												"kind": "code",
												"text": "`sampler3D`"
											},
											{
												"kind": "text",
												"text": "](https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/texture_3d.html)"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The state object, set up with the data resources and\n  meta information, for use with "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": " and drawing:"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.maps`"
											},
											{
												"kind": "text",
												"text": " Any given\n  "
											},
											{
												"kind": "code",
												"text": "`state.maps`"
											},
											{
												"kind": "text",
												"text": ". See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " The "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s per-step, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of objects of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s\n  and meta info. See "
											},
											{
												"kind": "code",
												"text": "`to.maps.textures`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " Passes per step, as "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of objects of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s,\n  referencing "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": ", and meta info. See "
											},
											{
												"kind": "code",
												"text": "`to.maps.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": "\n  Hierarchy of steps of state, as an "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": " of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s from\n  "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": ", with "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": "s of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s from "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": ", and meta\n  information; set up here, or the given "
											},
											{
												"kind": "code",
												"text": "`state.steps`"
											},
											{
												"kind": "text",
												"text": " if it's an "
											},
											{
												"kind": "code",
												"text": "`array`"
											},
											{
												"kind": "text",
												"text": ".\n  State data may be drawn into the "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s accordingly.\n  See "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge]`"
											},
											{
												"kind": "text",
												"text": " If merging, a given or new merged\n  "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " and copier "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": ", with meta info. See "
											},
											{
												"kind": "code",
												"text": "`getStep`"
											},
											{
												"kind": "text",
												"text": " and\n  "
											},
											{
												"kind": "code",
												"text": "`macroTaps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge.all]`"
											},
											{
												"kind": "text",
												"text": " Any given\n  "
											},
											{
												"kind": "code",
												"text": "`state.merge.all`"
											},
											{
												"kind": "text",
												"text": ", or newly-created merged "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": " and meta info."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.merge.next]`"
											},
											{
												"kind": "text",
												"text": " Any\n  given "
											},
											{
												"kind": "code",
												"text": "`state.merge.next`"
											},
											{
												"kind": "text",
												"text": ", or newly-created "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": " and meta info; for\n  copying each pass's data into the "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "d "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size`"
											},
											{
												"kind": "text",
												"text": " Size/type information of the created resources."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.type`"
											},
											{
												"kind": "text",
												"text": " Data type of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.depth`"
											},
											{
												"kind": "text",
												"text": " Whether "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s attach depth."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.stencil`"
											},
											{
												"kind": "text",
												"text": " Whether "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s attach stencil."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.channelsMin`"
											},
											{
												"kind": "text",
												"text": " Minimum channels in any "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.steps`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": " in the main flow."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.passes`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": " in "
											},
											{
												"kind": "code",
												"text": "`to.steps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.framebuffers`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s created."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.textures`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`to.textures`"
											},
											{
												"kind": "text",
												"text": " in "
											},
											{
												"kind": "code",
												"text": "`to.passes`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.colors`"
											},
											{
												"kind": "text",
												"text": " Number of "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s created."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.width`"
											},
											{
												"kind": "text",
												"text": " Width of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.height`"
											},
											{
												"kind": "text",
												"text": " Height of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.shape`"
											},
											{
												"kind": "text",
												"text": " Shape of "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s and\n  "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "s, as "
											},
											{
												"kind": "code",
												"text": "`[to.size.width, to.size.height]`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.size.count`"
											},
											{
												"kind": "text",
												"text": " Number of entries in each "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.size.merge]`"
											},
											{
												"kind": "text",
												"text": "\n  Any size/type information about any created or given "
											},
											{
												"kind": "code",
												"text": "`merge`"
											},
											{
												"kind": "text",
												"text": "d "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.stepNow`"
											},
											{
												"kind": "text",
												"text": " The currently active state step, as given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.passNow`"
											},
											{
												"kind": "text",
												"text": " The currently active draw pass, as given."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 114,
									"name": "api",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources."
											}
										]
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 115,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 116,
													"name": "texture",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function creating "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 210,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L210"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 117,
													"name": "framebuffer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function creating "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": "s."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 211,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L211"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														116,
														117
													]
												}
											],
											"sources": [
												{
													"fileName": "state.js",
													"line": 210,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L210"
												}
											]
										}
									}
								},
								{
									"id": 118,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The state parameters."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 119,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 120,
													"name": "width",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data width, aliases follow in order\n  of precedence. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 214,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L214"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 121,
													"name": "w",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 216,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L216"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 122,
													"name": "x",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 217,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L217"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 123,
													"name": "ʼ0ʼ",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.width`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 218,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L218"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 124,
													"name": "height",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data height, aliases follow in order\n  of precedence. See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 220,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L220"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 125,
													"name": "h",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 222,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L222"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 126,
													"name": "y",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 223,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L223"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 127,
													"name": "ʼ1ʼ",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Alias of "
															},
															{
																"kind": "code",
																"text": "`state.height`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 224,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L224"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 128,
													"name": "shape",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 225,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L225"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 129,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size. See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 226,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L226"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 130,
													"name": "side",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size of width/height.\n  See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 227,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L227"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 131,
													"name": "scale",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Data size of width/height as a square\n  power-of-two size, 2 raised to this power. See "
															},
															{
																"kind": "code",
																"text": "`getScaled`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 229,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L229"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 132,
													"name": "steps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How many steps of state to\n  track, or the list of states if already set up."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 232,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L232"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												},
												{
													"id": 133,
													"name": "maps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How "
															},
															{
																"kind": "code",
																"text": "`state.maps.values`"
															},
															{
																"kind": "text",
																"text": " are grouped\n  per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass per-step. See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 234,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L234"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 134,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 135,
																			"name": "values",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 236,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L236"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 136,
																			"name": "channelsMin",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 239,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L239"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 137,
																			"name": "textures",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 242,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L242"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				135,
																				136,
																				137
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "state.js",
																			"line": 236,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L236"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 138,
													"name": "stepNow",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currently active state step, if any."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 245,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L245"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 139,
													"name": "passNow",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currently active draw pass, if any."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 246,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L246"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 140,
													"name": "type",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " data type value."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 247,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L247"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 141,
													"name": "min",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " minification filter value."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 248,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L248"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 142,
													"name": "mag",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " magnification filter value."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 249,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L249"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 143,
													"name": "wrap",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " wrap mode value."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 250,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L250"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 144,
													"name": "depth",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": " depth attachment, or\n  a flag for whether it should be created."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 251,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L251"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 145,
													"name": "stencil",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": " stencil\n  attachment, or a flag for whether it should be created."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 253,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L253"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 146,
													"name": "merge",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Whether to merge states into\n  one "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "; "
															},
															{
																"kind": "code",
																"text": "`true`"
															},
															{
																"kind": "text",
																"text": "y handles merging here, with any given properties used\n  as-is (the merged "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " already set up); "
															},
															{
																"kind": "code",
																"text": "`false`"
															},
															{
																"kind": "text",
																"text": "y uses un-merged\n  "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": "s of "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s.\n\n  Merging allows shaders to access past steps by non-constant lookups; e.g:\n  attributes cause "
															},
															{
																"kind": "code",
																"text": "`\"sampler array index must be a literal expression\"`"
															},
															{
																"kind": "text",
																"text": " on\n  "
															},
															{
																"kind": "code",
																"text": "`GLSL3`"
															},
															{
																"kind": "text",
																"text": " spec and some platforms (e.g: "
															},
															{
																"kind": "code",
																"text": "`D3D`"
															},
															{
																"kind": "text",
																"text": "); but takes more work to copy\n  the last pass's bound "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "/s to merge into the past "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": ", so\n  should be used to variably access past steps or avoid limits of "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": "s of\n  "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s.\n  Only this merged past "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " and those bound in an active pass are\n  created, as upon each pass the output will be copied to the past "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": ",\n  and bound "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s reused in the next pass.\n  If not merging, all state is as output by its pass in its own one of the\n  "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": "s of "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s.\n\n  The default merged "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " is laid out as "
															},
															{
																"kind": "code",
																"text": "`[texture, step]`"
															},
															{
																"kind": "text",
																"text": " on the\n  "
															},
															{
																"kind": "code",
																"text": "`[x, y]`"
															},
															{
																"kind": "text",
																"text": " axes, respectively; if other layouts are needed, the merge\n  "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " can be given here to be used as-is, and the merging/copying and\n  lookup logic in their respective hooks. See "
															},
															{
																"kind": "code",
																"text": "`getStep`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`macroTaps`"
															},
															{
																"kind": "text",
																"text": ".\n  If a merge "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " is given, size information is interpreted in a similar\n  way and precedence as it is from "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": ". See "
															},
															{
																"kind": "code",
																"text": "`getWidth`"
															},
															{
																"kind": "text",
																"text": " and "
															},
															{
																"kind": "code",
																"text": "`getHeight`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "state.js",
															"line": 256,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L256"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 147,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 148,
																			"name": "width",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 280,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L280"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 149,
																			"name": "w",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 282,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L282"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 150,
																			"name": "x",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 283,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L283"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 151,
																			"name": "ʼ0ʼ",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 284,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L284"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 152,
																			"name": "height",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 285,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L285"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 153,
																			"name": "h",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 287,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L287"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 154,
																			"name": "y",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 288,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L288"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 155,
																			"name": "ʼ1ʼ",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 290,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L290"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 156,
																			"name": "shape",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 291,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L291"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 157,
																			"name": "size",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 292,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L292"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 158,
																			"name": "side",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 293,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L293"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 159,
																			"name": "scale",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "state.js",
																					"line": 294,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L294"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				148,
																				149,
																				150,
																				151,
																				152,
																				153,
																				154,
																				155,
																				156,
																				157,
																				158,
																				159
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "state.js",
																			"line": 280,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L280"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														120,
														121,
														122,
														123,
														124,
														125,
														126,
														127,
														128,
														129,
														130,
														131,
														132,
														133,
														138,
														139,
														140,
														141,
														142,
														143,
														144,
														145,
														146
													]
												}
											],
											"sources": [
												{
													"fileName": "state.js",
													"line": 214,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L214"
												}
											]
										}
									},
									"defaultValue": "{}"
								},
								{
									"id": 160,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The state object to set up. Modifies the given\n  "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": " object by default."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "state"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 161,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "state.js",
							"line": 534,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L534"
						}
					],
					"target": 112
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						112
					]
				},
				{
					"title": "References",
					"children": [
						161
					]
				}
			],
			"sources": [
				{
					"fileName": "state.js",
					"line": 13,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/state.js#L13"
				}
			]
		},
		{
			"id": 185,
			"name": "step",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " update step.\n\nConnects inputs to the "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " state and renders an update step."
					}
				],
				"blockTags": [
					{
						"tag": "@todo",
						"content": [
							{
								"kind": "text",
								"text": "[Fix "
							},
							{
								"kind": "code",
								"text": "`@callback`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@typedef`"
							},
							{
								"kind": "text",
								"text": "](https://github.com/TypeStrong/typedoc/issues/1896):\n  nested "
							},
							{
								"kind": "code",
								"text": "`@param`"
							},
							{
								"kind": "text",
								"text": "; omits "
							},
							{
								"kind": "code",
								"text": "`@return`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@see`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`@this`"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 226,
					"name": "clearPassDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default clear settings to clear each pass's "
							},
							{
								"kind": "code",
								"text": "`framebuffer`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "clear",
										"target": 305
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "framebuffer",
										"target": 273
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@prop",
								"name": "framebuffer",
								"content": [
									{
										"kind": "text",
										"text": "Any "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " to clear, set upon each\n  pass."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 30,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L30"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 227,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 228,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "step.js",
											"line": 26,
											"character": 11,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L26"
										}
									],
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											},
											{
												"type": "literal",
												"value": 0
											}
										]
									}
								},
								{
									"id": 229,
									"name": "depth",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "step.js",
											"line": 26,
											"character": 27,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L26"
										}
									],
									"type": {
										"type": "literal",
										"value": 1
									}
								},
								{
									"id": 230,
									"name": "stencil",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "step.js",
											"line": 26,
											"character": 35,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L26"
										}
									],
									"type": {
										"type": "literal",
										"value": 0
									}
								},
								{
									"id": 231,
									"name": "framebuffer",
									"kind": 1024,
									"kindString": "Property",
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "step.js",
											"line": 26,
											"character": 45,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L26"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										228,
										229,
										230,
										231
									]
								}
							],
							"sources": [
								{
									"fileName": "step.js",
									"line": 26,
									"character": 10,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L26"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 232,
					"name": "copyFrameDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`framebuffer.call`"
							},
							{
								"kind": "text",
								"text": " options, to bind a given "
							},
							{
								"kind": "code",
								"text": "`color`"
							},
							{
								"kind": "text",
								"text": " to it."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "updateMerge",
										"target": 186
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "framebuffer"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "framebuffer.call"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@prop",
								"name": "color",
								"content": [
									{
										"kind": "text",
										"text": "Any "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " to bind as a "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " output."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 41,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L41"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 233,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 234,
									"name": "color",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "step.js",
											"line": 41,
											"character": 30,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L41"
										}
									],
									"type": {
										"type": "literal",
										"value": null
									},
									"defaultValue": "null"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										234
									]
								}
							],
							"sources": [
								{
									"fileName": "step.js",
									"line": 41,
									"character": 28,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L41"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 235,
					"name": "copyImageDef",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Default "
							},
							{
								"kind": "code",
								"text": "`texture.subimage`"
							},
							{
								"kind": "text",
								"text": " options, to bind a given "
							},
							{
								"kind": "code",
								"text": "`color`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "updateMerge",
										"target": 186
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "texture"
									},
									{
										"kind": "text",
										"text": "\n"
									},
									{
										"kind": "text",
										"text": " - "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "texture.subimage"
									},
									{
										"kind": "text",
										"text": "\n"
									}
								]
							},
							{
								"tag": "@prop",
								"name": "copy",
								"content": [
									{
										"kind": "text",
										"text": "Indicates the"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "step.js",
							"line": 52,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L52"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 236,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 237,
									"name": "copy",
									"kind": 1024,
									"kindString": "Property",
									"flags": {},
									"sources": [
										{
											"fileName": "step.js",
											"line": 52,
											"character": 30,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L52"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "true"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										237
									]
								}
							],
							"sources": [
								{
									"fileName": "step.js",
									"line": 52,
									"character": 28,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L52"
								}
							]
						}
					},
					"defaultValue": "..."
				},
				{
					"id": 238,
					"name": "getPass",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 67,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L67"
						}
					],
					"signatures": [
						{
							"id": 239,
							"name": "getPass",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Convenience to get the currently active "
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Any active step's active pass object, of the given "
											},
											{
												"kind": "code",
												"text": "`state`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 240,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state."
											}
										]
									},
									"originalName": "__namedParameters",
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 241,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 242,
													"name": "passes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Passes per step. See "
															},
															{
																"kind": "code",
																"text": "`getState`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 61,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L61"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "array",
															"elementType": {
																"type": "intrinsic",
																"name": "any"
															}
														}
													}
												},
												{
													"id": 243,
													"name": "stepNow",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any active state step index. See "
															},
															{
																"kind": "code",
																"text": "`getStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 62,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L62"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 244,
													"name": "passNow",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any active draw pass index. See "
															},
															{
																"kind": "code",
																"text": "`getStep`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 63,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L63"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														242,
														243,
														244
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 61,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L61"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 186,
					"name": "updateMerge",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 99,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L99"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "updateMerge",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " update, called upon each pass.\n\nCopies the active pass's output into the merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": ", from each of its\n"
									},
									{
										"kind": "code",
										"text": "`framebuffer`"
									},
									{
										"kind": "text",
										"text": " attachments one by one (to support multiple draw buffers).\nMatches the lookup logic defined in "
									},
									{
										"kind": "code",
										"text": "`macroTaps`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Update docs."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "[SO reading from multiple "
											},
											{
												"kind": "code",
												"text": "`framebuffer`"
											},
											{
												"kind": "text",
												"text": "s](https://stackoverflow.com/a/34160982/716898)"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getPass",
												"target": 238
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.framebuffer"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.texture"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 453
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The merged "
											},
											{
												"kind": "code",
												"text": "`texture`"
											},
											{
												"kind": "text",
												"text": ", updated by the active pass's output;\n  matches the lookup logic defined in "
											},
											{
												"kind": "code",
												"text": "`macroTaps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 188,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state of the active pass."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 189,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 190,
													"name": "passes",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Passes per\n  step; any active one's found via "
															},
															{
																"kind": "code",
																"text": "`getPass`"
															},
															{
																"kind": "text",
																"text": ", with:\n  - "
															},
															{
																"kind": "code",
																"text": "`color`"
															},
															{
																"kind": "text",
																"text": ": "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s.\n  - "
															},
															{
																"kind": "code",
																"text": "`map`"
															},
															{
																"kind": "text",
																"text": ": "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of "
															},
															{
																"kind": "code",
																"text": "`number`"
															},
															{
																"kind": "text",
																"text": "s, showing how the "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s are grouped\n    per-pass. See "
															},
															{
																"kind": "code",
																"text": "`getPass`"
															},
															{
																"kind": "text",
																"text": ", "
															},
															{
																"kind": "code",
																"text": "`getState`"
															},
															{
																"kind": "text",
																"text": ", and "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 88,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L88"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "array",
															"elementType": {
																"type": "reflection",
																"declaration": {
																	"id": 191,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 192,
																			"name": "color",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 88,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L88"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "any"
																				}
																			}
																		},
																		{
																			"id": 193,
																			"name": "map",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 88,
																					"character": 28,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L88"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				192,
																				193
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 88,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L88"
																		}
																	]
																}
															}
														}
													}
												},
												{
													"id": 194,
													"name": "merge",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The merged "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " to update."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 93,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L93"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 195,
													"name": "stepNow",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The currently active state step, if any."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 94,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L94"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														190,
														194,
														195
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 88,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L88"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "getStep",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 212,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L212"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "getStep",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " update step function, for use with a "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " state object."
									}
								],
								"blockTags": [
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Make this fully and consistently extensible; improve "
											},
											{
												"kind": "code",
												"text": "`passCommand`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@todo",
										"content": [
											{
												"kind": "text",
												"text": "Example."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "buffer"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "command"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "subimage"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "onStep",
												"target": 245
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "onPass",
												"target": 250
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getPass",
												"target": 238
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroPass",
												"target": 504
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "inputs.getUniforms"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`to`"
											},
											{
												"kind": "text",
												"text": " object; containing a "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " update\n  step function and related properties, to be passed a "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.vert`"
											},
											{
												"kind": "text",
												"text": " The given/new "
											},
											{
												"kind": "code",
												"text": "`state.vert`"
											},
											{
												"kind": "text",
												"text": " vertex shader "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.frag`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`state.frag`"
											},
											{
												"kind": "text",
												"text": " fragment shader "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.verts]`"
											},
											{
												"kind": "text",
												"text": " Any cached pre-processed vertex shaders\n  "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": ", if "
											},
											{
												"kind": "code",
												"text": "`state.step.verts`"
											},
											{
												"kind": "text",
												"text": " was given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`[to.frags]`"
											},
											{
												"kind": "text",
												"text": " Any cached pre-processed fragment shaders\n  "
											},
											{
												"kind": "code",
												"text": "`GLSL`"
											},
											{
												"kind": "text",
												"text": ", if "
											},
											{
												"kind": "code",
												"text": "`state.step.verts`"
											},
											{
												"kind": "text",
												"text": " was given."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.uniforms`"
											},
											{
												"kind": "text",
												"text": " The given "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.count`"
											},
											{
												"kind": "text",
												"text": " The given/new "
											},
											{
												"kind": "code",
												"text": "`state.count`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.positions`"
											},
											{
												"kind": "text",
												"text": " The given/new "
											},
											{
												"kind": "code",
												"text": "`state.positions`"
											},
											{
												"kind": "text",
												"text": "; via\n  "
											},
											{
												"kind": "code",
												"text": "`api.buffer`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.pass`"
											},
											{
												"kind": "text",
												"text": " A "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " command function to draw a given pass;\n  via "
											},
											{
												"kind": "code",
												"text": "`api`"
											},
											{
												"kind": "text",
												"text": "/"
											},
											{
												"kind": "code",
												"text": "`api.command`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`to.run`"
											},
											{
												"kind": "text",
												"text": " The main step function, which performs all the\n  draw pass "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " commands for a given state step."
											}
										]
									}
								]
							},
							"parameters": [
								{
									"id": 198,
									"name": "api",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An API for "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " resources."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 199,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 200,
													"name": "buffer",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to set up a "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " buffer."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 147,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L147"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 201,
													"name": "clear",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to clear "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " view or "
															},
															{
																"kind": "code",
																"text": "`framebuffer`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 148,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L148"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												},
												{
													"id": 202,
													"name": "command",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Function to create a "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " render pass,\n  given options, to be called later with options; "
															},
															{
																"kind": "code",
																"text": "`api`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 149,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L149"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														200,
														201,
														202
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 147,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L147"
												}
											]
										}
									}
								},
								{
									"id": 203,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state to use. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": " and\n  "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 204,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 205,
													"name": "maps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped per-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": " per-pass\n  per-step. See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 153,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L153"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 206,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 207,
																	"name": "passes",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 155,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L155"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		207
																	]
																}
															],
															"sources": [
																{
																	"fileName": "step.js",
																	"line": 155,
																	"character": 3,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L155"
																}
															]
														}
													}
												},
												{
													"id": 208,
													"name": "merge",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any merged state "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "; uses separate state\n  textures if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 157,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L157"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 209,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 210,
																			"name": "texture",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 159,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L159"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "reflection",
																						"declaration": {
																							"id": 211,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 212,
																									"name": "subimage",
																									"kind": 1024,
																									"kindString": "Property",
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "step.js",
																											"line": 160,
																											"character": 3,
																											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L160"
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										212
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "step.js",
																									"line": 160,
																									"character": 3,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L160"
																								}
																							]
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 213,
																			"name": "update",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 162,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L162"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "reference",
																						"name": "Function",
																						"qualifiedName": "Function",
																						"package": "typescript"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				210,
																				213
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 159,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L159"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 214,
													"name": "pre",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The namespace prefix; "
															},
															{
																"kind": "code",
																"text": "`preDef`"
															},
															{
																"kind": "text",
																"text": " by default."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 171,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L171"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 215,
													"name": "step",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The properties for the step "
															},
															{
																"kind": "code",
																"text": "`GL`"
															},
															{
																"kind": "text",
																"text": " command."
															}
														]
													},
													"sources": [
														{
															"fileName": "step.js",
															"line": 172,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L172"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 216,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 217,
																			"name": "vert",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 173,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L173"
																				},
																				{
																					"fileName": "step.js",
																					"line": 184,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L184"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "string"
																					}
																				]
																			}
																		},
																		{
																			"id": 218,
																			"name": "frag",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 175,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L175"
																				},
																				{
																					"fileName": "step.js",
																					"line": 187,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L187"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 219,
																			"name": "uniforms",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 176,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L176"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 220,
																			"name": "positions",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 178,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L178"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 221,
																			"name": "count",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 180,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L180"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		},
																		{
																			"id": 222,
																			"name": "passCommand",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 182,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L182"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "any"
																			}
																		},
																		{
																			"id": 223,
																			"name": "verts",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 185,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L185"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				]
																			}
																		},
																		{
																			"id": 224,
																			"name": "frags",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "step.js",
																					"line": 188,
																					"character": 3,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L188"
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "array",
																						"elementType": {
																							"type": "intrinsic",
																							"name": "string"
																						}
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				217,
																				218,
																				219,
																				220,
																				221,
																				222,
																				223,
																				224
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "step.js",
																			"line": 173,
																			"character": 3,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L173"
																		}
																	]
																}
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														205,
														208,
														214,
														215
													]
												}
											],
											"sources": [
												{
													"fileName": "step.js",
													"line": 153,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L153"
												}
											]
										}
									}
								},
								{
									"id": 225,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				},
				{
					"id": 245,
					"name": "onStep",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 315,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L315"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 246,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "step.js",
									"line": 315,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L315"
								}
							],
							"signatures": [
								{
									"id": 247,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback upon each step.\n\n**See**\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.framebuffer"
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\n- A "
											},
											{
												"kind": "code",
												"text": "`stepProps`"
											},
											{
												"kind": "text",
												"text": " object to use for each of the step's next passes; or\n  "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish to use the given "
											},
											{
												"kind": "code",
												"text": "`props`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"parameters": [
										{
											"id": 248,
											"name": "props",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`props`"
													},
													{
														"kind": "text",
														"text": " passed to "
													},
													{
														"kind": "code",
														"text": "`run`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 249,
											"name": "step",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`framebuffer`"
													},
													{
														"kind": "text",
														"text": "s for "
													},
													{
														"kind": "code",
														"text": "`props.stepNow`"
													},
													{
														"kind": "text",
														"text": " from\n  "
													},
													{
														"kind": "code",
														"text": "`props.steps`"
													},
													{
														"kind": "text",
														"text": ", where the next state step will be drawn. See "
													},
													{
														"kind": "code",
														"text": "`getState`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"name": "framebuffer"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							]
						}
					}
				},
				{
					"id": 250,
					"name": "onPass",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 338,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L338"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 251,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "step.js",
									"line": 338,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L338"
								}
							],
							"signatures": [
								{
									"id": 252,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback upon each pass.\n\n**See**\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\n- A "
											},
											{
												"kind": "code",
												"text": "`passProps`"
											},
											{
												"kind": "text",
												"text": " object to use for the render "
											},
											{
												"kind": "code",
												"text": "`command`"
											},
											{
												"kind": "text",
												"text": " call; or "
											},
											{
												"kind": "code",
												"text": "`null`"
											},
											{
												"kind": "text",
												"text": "ish to\n  use the given "
											},
											{
												"kind": "code",
												"text": "`stepProps`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"parameters": [
										{
											"id": 253,
											"name": "stepProps",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The "
													},
													{
														"kind": "code",
														"text": "`props`"
													},
													{
														"kind": "text",
														"text": " passed to "
													},
													{
														"kind": "code",
														"text": "`run`"
													},
													{
														"kind": "text",
														"text": " via any "
													},
													{
														"kind": "code",
														"text": "`onStep`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 254,
											"name": "pass",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "The maps for the next pass. See "
													},
													{
														"kind": "code",
														"text": "`mapGroups`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								}
							]
						}
					}
				},
				{
					"id": 255,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "step.js",
							"line": 393,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L393"
						}
					],
					"target": 196
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						226,
						232,
						235
					]
				},
				{
					"title": "Functions",
					"children": [
						238,
						186,
						196
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						245,
						250
					]
				},
				{
					"title": "References",
					"children": [
						255
					]
				}
			],
			"sources": [
				{
					"fileName": "step.js",
					"line": 13,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/step.js#L13"
				}
			]
		},
		{
			"id": 361,
			"name": "uniforms",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The "
					},
					{
						"kind": "code",
						"text": "`gpgpu`"
					},
					{
						"kind": "text",
						"text": " inputs for "
					},
					{
						"kind": "code",
						"text": "`GL`"
					},
					{
						"kind": "text",
						"text": " "
					},
					{
						"kind": "code",
						"text": "`uniform`"
					},
					{
						"kind": "text",
						"text": "s."
					}
				]
			},
			"children": [
				{
					"id": 362,
					"name": "getUniforms",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"sources": [
						{
							"fileName": "uniforms.js",
							"line": 148,
							"character": 16,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L148"
						}
					],
					"signatures": [
						{
							"id": 363,
							"name": "getUniforms",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sets up "
									},
									{
										"kind": "code",
										"text": "`GL`"
									},
									{
										"kind": "text",
										"text": " "
									},
									{
										"kind": "code",
										"text": "`uniform`"
									},
									{
										"kind": "text",
										"text": " inputs for "
									},
									{
										"kind": "code",
										"text": "`gpgpu`"
									},
									{
										"kind": "text",
										"text": " calls, such as in "
									},
									{
										"kind": "code",
										"text": "`getStep`"
									},
									{
										"kind": "text",
										"text": ".\n\nThe "
									},
									{
										"kind": "code",
										"text": "`uniform`"
									},
									{
										"kind": "text",
										"text": "s are defined as callback hooks to be called on each render pass\nwith global context and local state "
									},
									{
										"kind": "code",
										"text": "`object`"
									},
									{
										"kind": "text",
										"text": "s, allowing the use of different\n"
									},
									{
										"kind": "code",
										"text": "`GL`"
									},
									{
										"kind": "text",
										"text": " APIs or author-defined hooks.\n\nHandles inputs of states as "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "s of data-"
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s, or merged into one\ndata-"
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "; for "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": "s of "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s, this arranges them on each step\nso "
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " can dynamically sample the flattened "
									},
									{
										"kind": "code",
										"text": "`array`"
									},
									{
										"kind": "text",
										"text": " of "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": "s by a\nconstant step index; otherwise the single merged "
									},
									{
										"kind": "code",
										"text": "`texture`"
									},
									{
										"kind": "text",
										"text": " is bound once, and\n"
									},
									{
										"kind": "code",
										"text": "`GLSL`"
									},
									{
										"kind": "text",
										"text": " can use a dynamic step index to sample states."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```javascript\nconst state = { pre: '', steps: 2, maps: mapStep({ values: [1, 2, 3] }) };\nconst api = {};\n\ngetUniforms(getState(api, { ...state, merge: false }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Separate state data-`texture`s in an `array` (e.g: `sampler2D[]`).\n  // State data-`texture`s for the 1st step ago, not bound as outputs.\n  'states[0]': (context, state) => {},\n  'states[1]': (context, state) => {},\n  // Merged `texture` not used.\n  states: (context, state) => null\n};\n\ngetUniforms(getState(api, { ...state, steps: 3, merge: false }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Separate state data-`texture`s in an `array` (e.g: `sampler2D[]`).\n  // State data-`texture`s for the 1st step ago, not bound as outputs.\n  'states[0]': (context, state) => {},\n  'states[1]': (context, state) => {}\n  // State data-`texture`s for the 2nd step ago, not bound as outputs.\n  'states[2]': (context, state) => {},\n  'states[3]': (context, state) => {},\n  // Merged `texture` not used.\n  states: (context, state) => null\n};\n\ngetUniforms(getState(api, { ...state, merge: true }, {})); // =>\n{\n  stepNow: (context, state) => {},\n  stateShape: (context, state) => {},\n  viewShape: (context, state) => {},\n  // Merged states in one data-`texture` upon every pass (e.g: `sampler2D`,\n  // or `sampler3D`/`sampler2DArray` where supported).\n  states: (context, state) => {},\n  // Separate data-`texture`s not used.\n  'states[0]': (context, state) => null,\n  'states[1]': (context, state) => null\n};\n```"
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getStep",
												"target": 196
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "mapGroups",
												"target": 58
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroSamples",
												"target": 449
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "macroTaps",
												"target": 453
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": []
									}
								]
							},
							"parameters": [
								{
									"id": 364,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`gpgpu`"
											},
											{
												"kind": "text",
												"text": " state. See "
											},
											{
												"kind": "code",
												"text": "`getState`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`mapGroups`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 365,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 366,
													"name": "steps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "The "
															},
															{
																"kind": "code",
																"text": "`array`"
															},
															{
																"kind": "text",
																"text": " of steps, or number of steps.\n  See "
															},
															{
																"kind": "code",
																"text": "`getState`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 81,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L81"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														]
													}
												},
												{
													"id": 367,
													"name": "maps",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "How values are grouped into\n  data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s (per-pass per-step). See "
															},
															{
																"kind": "code",
																"text": "`mapGroups`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 83,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L83"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 368,
															"name": "__type",
															"kind": 65536,
															"kindString": "Type literal",
															"flags": {},
															"children": [
																{
																	"id": 369,
																	"name": "textures",
																	"kind": 1024,
																	"kindString": "Property",
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 83,
																			"character": 12,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L83"
																		}
																	],
																	"type": {
																		"type": "array",
																		"elementType": {
																			"type": "array",
																			"elementType": {
																				"type": "intrinsic",
																				"name": "number"
																			}
																		}
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [
																		369
																	]
																}
															],
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 83,
																	"character": 11,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L83"
																}
															]
														}
													}
												},
												{
													"id": 370,
													"name": "pre",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Namespace prefix; "
															},
															{
																"kind": "code",
																"text": "`preDef`"
															},
															{
																"kind": "text",
																"text": " if not given."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 85,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L85"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 371,
													"name": "merge",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any merged state "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": ";\n  uses separate state data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s if not given. See "
															},
															{
																"kind": "code",
																"text": "`getState`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 86,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L86"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 372,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 373,
																			"name": "all",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 86,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L86"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 374,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 375,
																							"name": "texture",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 86,
																									"character": 18,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L86"
																								}
																							],
																							"type": {
																								"type": "intrinsic",
																								"name": "any"
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								375
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 86,
																							"character": 17,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L86"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				373
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 86,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L86"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 376,
													"name": "size",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any size of\n  "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " data-"
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "s (as "
															},
															{
																"kind": "code",
																"text": "`vec2(width, height)`"
															},
															{
																"kind": "text",
																"text": "); with:\n  - "
															},
															{
																"kind": "code",
																"text": "`shape`"
															},
															{
																"kind": "text",
																"text": ": Any "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " shape.\n  - "
															},
															{
																"kind": "code",
																"text": "`merge.shape`"
															},
															{
																"kind": "text",
																"text": ": Any merged "
															},
															{
																"kind": "code",
																"text": "`states`"
															},
															{
																"kind": "text",
																"text": " shape, otherwise "
															},
															{
																"kind": "code",
																"text": "`state`"
															},
															{
																"kind": "text",
																"text": " shape.\n\n  See "
															},
															{
																"kind": "code",
																"text": "`getState`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 89,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 377,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 378,
																			"name": "shape",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 89,
																					"character": 12,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
																				}
																			],
																			"type": {
																				"type": "array",
																				"elementType": {
																					"type": "intrinsic",
																					"name": "number"
																				}
																			}
																		},
																		{
																			"id": 379,
																			"name": "merge",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 89,
																					"character": 28,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 380,
																					"name": "__type",
																					"kind": 65536,
																					"kindString": "Type literal",
																					"flags": {},
																					"children": [
																						{
																							"id": 381,
																							"name": "shape",
																							"kind": 1024,
																							"kindString": "Property",
																							"flags": {
																								"isOptional": true
																							},
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 89,
																									"character": 36,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
																								}
																							],
																							"type": {
																								"type": "array",
																								"elementType": {
																									"type": "intrinsic",
																									"name": "number"
																								}
																							}
																						}
																					],
																					"groups": [
																						{
																							"title": "Properties",
																							"children": [
																								381
																							]
																						}
																					],
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 89,
																							"character": 35,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
																						}
																					]
																				}
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				378,
																				379
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 89,
																			"character": 11,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L89"
																		}
																	]
																}
															}
														]
													}
												},
												{
													"id": 382,
													"name": "bound",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Number of steps bound for output, not\n  used for input; for platforms preventing read/write of the same "
															},
															{
																"kind": "code",
																"text": "`texture`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 96,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L96"
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												},
												{
													"id": 383,
													"name": "uniforms",
													"kind": 1024,
													"kindString": "Property",
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Any "
															},
															{
																"kind": "code",
																"text": "`object`"
															},
															{
																"kind": "text",
																"text": " to merge the new\n  "
															},
															{
																"kind": "code",
																"text": "`uniforms`"
															},
															{
																"kind": "text",
																"text": " into. See "
															},
															{
																"kind": "code",
																"text": "`to`"
															},
															{
																"kind": "text",
																"text": "."
															}
														]
													},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 98,
															"character": 3,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L98"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														366,
														367,
														370,
														371,
														376,
														382,
														383
													]
												}
											],
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 81,
													"character": 3,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L81"
												}
											]
										}
									}
								},
								{
									"id": 384,
									"name": "to",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Any "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " to contain the\n  "
											},
											{
												"kind": "code",
												"text": "`uniform`"
											},
											{
												"kind": "text",
												"text": " hooks; modifies any "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": ", or a new "
											},
											{
												"kind": "code",
												"text": "`object`"
											},
											{
												"kind": "text",
												"text": " if not\n  given. See "
											},
											{
												"kind": "code",
												"text": "`state.uniforms`"
											},
											{
												"kind": "text",
												"text": " and "
											},
											{
												"kind": "code",
												"text": "`uniforms`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"defaultValue": "..."
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 385,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 386,
											"name": "stepNow",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 105,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L105"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 387,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 105,
															"character": 15,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L105"
														}
													],
													"signatures": [
														{
															"id": 388,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 389,
																	"name": "c",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 390,
																	"name": "state",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 391,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 392,
																					"name": "stepNow",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 105,
																							"character": 25,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L105"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						392
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 105,
																					"character": 24,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L105"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													]
												}
											}
										},
										{
											"id": 393,
											"name": "stateShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 106,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 394,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 106,
															"character": 18,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
														}
													],
													"signatures": [
														{
															"id": 395,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 396,
																	"name": "c",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																},
																{
																	"id": 397,
																	"name": "state",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 398,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 399,
																					"name": "size",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 106,
																							"character": 28,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
																						}
																					],
																					"type": {
																						"type": "reflection",
																						"declaration": {
																							"id": 400,
																							"name": "__type",
																							"kind": 65536,
																							"kindString": "Type literal",
																							"flags": {},
																							"children": [
																								{
																									"id": 401,
																									"name": "number",
																									"kind": 1024,
																									"kindString": "Property",
																									"flags": {},
																									"sources": [
																										{
																											"fileName": "uniforms.js",
																											"line": 106,
																											"character": 34,
																											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
																										}
																									],
																									"type": {
																										"type": "intrinsic",
																										"name": "any"
																									}
																								}
																							],
																							"groups": [
																								{
																									"title": "Properties",
																									"children": [
																										401
																									]
																								}
																							],
																							"sources": [
																								{
																									"fileName": "uniforms.js",
																									"line": 106,
																									"character": 33,
																									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
																								}
																							]
																						}
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						399
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 106,
																					"character": 27,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L106"
																				}
																			]
																		}
																	}
																}
															],
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 402,
											"name": "viewShape",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 107,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L107"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 403,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 107,
															"character": 17,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L107"
														}
													],
													"signatures": [
														{
															"id": 404,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"parameters": [
																{
																	"id": 405,
																	"name": "context",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {},
																	"type": {
																		"type": "reflection",
																		"declaration": {
																			"id": 406,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 407,
																					"name": "drawingBufferWidth",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 108,
																							"character": 18,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L108"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				},
																				{
																					"id": 408,
																					"name": "drawingBufferHeight",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 108,
																							"character": 44,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L108"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "number"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						407,
																						408
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 108,
																					"character": 17,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L108"
																				}
																			]
																		}
																	}
																},
																{
																	"id": 409,
																	"name": "s",
																	"kind": 32768,
																	"kindString": "Parameter",
																	"flags": {
																		"isOptional": true
																	},
																	"type": {
																		"type": "intrinsic",
																		"name": "any"
																	}
																}
															],
															"type": {
																"type": "tuple",
																"elements": [
																	{
																		"type": "intrinsic",
																		"name": "number"
																	},
																	{
																		"type": "intrinsic",
																		"name": "number"
																	}
																]
															}
														}
													]
												}
											}
										},
										{
											"id": 410,
											"name": "states",
											"kind": 1024,
											"kindString": "Property",
											"flags": {},
											"sources": [
												{
													"fileName": "uniforms.js",
													"line": 110,
													"character": 7,
													"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L110"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 411,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 110,
															"character": 14,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L110"
														}
													],
													"signatures": [
														{
															"id": 412,
															"name": "__type",
															"kind": 4096,
															"kindString": "Call signature",
															"flags": {},
															"type": {
																"type": "tuple"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												386,
												393,
												402,
												410
											]
										}
									],
									"sources": [
										{
											"fileName": "uniforms.js",
											"line": 104,
											"character": 13,
											"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L104"
										}
									]
								}
							}
						}
					]
				},
				{
					"id": 413,
					"name": "getUniform",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "uniforms.js",
							"line": 198,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L198"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 414,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "uniforms.js",
									"line": 198,
									"character": 3,
									"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L198"
								}
							],
							"signatures": [
								{
									"id": 415,
									"name": "__type",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A "
											},
											{
												"kind": "code",
												"text": "`function`"
											},
											{
												"kind": "text",
												"text": " hook to update a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " "
											},
											{
												"kind": "code",
												"text": "`uniform`"
											},
											{
												"kind": "text",
												"text": " value for a render pass.\n\n**See**\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getUniforms",
												"target": 362
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "getState",
												"target": 112
											},
											{
												"kind": "text",
												"text": "\n- "
											},
											{
												"kind": "inline-tag",
												"tag": "@link",
												"text": "state.texture"
											},
											{
												"kind": "text",
												"text": "\n\n**Returns**\nA "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " uniform to be bound via a "
											},
											{
												"kind": "code",
												"text": "`GL`"
											},
											{
												"kind": "text",
												"text": " API."
											}
										]
									},
									"parameters": [
										{
											"id": 416,
											"name": "context",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "General or global properties; with:\n  - "
													},
													{
														"kind": "code",
														"text": "`drawingBufferWidth`"
													},
													{
														"kind": "text",
														"text": ": Current "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " viewport width in pixels.\n  - "
													},
													{
														"kind": "code",
														"text": "`drawingBufferHeight`"
													},
													{
														"kind": "text",
														"text": ": Current "
													},
													{
														"kind": "code",
														"text": "`GL`"
													},
													{
														"kind": "text",
														"text": " viewport height in pixels."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 417,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 418,
															"name": "drawingBufferWidth",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 210,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L210"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 419,
															"name": "drawingBufferHeight",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 211,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L211"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																418,
																419
															]
														}
													],
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 209,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L209"
														}
													]
												}
											}
										},
										{
											"id": 420,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Local properties (the "
													},
													{
														"kind": "code",
														"text": "`gpgpu`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`state`"
													},
													{
														"kind": "text",
														"text": "); with:\n  - "
													},
													{
														"kind": "code",
														"text": "`stepNow`"
													},
													{
														"kind": "text",
														"text": ": The current step of the "
													},
													{
														"kind": "code",
														"text": "`gpgpu`"
													},
													{
														"kind": "text",
														"text": " "
													},
													{
														"kind": "code",
														"text": "`state`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`bound`"
													},
													{
														"kind": "text",
														"text": ": Number of steps bound to output; can't be bound as inputs.\n  - "
													},
													{
														"kind": "code",
														"text": "`merge`"
													},
													{
														"kind": "text",
														"text": ": Any "
													},
													{
														"kind": "code",
														"text": "`object`"
													},
													{
														"kind": "text",
														"text": " containing merged data-"
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ".\n    - "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ": Any merged data-"
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": ".\n  - "
													},
													{
														"kind": "code",
														"text": "`textures`"
													},
													{
														"kind": "text",
														"text": ": Textures per-step, as "
													},
													{
														"kind": "code",
														"text": "`array`"
													},
													{
														"kind": "text",
														"text": "s of "
													},
													{
														"kind": "code",
														"text": "`object`"
													},
													{
														"kind": "text",
														"text": "s with a "
													},
													{
														"kind": "code",
														"text": "`texture`"
													},
													{
														"kind": "text",
														"text": "\n    property. See "
													},
													{
														"kind": "code",
														"text": "`getState`"
													},
													{
														"kind": "text",
														"text": "."
													}
												]
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 421,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 422,
															"name": "stepNow",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 217,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L217"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 423,
															"name": "bound",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 218,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L218"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 424,
															"name": "merge",
															"kind": 1024,
															"kindString": "Property",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 219,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L219"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 425,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 426,
																			"name": "texture",
																			"kind": 1024,
																			"kindString": "Property",
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 219,
																					"character": 15,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L219"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "object"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				426
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "uniforms.js",
																			"line": 219,
																			"character": 14,
																			"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L219"
																		}
																	]
																}
															}
														},
														{
															"id": 427,
															"name": "textures",
															"kind": 1024,
															"kindString": "Property",
															"flags": {},
															"sources": [
																{
																	"fileName": "uniforms.js",
																	"line": 220,
																	"character": 7,
																	"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L220"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "array",
																	"elementType": {
																		"type": "reflection",
																		"declaration": {
																			"id": 428,
																			"name": "__type",
																			"kind": 65536,
																			"kindString": "Type literal",
																			"flags": {},
																			"children": [
																				{
																					"id": 429,
																					"name": "texture",
																					"kind": 1024,
																					"kindString": "Property",
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "uniforms.js",
																							"line": 220,
																							"character": 17,
																							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L220"
																						}
																					],
																					"type": {
																						"type": "intrinsic",
																						"name": "object"
																					}
																				}
																			],
																			"groups": [
																				{
																					"title": "Properties",
																					"children": [
																						429
																					]
																				}
																			],
																			"sources": [
																				{
																					"fileName": "uniforms.js",
																					"line": 220,
																					"character": 16,
																					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L220"
																				}
																			]
																		}
																	}
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																422,
																423,
																424,
																427
															]
														}
													],
													"sources": [
														{
															"fileName": "uniforms.js",
															"line": 216,
															"character": 11,
															"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L216"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "number"
												}
											},
											{
												"type": "reference",
												"name": "texture"
											},
											{
												"type": "intrinsic",
												"name": "object"
											}
										]
									}
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Functions",
					"children": [
						362
					]
				},
				{
					"title": "Type Aliases",
					"children": [
						413
					]
				}
			],
			"sources": [
				{
					"fileName": "uniforms.js",
					"line": 8,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/uniforms.js#L8"
				}
			]
		},
		{
			"id": 36,
			"name": "util/remain-div.glsl",
			"kind": 2,
			"kindString": "Module",
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "code",
						"text": "`./remain-div.glsl`"
					},
					{
						"kind": "text",
						"text": " transformed via "
					},
					{
						"kind": "code",
						"text": "`glslify`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 37,
					"name": "glsl",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isConst": true
					},
					"comment": {
						"summary": [
							{
								"kind": "code",
								"text": "`./remain-div.glsl`"
							},
							{
								"kind": "text",
								"text": " transformed via "
							},
							{
								"kind": "code",
								"text": "`glslify`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "util/remain-div.glsl.js",
							"line": 15,
							"character": 13,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/util/remain-div.glsl.js#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "transformed"
				},
				{
					"id": 38,
					"name": "default",
					"kind": 8388608,
					"kindString": "Reference",
					"flags": {},
					"sources": [
						{
							"fileName": "util/remain-div.glsl.js",
							"line": 17,
							"character": 0,
							"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/util/remain-div.glsl.js#L17"
						}
					],
					"target": 37
				}
			],
			"groups": [
				{
					"title": "Variables",
					"children": [
						37
					],
					"categories": [
						{
							"title": "GLSL",
							"children": [
								37
							]
						}
					]
				},
				{
					"title": "References",
					"children": [
						38
					]
				}
			],
			"sources": [
				{
					"fileName": "util/remain-div.glsl.js",
					"line": 7,
					"character": 0,
					"url": "https://github.com/keeffEoghan/gl-gpgpu/blob/0b68d8d/src/util/remain-div.glsl.js#L7"
				}
			]
		}
	],
	"groups": [
		{
			"title": "Modules",
			"children": [
				256,
				106,
				162,
				49,
				39,
				42,
				85,
				108,
				100,
				103,
				430,
				52,
				1,
				111,
				185,
				361,
				36
			],
			"categories": [
				{
					"title": "Root",
					"children": [
						85
					]
				},
				{
					"title": "API Hooks",
					"children": [
						256
					]
				},
				{
					"title": "GLSL",
					"children": [
						49,
						39,
						108,
						100,
						103,
						36
					]
				},
				{
					"title": "JS",
					"children": [
						106,
						162,
						42,
						85,
						430,
						52,
						1,
						111,
						185,
						361
					]
				}
			]
		}
	]
}